<Type Name="OptimisticConcurrencyException" FullName="System.Data.Entity.Core.OptimisticConcurrencyException">
  <TypeSignature Language="C#" Value="public sealed class OptimisticConcurrencyException : System.Data.Entity.Core.UpdateException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit OptimisticConcurrencyException extends System.Data.Entity.Core.UpdateException" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.OptimisticConcurrencyException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OptimisticConcurrencyException&#xA;Inherits UpdateException" />
  <TypeSignature Language="F#" Value="type OptimisticConcurrencyException = class&#xA;    inherit UpdateException" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.UpdateException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This exception is thrown when a update operation violates the concurrency constraint.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OptimisticConcurrencyException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.OptimisticConcurrencyException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of <see cref="T:System.Data.Entity.Core.OptimisticConcurrencyException" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OptimisticConcurrencyException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.OptimisticConcurrencyException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.OptimisticConcurrencyException : string -&gt; System.Data.Entity.Core.OptimisticConcurrencyException" Usage="new System.Data.Entity.Core.OptimisticConcurrencyException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message that describes the error.</param>
        <summary>
            Initializes a new instance of <see cref="T:System.Data.Entity.Core.OptimisticConcurrencyException" /> with a specialized error message.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OptimisticConcurrencyException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.OptimisticConcurrencyException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.OptimisticConcurrencyException : string * Exception -&gt; System.Data.Entity.Core.OptimisticConcurrencyException" Usage="new System.Data.Entity.Core.OptimisticConcurrencyException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The message that describes the error.</param>
        <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        <summary>
            Initializes a new instance of <see cref="T:System.Data.Entity.Core.OptimisticConcurrencyException" /> that uses a specified error message and a reference to the inner exception.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OptimisticConcurrencyException (string message, Exception innerException, System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Objects.ObjectStateEntry&gt; stateEntries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Objects.ObjectStateEntry&gt; stateEntries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Objects.ObjectStateEntry})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception, stateEntries As IEnumerable(Of ObjectStateEntry))" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.OptimisticConcurrencyException : string * Exception * seq&lt;System.Data.Entity.Core.Objects.ObjectStateEntry&gt; -&gt; System.Data.Entity.Core.OptimisticConcurrencyException" Usage="new System.Data.Entity.Core.OptimisticConcurrencyException (message, innerException, stateEntries)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="stateEntries" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Objects.ObjectStateEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="message">The message that describes the error.</param>
        <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        <param name="stateEntries">
            The enumerable collection of <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> objects.
            </param>
        <summary>
            Initializes a new instance of <see cref="T:System.Data.Entity.Core.OptimisticConcurrencyException" /> that uses a specified error message, a reference to the inner exception, and an enumerable collection of
            <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" />
            objects.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>