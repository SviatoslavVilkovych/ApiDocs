<Type Name="DbMigration" FullName="System.Data.Entity.Migrations.DbMigration">
  <TypeSignature Language="C#" Value="public abstract class DbMigration : System.Data.Entity.Migrations.Infrastructure.IDbMigration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbMigration extends System.Object implements class System.Data.Entity.Migrations.Infrastructure.IDbMigration" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Migrations.DbMigration" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbMigration&#xA;Implements IDbMigration" />
  <TypeSignature Language="F#" Value="type DbMigration = class&#xA;    interface IDbMigration" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Entity.Migrations.Infrastructure.IDbMigration</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
             Base class for code-based migrations.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbMigration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddColumn">
      <MemberSignature Language="C#" Value="protected internal void AddColumn (string table, string name, Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel&gt; columnAction, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddColumn(string table, string name, class System.Func`2&lt;class System.Data.Entity.Migrations.Builders.ColumnBuilder, class System.Data.Entity.Migrations.Model.ColumnModel&gt; columnAction, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.AddColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddColumn (table As String, name As String, columnAction As Func(Of ColumnBuilder, ColumnModel), Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.AddColumn : string * string * Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder, System.Data.Entity.Migrations.Model.ColumnModel&gt; * obj -&gt; unit" Usage="dbMigration.AddColumn (table, name, columnAction, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="columnAction" Type="System.Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel&gt;" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The name of the table to add the column to. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="name"> The name of the column to be added. </param>
        <param name="columnAction">
             An action that specifies the column to be added. i.e. c =&gt; c.Int(nullable: false,
             defaultValue: 3)
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to add a column to an existing table.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddForeignKey">
      <MemberSignature Language="C#" Value="protected internal void AddForeignKey (string dependentTable, string dependentColumn, string principalTable, string principalColumn = null, bool cascadeDelete = false, string name = null, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddForeignKey(string dependentTable, string dependentColumn, string principalTable, string principalColumn, bool cascadeDelete, string name, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddForeignKey (dependentTable As String, dependentColumn As String, principalTable As String, Optional principalColumn As String = null, Optional cascadeDelete As Boolean = false, Optional name As String = null, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.AddForeignKey : string * string * string * string * bool * string * obj -&gt; unit" Usage="dbMigration.AddForeignKey (dependentTable, dependentColumn, principalTable, principalColumn, cascadeDelete, name, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentTable" Type="System.String" />
        <Parameter Name="dependentColumn" Type="System.String" />
        <Parameter Name="principalTable" Type="System.String" />
        <Parameter Name="principalColumn" Type="System.String" />
        <Parameter Name="cascadeDelete" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentTable">
             The table that contains the foreign key column. Schema name is optional, if no schema is
             specified then dbo is assumed.
             </param>
        <param name="dependentColumn"> The foreign key column. </param>
        <param name="principalTable">
             The table that contains the column this foreign key references. Schema name is optional,
             if no schema is specified then dbo is assumed.
             </param>
        <param name="principalColumn">
             The column this foreign key references. If no value is supplied the primary key of the
             principal table will be referenced.
             </param>
        <param name="cascadeDelete">
             A value indicating if cascade delete should be configured for the foreign key
             relationship. If no value is supplied, cascade delete will be off.
             </param>
        <param name="name">
             The name of the foreign key constraint in the database. If no value is supplied a unique name will
             be generated.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to create a new foreign key constraint.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddForeignKey">
      <MemberSignature Language="C#" Value="protected internal void AddForeignKey (string dependentTable, string[] dependentColumns, string principalTable, string[] principalColumns = null, bool cascadeDelete = false, string name = null, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddForeignKey(string dependentTable, string[] dependentColumns, string principalTable, string[] principalColumns, bool cascadeDelete, string name, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String[],System.String,System.String[],System.Boolean,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddForeignKey (dependentTable As String, dependentColumns As String(), principalTable As String, Optional principalColumns As String() = null, Optional cascadeDelete As Boolean = false, Optional name As String = null, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.AddForeignKey : string * string[] * string * string[] * bool * string * obj -&gt; unit" Usage="dbMigration.AddForeignKey (dependentTable, dependentColumns, principalTable, principalColumns, cascadeDelete, name, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentTable" Type="System.String" />
        <Parameter Name="dependentColumns" Type="System.String[]" />
        <Parameter Name="principalTable" Type="System.String" />
        <Parameter Name="principalColumns" Type="System.String[]" />
        <Parameter Name="cascadeDelete" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentTable">
             The table that contains the foreign key columns. Schema name is optional, if no schema is
             specified then dbo is assumed.
             </param>
        <param name="dependentColumns"> The foreign key columns. </param>
        <param name="principalTable">
             The table that contains the columns this foreign key references. Schema name is optional,
             if no schema is specified then dbo is assumed.
             </param>
        <param name="principalColumns">
             The columns this foreign key references. If no value is supplied the primary key of the
             principal table will be referenced.
             </param>
        <param name="cascadeDelete">
             A value indicating if cascade delete should be configured for the foreign key
             relationship. If no value is supplied, cascade delete will be off.
             </param>
        <param name="name">
             The name of the foreign key constraint in the database. If no value is supplied a unique name will
             be generated.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to create a new foreign key constraint.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPrimaryKey">
      <MemberSignature Language="C#" Value="protected internal void AddPrimaryKey (string table, string column, string name = null, bool clustered = true, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddPrimaryKey(string table, string column, string name, bool clustered, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String,System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddPrimaryKey (table As String, column As String, Optional name As String = null, Optional clustered As Boolean = true, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.AddPrimaryKey : string * string * string * bool * obj -&gt; unit" Usage="dbMigration.AddPrimaryKey (table, column, name, clustered, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="column" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="clustered" Type="System.Boolean" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The table that contains the primary key column. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="column"> The primary key column. </param>
        <param name="name">
             The name of the primary key in the database. If no value is supplied a unique name will be
             generated.
             </param>
        <param name="clustered"> A value indicating whether or not this is a clustered primary key. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to create a new primary key.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPrimaryKey">
      <MemberSignature Language="C#" Value="protected internal void AddPrimaryKey (string table, string[] columns, string name = null, bool clustered = true, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddPrimaryKey(string table, string[] columns, string name, bool clustered, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String[],System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddPrimaryKey (table As String, columns As String(), Optional name As String = null, Optional clustered As Boolean = true, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.AddPrimaryKey : string * string[] * string * bool * obj -&gt; unit" Usage="dbMigration.AddPrimaryKey (table, columns, name, clustered, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="clustered" Type="System.Boolean" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The table that contains the primary key columns. Schema name is optional, if no schema is
             specified then dbo is assumed.
             </param>
        <param name="columns"> The primary key columns. </param>
        <param name="name">
             The name of the primary key in the database. If no value is supplied a unique name will be
             generated.
             </param>
        <param name="clustered"> A value indicating whether or not this is a clustered primary key. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to create a new primary key based on multiple columns.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterColumn">
      <MemberSignature Language="C#" Value="protected internal void AlterColumn (string table, string name, Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel&gt; columnAction, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AlterColumn(string table, string name, class System.Func`2&lt;class System.Data.Entity.Migrations.Builders.ColumnBuilder, class System.Data.Entity.Migrations.Model.ColumnModel&gt; columnAction, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.AlterColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AlterColumn (table As String, name As String, columnAction As Func(Of ColumnBuilder, ColumnModel), Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.AlterColumn : string * string * Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder, System.Data.Entity.Migrations.Model.ColumnModel&gt; * obj -&gt; unit" Usage="dbMigration.AlterColumn (table, name, columnAction, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="columnAction" Type="System.Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel&gt;" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The name of the table the column exists in. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="name"> The name of the column to be changed. </param>
        <param name="columnAction">
             An action that specifies the new definition for the column. i.e. c =&gt; c.String(nullable:
             false, defaultValue: "none")
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to alter the definition of an existing column.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterStoredProcedure">
      <MemberSignature Language="C#" Value="public void AlterStoredProcedure (string name, string body, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlterStoredProcedure(string name, string body, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlterStoredProcedure (name As String, body As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.AlterStoredProcedure : string * string * obj -&gt; unit" Usage="dbMigration.AlterStoredProcedure (name, body, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the stored procedure. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="body">The body of the stored procedure.</param>
        <param name="anonymousArguments">
             The additional arguments that may be processed by providers. Use anonymous type syntax
             to specify arguments. For example, 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to alter a stored procedure.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterStoredProcedure&lt;TParameters&gt;">
      <MemberSignature Language="C#" Value="public void AlterStoredProcedure&lt;TParameters&gt; (string name, Func&lt;System.Data.Entity.Migrations.Builders.ParameterBuilder,TParameters&gt; parametersAction, string body, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlterStoredProcedure&lt;TParameters&gt;(string name, class System.Func`2&lt;class System.Data.Entity.Migrations.Builders.ParameterBuilder, !!TParameters&gt; parametersAction, string body, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.AlterStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AlterStoredProcedure(Of TParameters) (name As String, parametersAction As Func(Of ParameterBuilder, TParameters), body As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.AlterStoredProcedure : string * Func&lt;System.Data.Entity.Migrations.Builders.ParameterBuilder, 'Parameters&gt; * string * obj -&gt; unit" Usage="dbMigration.AlterStoredProcedure (name, parametersAction, body, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParameters" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parametersAction" Type="System.Func&lt;System.Data.Entity.Migrations.Builders.ParameterBuilder,TParameters&gt;" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TParameters">
             The parameters in this alter stored procedure operation. You do not need to specify this
             type, it will be inferred from the <paramref name="parametersAction" /> parameter you supply.
             </typeparam>
        <param name="name">
             The name of the stored procedure. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="parametersAction">The action that specifies the parameters of the stored procedure.</param>
        <param name="body">The body of the stored procedure.</param>
        <param name="anonymousArguments">
             The additional arguments that may be processed by providers. Use anonymous type syntax
             to specify arguments. For example, 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to alter a stored procedure.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlterTableAnnotations&lt;TColumns&gt;">
      <MemberSignature Language="C#" Value="protected internal void AlterTableAnnotations&lt;TColumns&gt; (string name, Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder,TColumns&gt; columnsAction, System.Collections.Generic.IDictionary&lt;string,System.Data.Entity.Infrastructure.Annotations.AnnotationValues&gt; annotations, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AlterTableAnnotations&lt;TColumns&gt;(string name, class System.Func`2&lt;class System.Data.Entity.Migrations.Builders.ColumnBuilder, !!TColumns&gt; columnsAction, class System.Collections.Generic.IDictionary`2&lt;string, class System.Data.Entity.Infrastructure.Annotations.AnnotationValues&gt; annotations, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.AlterTableAnnotations``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AlterTableAnnotations(Of TColumns) (name As String, columnsAction As Func(Of ColumnBuilder, TColumns), annotations As IDictionary(Of String, AnnotationValues), Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.AlterTableAnnotations : string * Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder, 'Columns&gt; * System.Collections.Generic.IDictionary&lt;string, System.Data.Entity.Infrastructure.Annotations.AnnotationValues&gt; * obj -&gt; unit" Usage="dbMigration.AlterTableAnnotations (name, columnsAction, annotations, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TColumns" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="columnsAction" Type="System.Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder,TColumns&gt;" />
        <Parameter Name="annotations" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Data.Entity.Infrastructure.Annotations.AnnotationValues&gt;" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TColumns">
             The columns in this operation. You do not need to specify this type, it will
             be inferred from the columnsAction parameter you supply.
             </typeparam>
        <param name="name"> The name of the table. Schema name is optional, if no schema is specified then dbo is assumed. </param>
        <param name="columnsAction">
             An action that specifies the columns to be included in the table. i.e. t =&gt; new { Id =
             t.Int(identity: true), Name = t.String() }
             </param>
        <param name="annotations">The custom annotations on the table that have changed.</param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to handle changes in the annotations defined on tables.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="protected internal void CreateIndex (string table, string column, bool unique = false, string name = null, bool clustered = false, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CreateIndex(string table, string column, bool unique, string name, bool clustered, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String,System.Boolean,System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CreateIndex (table As String, column As String, Optional unique As Boolean = false, Optional name As String = null, Optional clustered As Boolean = false, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.CreateIndex : string * string * bool * string * bool * obj -&gt; unit" Usage="dbMigration.CreateIndex (table, column, unique, name, clustered, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="column" Type="System.String" />
        <Parameter Name="unique" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="clustered" Type="System.Boolean" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The name of the table to create the index on. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="column"> The name of the column to create the index on. </param>
        <param name="unique">
             A value indicating if this is a unique index. If no value is supplied a non-unique index will be
             created.
             </param>
        <param name="name">
             The name to use for the index in the database. If no value is supplied a unique name will be
             generated.
             </param>
        <param name="clustered"> A value indicating whether or not this is a clustered index. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to create an index on a single column.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateIndex">
      <MemberSignature Language="C#" Value="protected internal void CreateIndex (string table, string[] columns, bool unique = false, string name = null, bool clustered = false, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CreateIndex(string table, string[] columns, bool unique, string name, bool clustered, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String[],System.Boolean,System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CreateIndex (table As String, columns As String(), Optional unique As Boolean = false, Optional name As String = null, Optional clustered As Boolean = false, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.CreateIndex : string * string[] * bool * string * bool * obj -&gt; unit" Usage="dbMigration.CreateIndex (table, columns, unique, name, clustered, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="unique" Type="System.Boolean" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="clustered" Type="System.Boolean" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The name of the table to create the index on. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="columns"> The name of the columns to create the index on. </param>
        <param name="unique">
             A value indicating if this is a unique index. If no value is supplied a non-unique index will be
             created.
             </param>
        <param name="name">
             The name to use for the index in the database. If no value is supplied a unique name will be
             generated.
             </param>
        <param name="clustered"> A value indicating whether or not this is a clustered index. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to create an index on multiple columns.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedure">
      <MemberSignature Language="C#" Value="public void CreateStoredProcedure (string name, string body, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateStoredProcedure(string name, string body, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateStoredProcedure (name As String, body As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.CreateStoredProcedure : string * string * obj -&gt; unit" Usage="dbMigration.CreateStoredProcedure (name, body, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the stored procedure. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="body">The body of the stored procedure.</param>
        <param name="anonymousArguments">
             The additional arguments that may be processed by providers. Use anonymous type syntax
             to specify arguments. For example, 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to create a new stored procedure.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStoredProcedure&lt;TParameters&gt;">
      <MemberSignature Language="C#" Value="public void CreateStoredProcedure&lt;TParameters&gt; (string name, Func&lt;System.Data.Entity.Migrations.Builders.ParameterBuilder,TParameters&gt; parametersAction, string body, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateStoredProcedure&lt;TParameters&gt;(string name, class System.Func`2&lt;class System.Data.Entity.Migrations.Builders.ParameterBuilder, !!TParameters&gt; parametersAction, string body, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.CreateStoredProcedure``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ParameterBuilder,``0},System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateStoredProcedure(Of TParameters) (name As String, parametersAction As Func(Of ParameterBuilder, TParameters), body As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.CreateStoredProcedure : string * Func&lt;System.Data.Entity.Migrations.Builders.ParameterBuilder, 'Parameters&gt; * string * obj -&gt; unit" Usage="dbMigration.CreateStoredProcedure (name, parametersAction, body, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TParameters" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parametersAction" Type="System.Func&lt;System.Data.Entity.Migrations.Builders.ParameterBuilder,TParameters&gt;" />
        <Parameter Name="body" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TParameters">
             The parameters in this create stored procedure operation. You do not need to specify this
             type, it will be inferred from the <paramref name="parametersAction" /> parameter you supply.
             </typeparam>
        <param name="name">
             The name of the stored procedure. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="parametersAction">The action that specifies the parameters of the stored procedure.</param>
        <param name="body">The body of the stored procedure.</param>
        <param name="anonymousArguments">
             The additional arguments that may be processed by providers. Use anonymous type syntax
             to specify arguments. For example, 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to create a new stored procedure.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable&lt;TColumns&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Data.Entity.Migrations.Builders.TableBuilder&lt;TColumns&gt; CreateTable&lt;TColumns&gt; (string name, Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder,TColumns&gt; columnsAction, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.Entity.Migrations.Builders.TableBuilder`1&lt;!!TColumns&gt; CreateTable&lt;TColumns&gt;(string name, class System.Func`2&lt;class System.Data.Entity.Migrations.Builders.ColumnBuilder, !!TColumns&gt; columnsAction, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function CreateTable(Of TColumns) (name As String, columnsAction As Func(Of ColumnBuilder, TColumns), Optional anonymousArguments As Object = null) As TableBuilder(Of TColumns)" />
      <MemberSignature Language="F#" Value="member this.CreateTable : string * Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder, 'Columns&gt; * obj -&gt; System.Data.Entity.Migrations.Builders.TableBuilder&lt;'Columns&gt;" Usage="dbMigration.CreateTable (name, columnsAction, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Migrations.Builders.TableBuilder&lt;TColumns&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TColumns" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="columnsAction" Type="System.Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder,TColumns&gt;" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TColumns">
             The columns in this create table operation. You do not need to specify this type, it will
             be inferred from the columnsAction parameter you supply.
             </typeparam>
        <param name="name"> The name of the table. Schema name is optional, if no schema is specified then dbo is assumed. </param>
        <param name="columnsAction">
             An action that specifies the columns to be included in the table. i.e. t =&gt; new { Id =
             t.Int(identity: true), Name = t.String() }
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to create a new table.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <returns> An object that allows further configuration of the table creation operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable&lt;TColumns&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Data.Entity.Migrations.Builders.TableBuilder&lt;TColumns&gt; CreateTable&lt;TColumns&gt; (string name, Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder,TColumns&gt; columnsAction, System.Collections.Generic.IDictionary&lt;string,object&gt; annotations, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.Entity.Migrations.Builders.TableBuilder`1&lt;!!TColumns&gt; CreateTable&lt;TColumns&gt;(string name, class System.Func`2&lt;class System.Data.Entity.Migrations.Builders.ColumnBuilder, !!TColumns&gt; columnsAction, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; annotations, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function CreateTable(Of TColumns) (name As String, columnsAction As Func(Of ColumnBuilder, TColumns), annotations As IDictionary(Of String, Object), Optional anonymousArguments As Object = null) As TableBuilder(Of TColumns)" />
      <MemberSignature Language="F#" Value="member this.CreateTable : string * Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder, 'Columns&gt; * System.Collections.Generic.IDictionary&lt;string, obj&gt; * obj -&gt; System.Data.Entity.Migrations.Builders.TableBuilder&lt;'Columns&gt;" Usage="dbMigration.CreateTable (name, columnsAction, annotations, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Migrations.Builders.TableBuilder&lt;TColumns&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TColumns" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="columnsAction" Type="System.Func&lt;System.Data.Entity.Migrations.Builders.ColumnBuilder,TColumns&gt;" />
        <Parameter Name="annotations" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TColumns">
             The columns in this create table operation. You do not need to specify this type, it will
             be inferred from the columnsAction parameter you supply.
             </typeparam>
        <param name="name"> The name of the table. Schema name is optional, if no schema is specified then dbo is assumed. </param>
        <param name="columnsAction">
             An action that specifies the columns to be included in the table. i.e. t =&gt; new { Id =
             t.Int(identity: true), Name = t.String() }
             </param>
        <param name="annotations">Custom annotations that exist on the table to be created. May be null or empty.</param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to create a new table.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <returns> An object that allows further configuration of the table creation operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Down">
      <MemberSignature Language="C#" Value="public virtual void Down ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Down() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.Down" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Down ()" />
      <MemberSignature Language="F#" Value="abstract member Down : unit -&gt; unit&#xA;override this.Down : unit -&gt; unit" Usage="dbMigration.Down " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Operations to be performed during the downgrade process.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropColumn">
      <MemberSignature Language="C#" Value="protected internal void DropColumn (string table, string name, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropColumn(string table, string name, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropColumn (table As String, name As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropColumn : string * string * obj -&gt; unit" Usage="dbMigration.DropColumn (table, name, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The name of the table to drop the column from. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="name"> The name of the column to be dropped. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop an existing column.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropColumn">
      <MemberSignature Language="C#" Value="protected internal void DropColumn (string table, string name, System.Collections.Generic.IDictionary&lt;string,object&gt; removedAnnotations, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropColumn(string table, string name, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; removedAnnotations, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropColumn (table As String, name As String, removedAnnotations As IDictionary(Of String, Object), Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropColumn : string * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * obj -&gt; unit" Usage="dbMigration.DropColumn (table, name, removedAnnotations, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="removedAnnotations" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The name of the table to drop the column from. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="name"> The name of the column to be dropped. </param>
        <param name="removedAnnotations">Custom annotations that exist on the column that is being dropped. May be null or empty.</param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop an existing column.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropForeignKey">
      <MemberSignature Language="C#" Value="protected internal void DropForeignKey (string dependentTable, string name, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropForeignKey(string dependentTable, string name, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropForeignKey (dependentTable As String, name As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropForeignKey : string * string * obj -&gt; unit" Usage="dbMigration.DropForeignKey (dependentTable, name, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentTable" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentTable">
             The table that contains the foreign key column. Schema name is optional, if no schema is
             specified then dbo is assumed.
             </param>
        <param name="name"> The name of the foreign key constraint in the database. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop a foreign key constraint based on its name.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropForeignKey">
      <MemberSignature Language="C#" Value="protected internal void DropForeignKey (string dependentTable, string dependentColumn, string principalTable, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropForeignKey(string dependentTable, string dependentColumn, string principalTable, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropForeignKey (dependentTable As String, dependentColumn As String, principalTable As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropForeignKey : string * string * string * obj -&gt; unit" Usage="dbMigration.DropForeignKey (dependentTable, dependentColumn, principalTable, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentTable" Type="System.String" />
        <Parameter Name="dependentColumn" Type="System.String" />
        <Parameter Name="principalTable" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentTable">
             The table that contains the foreign key column. Schema name is optional, if no schema is
             specified then dbo is assumed.
             </param>
        <param name="dependentColumn"> The foreign key column. </param>
        <param name="principalTable">
             The table that contains the column this foreign key references. Schema name is optional,
             if no schema is specified then dbo is assumed.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop a foreign key constraint based on the column it targets.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropForeignKey">
      <MemberSignature Language="C#" Value="protected internal void DropForeignKey (string dependentTable, string[] dependentColumns, string principalTable, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropForeignKey(string dependentTable, string[] dependentColumns, string principalTable, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String[],System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropForeignKey (dependentTable As String, dependentColumns As String(), principalTable As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropForeignKey : string * string[] * string * obj -&gt; unit" Usage="dbMigration.DropForeignKey (dependentTable, dependentColumns, principalTable, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentTable" Type="System.String" />
        <Parameter Name="dependentColumns" Type="System.String[]" />
        <Parameter Name="principalTable" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentTable">
             The table that contains the foreign key columns. Schema name is optional, if no schema is
             specified then dbo is assumed.
             </param>
        <param name="dependentColumns"> The foreign key columns. </param>
        <param name="principalTable">
             The table that contains the columns this foreign key references. Schema name is optional,
             if no schema is specified then dbo is assumed.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop a foreign key constraint based on the columns it targets.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropForeignKey">
      <MemberSignature Language="C#" Value="protected internal void DropForeignKey (string dependentTable, string dependentColumn, string principalTable, string principalColumn, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropForeignKey(string dependentTable, string dependentColumn, string principalTable, string principalColumn, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropForeignKey (dependentTable As String, dependentColumn As String, principalTable As String, principalColumn As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropForeignKey : string * string * string * string * obj -&gt; unit" Usage="dbMigration.DropForeignKey (dependentTable, dependentColumn, principalTable, principalColumn, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA1801:ReviewUnusedParameters", MessageId="principalColumn")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The principalColumn parameter is no longer required and can be removed.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependentTable" Type="System.String" />
        <Parameter Name="dependentColumn" Type="System.String" />
        <Parameter Name="principalTable" Type="System.String" />
        <Parameter Name="principalColumn" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependentTable">
             The table that contains the foreign key column.
             Schema name is optional, if no schema is specified then dbo is assumed.
             </param>
        <param name="dependentColumn">The foreign key column.</param>
        <param name="principalTable">
             The table that contains the column this foreign key references.
             Schema name is optional, if no schema is specified then dbo is assumed.
             </param>
        <param name="principalColumn">The columns this foreign key references.</param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers.
             Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop a foreign key constraint based on the column it targets.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropIndex">
      <MemberSignature Language="C#" Value="protected internal void DropIndex (string table, string name, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropIndex(string table, string name, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropIndex (table As String, name As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropIndex : string * string * obj -&gt; unit" Usage="dbMigration.DropIndex (table, name, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The name of the table to drop the index from. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="name"> The name of the index to be dropped. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop an index based on its name.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropIndex">
      <MemberSignature Language="C#" Value="protected internal void DropIndex (string table, string[] columns, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropIndex(string table, string[] columns, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropIndex (table As String, columns As String(), Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropIndex : string * string[] * obj -&gt; unit" Usage="dbMigration.DropIndex (table, columns, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The name of the table to drop the index from. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="columns"> The name of the column(s) the index targets. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop an index based on the columns it targets.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropPrimaryKey">
      <MemberSignature Language="C#" Value="protected internal void DropPrimaryKey (string table, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropPrimaryKey(string table, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropPrimaryKey (table As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropPrimaryKey : string * obj -&gt; unit" Usage="dbMigration.DropPrimaryKey (table, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The table that contains the primary key column. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop an existing primary key that was created with the default name.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropPrimaryKey">
      <MemberSignature Language="C#" Value="protected internal void DropPrimaryKey (string table, string name, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropPrimaryKey(string table, string name, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropPrimaryKey (table As String, name As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropPrimaryKey : string * string * obj -&gt; unit" Usage="dbMigration.DropPrimaryKey (table, name, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The table that contains the primary key column. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="name"> The name of the primary key to be dropped. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop an existing primary key that does not have the default name.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropStoredProcedure">
      <MemberSignature Language="C#" Value="public void DropStoredProcedure (string name, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropStoredProcedure(string name, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropStoredProcedure(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropStoredProcedure (name As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropStoredProcedure : string * obj -&gt; unit" Usage="dbMigration.DropStoredProcedure (name, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the procedure to drop. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="anonymousArguments">
             The additional arguments that may be processed by providers. Use anonymous type syntax
             to specify arguments. For example, 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop an existing stored procedure with the specified name.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropTable">
      <MemberSignature Language="C#" Value="protected internal void DropTable (string name, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropTable(string name, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropTable (name As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropTable : string * obj -&gt; unit" Usage="dbMigration.DropTable (name, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the table to be dropped. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop a table.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropTable">
      <MemberSignature Language="C#" Value="protected internal void DropTable (string name, System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; removedColumnAnnotations, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropTable(string name, class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; removedColumnAnnotations, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropTable (name As String, removedColumnAnnotations As IDictionary(Of String, IDictionary(Of String, Object)), Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropTable : string * System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IDictionary&lt;string, obj&gt;&gt; * obj -&gt; unit" Usage="dbMigration.DropTable (name, removedColumnAnnotations, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="removedColumnAnnotations" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the table to be dropped. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="removedColumnAnnotations">Custom annotations that exist on columns of the table that is being dropped. May be null or empty.</param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop a table.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropTable">
      <MemberSignature Language="C#" Value="protected internal void DropTable (string name, System.Collections.Generic.IDictionary&lt;string,object&gt; removedAnnotations, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropTable(string name, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; removedAnnotations, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropTable (name As String, removedAnnotations As IDictionary(Of String, Object), Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropTable : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * obj -&gt; unit" Usage="dbMigration.DropTable (name, removedAnnotations, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="removedAnnotations" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the table to be dropped. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="removedAnnotations">Custom annotations that exist on the table that is being dropped. May be null or empty.</param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop a table.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DropTable">
      <MemberSignature Language="C#" Value="protected internal void DropTable (string name, System.Collections.Generic.IDictionary&lt;string,object&gt; removedAnnotations, System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; removedColumnAnnotations, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void DropTable(string name, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; removedAnnotations, class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; removedColumnAnnotations, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IDictionary{System.String,System.Object}},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub DropTable (name As String, removedAnnotations As IDictionary(Of String, Object), removedColumnAnnotations As IDictionary(Of String, IDictionary(Of String, Object)), Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.DropTable : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.IDictionary&lt;string, obj&gt;&gt; * obj -&gt; unit" Usage="dbMigration.DropTable (name, removedAnnotations, removedColumnAnnotations, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="removedAnnotations" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="removedColumnAnnotations" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the table to be dropped. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="removedAnnotations">Custom annotations that exist on the table that is being dropped. May be null or empty.</param>
        <param name="removedColumnAnnotations">Custom annotations that exist on columns of the table that is being dropped. May be null or empty.</param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to drop a table.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dbMigration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dbMigration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="dbMigration.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="MemberwiseClone">
      <MemberSignature Language="C#" Value="protected object MemberwiseClone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object MemberwiseClone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.MemberwiseClone" />
      <MemberSignature Language="VB.NET" Value="Protected Function MemberwiseClone () As Object" />
      <MemberSignature Language="F#" Value="override this.MemberwiseClone : unit -&gt; obj" Usage="dbMigration.MemberwiseClone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="MoveStoredProcedure">
      <MemberSignature Language="C#" Value="protected internal void MoveStoredProcedure (string name, string newSchema, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void MoveStoredProcedure(string name, string newSchema, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.MoveStoredProcedure(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub MoveStoredProcedure (name As String, newSchema As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.MoveStoredProcedure : string * string * obj -&gt; unit" Usage="dbMigration.MoveStoredProcedure (name, newSchema, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="newSchema" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the stored procedure to be moved. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="newSchema"> The schema the stored procedure is to be moved to. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to move a stored procedure to a new schema.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveTable">
      <MemberSignature Language="C#" Value="protected internal void MoveTable (string name, string newSchema, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void MoveTable(string name, string newSchema, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.MoveTable(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub MoveTable (name As String, newSchema As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.MoveTable : string * string * obj -&gt; unit" Usage="dbMigration.MoveTable (name, newSchema, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="newSchema" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the table to be moved. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="newSchema"> The schema the table is to be moved to. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to move a table to a new schema.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameColumn">
      <MemberSignature Language="C#" Value="protected internal void RenameColumn (string table, string name, string newName, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RenameColumn(string table, string name, string newName, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.RenameColumn(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RenameColumn (table As String, name As String, newName As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.RenameColumn : string * string * string * obj -&gt; unit" Usage="dbMigration.RenameColumn (table, name, newName, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The name of the table that contains the column to be renamed. Schema name is optional, if no
             schema is specified then dbo is assumed.
             </param>
        <param name="name"> The name of the column to be renamed. </param>
        <param name="newName"> The new name for the column. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to rename a column.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameIndex">
      <MemberSignature Language="C#" Value="protected internal void RenameIndex (string table, string name, string newName, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RenameIndex(string table, string name, string newName, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.RenameIndex(System.String,System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RenameIndex (table As String, name As String, newName As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.RenameIndex : string * string * string * obj -&gt; unit" Usage="dbMigration.RenameIndex (table, name, newName, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="table">
             The name of the table that contains the index to be renamed. Schema name is optional, if no
             schema is specified then dbo is assumed.
             </param>
        <param name="name"> The name of the index to be renamed. </param>
        <param name="newName"> The new name for the index. </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to rename an index.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameStoredProcedure">
      <MemberSignature Language="C#" Value="protected internal void RenameStoredProcedure (string name, string newName, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RenameStoredProcedure(string name, string newName, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.RenameStoredProcedure(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RenameStoredProcedure (name As String, newName As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.RenameStoredProcedure : string * string * obj -&gt; unit" Usage="dbMigration.RenameStoredProcedure (name, newName, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the stored procedure to be renamed. Schema name is optional, if no schema is specified
             then dbo is assumed.
             </param>
        <param name="newName">
             The new name for the stored procedure. Schema name is optional, if no schema is specified then
             dbo is assumed.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to rename a stored procedure. To change the schema of a stored procedure use MoveStoredProcedure
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameTable">
      <MemberSignature Language="C#" Value="protected internal void RenameTable (string name, string newName, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RenameTable(string name, string newName, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.RenameTable(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RenameTable (name As String, newName As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.RenameTable : string * string * obj -&gt; unit" Usage="dbMigration.RenameTable (name, newName, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
             The name of the table to be renamed. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="newName">
             The new name for the table. Schema name is optional, if no schema is specified then dbo is
             assumed.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to rename a table. To change the schema of a table use MoveTable.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sql">
      <MemberSignature Language="C#" Value="protected internal void Sql (string sql, bool suppressTransaction = false, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void Sql(string sql, bool suppressTransaction, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.Sql(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub Sql (sql As String, Optional suppressTransaction As Boolean = false, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Sql : string * bool * obj -&gt; unit" Usage="dbMigration.Sql (sql, suppressTransaction, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames", MessageId="0#")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="suppressTransaction" Type="System.Boolean" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sql"> The SQL to be executed. </param>
        <param name="suppressTransaction">
             A value indicating if the SQL should be executed outside of the transaction being
             used for the migration process. If no value is supplied the SQL will be executed within the transaction.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to execute a SQL command or set of SQL commands.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlFile">
      <MemberSignature Language="C#" Value="protected internal void SqlFile (string sqlFile, bool suppressTransaction = false, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void SqlFile(string sqlFile, bool suppressTransaction, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.SqlFile(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub SqlFile (sqlFile As String, Optional suppressTransaction As Boolean = false, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.SqlFile : string * bool * obj -&gt; unit" Usage="dbMigration.SqlFile (sqlFile, suppressTransaction, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames", MessageId="0#")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlFile" Type="System.String" />
        <Parameter Name="suppressTransaction" Type="System.Boolean" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sqlFile"> 
             The SQL file to be executed.  Relative paths are assumed to be relative to the current AppDomain's BaseDirectory.
             </param>
        <param name="suppressTransaction">
             A value indicating if the SQL should be executed outside of the transaction being
             used for the migration process. If no value is supplied the SQL will be executed within the transaction.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to execute a SQL file.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlResource">
      <MemberSignature Language="C#" Value="protected internal void SqlResource (string sqlResource, System.Reflection.Assembly resourceAssembly = null, bool suppressTransaction = false, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void SqlResource(string sqlResource, class System.Reflection.Assembly resourceAssembly, bool suppressTransaction, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.SqlResource(System.String,System.Reflection.Assembly,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub SqlResource (sqlResource As String, Optional resourceAssembly As Assembly = null, Optional suppressTransaction As Boolean = false, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="member this.SqlResource : string * System.Reflection.Assembly * bool * obj -&gt; unit" Usage="dbMigration.SqlResource (sqlResource, resourceAssembly, suppressTransaction, anonymousArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames", MessageId="0#")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlResource" Type="System.String" />
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="suppressTransaction" Type="System.Boolean" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sqlResource"> The manifest resource name of the SQL resource file to be executed. </param>
        <param name="resourceAssembly">
             The assembly containing the resource file. The calling assembly is assumed if not provided.
             </param>
        <param name="suppressTransaction">
             A value indicating if the SQL should be executed outside of the transaction being
             used for the migration process. If no value is supplied the SQL will be executed within the transaction.
             </param>
        <param name="anonymousArguments">
             Additional arguments that may be processed by providers. Use anonymous type syntax to
             specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
             </param>
        <summary>
             Adds an operation to execute a SQL resource file.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Entity.Migrations.Infrastructure.IDbMigration.AddOperation">
      <MemberSignature Language="C#" Value="void IDbMigration.AddOperation (System.Data.Entity.Migrations.Model.MigrationOperation migrationOperation);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Entity.Migrations.Infrastructure.IDbMigration.AddOperation(class System.Data.Entity.Migrations.Model.MigrationOperation migrationOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.System#Data#Entity#Migrations#Infrastructure#IDbMigration#AddOperation(System.Data.Entity.Migrations.Model.MigrationOperation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.Migrations.Infrastructure.IDbMigration.AddOperation(System.Data.Entity.Migrations.Model.MigrationOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationOperation" Type="System.Data.Entity.Migrations.Model.MigrationOperation" />
      </Parameters>
      <Docs>
        <param name="migrationOperation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dbMigration.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Up">
      <MemberSignature Language="C#" Value="public abstract void Up ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Up() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.DbMigration.Up" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Up ()" />
      <MemberSignature Language="F#" Value="abstract member Up : unit -&gt; unit" Usage="dbMigration.Up " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Operations to be performed during the upgrade process.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>