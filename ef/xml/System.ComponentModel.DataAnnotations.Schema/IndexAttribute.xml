<Type Name="IndexAttribute" FullName="System.ComponentModel.DataAnnotations.Schema.IndexAttribute">
  <TypeSignature Language="C#" Value="public class IndexAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IndexAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.Schema.IndexAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class IndexAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type IndexAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1813:AvoidUnsealedAttributes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1019:DefineAccessorsForAttributeArguments")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            When this attribute is placed on a property it indicates that the database column to which the
            property is mapped has an index.
            </summary>
    <remarks>
            This attribute is used by Entity Framework Migrations to create indexes on mapped database columns.
            Multi-column indexes are created by using the same index name in multiple attributes. The information
            in these attributes is then merged together to specify the actual database index.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:System.ComponentModel.DataAnnotations.Schema.IndexAttribute" /> instance for an index that will be named by convention and
            has no column order, clustering, or uniqueness specified.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.Schema.IndexAttribute : string -&gt; System.ComponentModel.DataAnnotations.Schema.IndexAttribute" Usage="new System.ComponentModel.DataAnnotations.Schema.IndexAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The index name.</param>
        <summary>
            Creates a <see cref="T:System.ComponentModel.DataAnnotations.Schema.IndexAttribute" /> instance for an index with the given name and
            has no column order, clustering, or uniqueness specified.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IndexAttribute (string name, int order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, order As Integer)" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.Schema.IndexAttribute : string * int -&gt; System.ComponentModel.DataAnnotations.Schema.IndexAttribute" Usage="new System.ComponentModel.DataAnnotations.Schema.IndexAttribute (name, order)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="order" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">The index name.</param>
        <param name="order">A number which will be used to determine column ordering for multi-column indexes.</param>
        <summary>
            Creates a <see cref="T:System.ComponentModel.DataAnnotations.Schema.IndexAttribute" /> instance for an index with the given name and column order, 
            but with no clustering or uniqueness specified.
            </summary>
        <remarks>
            Multi-column indexes are created by using the same index name in multiple attributes. The information
            in these attributes is then merged together to specify the actual database index.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="protected virtual bool Equals (System.ComponentModel.DataAnnotations.Schema.IndexAttribute other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool Equals(class System.ComponentModel.DataAnnotations.Schema.IndexAttribute other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.Equals(System.ComponentModel.DataAnnotations.Schema.IndexAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Equals (other As IndexAttribute) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : System.ComponentModel.DataAnnotations.Schema.IndexAttribute -&gt; bool" Usage="indexAttribute.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ComponentModel.DataAnnotations.Schema.IndexAttribute" />
      </Parameters>
      <Docs>
        <param name="other">The attribute to compare.</param>
        <summary>
            Returns true if this attribute specifies the same name and configuration as the given attribute.
            </summary>
        <returns>True if the other object is equal to this object; otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="indexAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The attribute to compare.</param>
        <summary>
            Returns true if this attribute specifies the same name and configuration as the given attribute.
            </summary>
        <returns>True if the other object is equal to this object; otherwise false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="indexAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public virtual bool IsClustered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClustered" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClustered" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsClustered As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsClustered : bool with get, set" Usage="System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClustered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set this property to true to define a clustered index. Set this property to false to define a 
            non-clustered index.
            </summary>
        <value>To be added.</value>
        <remarks>
            The value of this property is only relevant if <see cref="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClusteredConfigured" /> returns true.
            If <see cref="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClusteredConfigured" /> returns false, then the value of this property is meaningless.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClusteredConfigured">
      <MemberSignature Language="C#" Value="public virtual bool IsClusteredConfigured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClusteredConfigured" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClusteredConfigured" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsClusteredConfigured As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsClusteredConfigured : bool" Usage="System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClusteredConfigured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if <see cref="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsClustered" /> has been set to a value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnique">
      <MemberSignature Language="C#" Value="public virtual bool IsUnique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnique" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUnique" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsUnique As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsUnique : bool with get, set" Usage="System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUnique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set this property to true to define a unique index. Set this property to false to define a 
            non-unique index.
            </summary>
        <value>To be added.</value>
        <remarks>
            The value of this property is only relevant if <see cref="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUniqueConfigured" /> returns true.
            If <see cref="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUniqueConfigured" /> returns false, then the value of this property is meaningless.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUniqueConfigured">
      <MemberSignature Language="C#" Value="public virtual bool IsUniqueConfigured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUniqueConfigured" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUniqueConfigured" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsUniqueConfigured As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsUniqueConfigured : bool" Usage="System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUniqueConfigured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if <see cref="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.IsUnique" /> has been set to a value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.ComponentModel.DataAnnotations.Schema.IndexAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The index name.
            </summary>
        <value>To be added.</value>
        <remarks>
            Multi-column indexes are created by using the same index name in multiple attributes. The information
            in these attributes is then merged together to specify the actual database index.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public virtual int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Order As Integer" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.ComponentModel.DataAnnotations.Schema.IndexAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A number which will be used to determine column ordering for multi-column indexes. This will be -1 if no
            column order has been specified.
            </summary>
        <value>To be added.</value>
        <remarks>
            Multi-column indexes are created by using the same index name in multiple attributes. The information
            in these attributes is then merged together to specify the actual database index.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="indexAttribute.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.Schema.IndexAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.ComponentModel.DataAnnotations.Schema.IndexAttribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns a different ID for each object instance such that type descriptors won't
            attempt to combine all IndexAttribute instances into a single instance.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>