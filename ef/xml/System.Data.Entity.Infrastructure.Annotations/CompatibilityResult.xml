<Type Name="CompatibilityResult" FullName="System.Data.Entity.Infrastructure.Annotations.CompatibilityResult">
  <TypeSignature Language="C#" Value="public sealed class CompatibilityResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompatibilityResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompatibilityResult" />
  <TypeSignature Language="F#" Value="type CompatibilityResult = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Returned by <see cref="M:System.Data.Entity.Infrastructure.Annotations.IMergeableAnnotation.IsCompatibleWith(System.Object)" /> and related methods to indicate whether or
            not one object does not conflict with another such that the two can be combined into one.
            </summary>
    <remarks>
            If the two objects are not compatible then information about why they are not compatible is contained
            in the <see cref="P:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.ErrorMessage" /> property.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompatibilityResult (bool isCompatible, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isCompatible, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.#ctor(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isCompatible As Boolean, errorMessage As String)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Infrastructure.Annotations.CompatibilityResult : bool * string -&gt; System.Data.Entity.Infrastructure.Annotations.CompatibilityResult" Usage="new System.Data.Entity.Infrastructure.Annotations.CompatibilityResult (isCompatible, errorMessage)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isCompatible" Type="System.Boolean" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="isCompatible">Indicates whether or not the two tested objects are compatible.</param>
        <param name="errorMessage">
            An error message indicating how the objects are not compatible. Expected to be null if isCompatible is true.
            </param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorMessage">
      <MemberSignature Language="C#" Value="public string ErrorMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.ErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorMessage As String" />
      <MemberSignature Language="F#" Value="member this.ErrorMessage : string" Usage="System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.ErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If <see cref="P:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.IsCompatible" /> is true, then returns an error message indicating how the two tested objects
            are incompatible.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompatible">
      <MemberSignature Language="C#" Value="public bool IsCompatible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompatible" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.IsCompatible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompatible As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsCompatible : bool" Usage="System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.IsCompatible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if the two tested objects are compatible; otherwise false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator bool (System.Data.Entity.Infrastructure.Annotations.CompatibilityResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Implicit(class System.Data.Entity.Infrastructure.Annotations.CompatibilityResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.op_Implicit(System.Data.Entity.Infrastructure.Annotations.CompatibilityResult)~System.Boolean" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (result As CompatibilityResult) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Data.Entity.Infrastructure.Annotations.CompatibilityResult -&gt; bool" Usage="System.Data.Entity.Infrastructure.Annotations.CompatibilityResult.op_Implicit result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2225:OperatorOverloadsHaveNamedAlternates")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.Data.Entity.Infrastructure.Annotations.CompatibilityResult" />
      </Parameters>
      <Docs>
        <param name="result">The object to convert.</param>
        <summary>
            Implicit conversion to a bool to allow the result object to be used directly in checks.
            </summary>
        <returns>True if the result is compatible; false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>