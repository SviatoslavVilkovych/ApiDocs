<Type Name="AnnotationCodeGenerator" FullName="System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator">
  <TypeSignature Language="C#" Value="public abstract class AnnotationCodeGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AnnotationCodeGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AnnotationCodeGenerator" />
  <TypeSignature Language="F#" Value="type AnnotationCodeGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Inherit from this class to create a service that allows for code generation of custom annotations as part of 
            scaffolding Migrations. The derived class should be set onto the <see cref="T:System.Data.Entity.Migrations.Design.MigrationCodeGenerator" />.
            </summary>
    <remarks>
            Note that an <see cref="T:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator" /> is not needed if the annotation uses a simple string value,
            or if calling ToString on the annotation object is sufficient for use in the scaffolded Migration.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnnotationCodeGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public abstract void Generate (string annotationName, object annotation, System.Data.Entity.Migrations.Utilities.IndentedTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate(string annotationName, object annotation, class System.Data.Entity.Migrations.Utilities.IndentedTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator.Generate(System.String,System.Object,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Generate (annotationName As String, annotation As Object, writer As IndentedTextWriter)" />
      <MemberSignature Language="F#" Value="abstract member Generate : string * obj * System.Data.Entity.Migrations.Utilities.IndentedTextWriter -&gt; unit" Usage="annotationCodeGenerator.Generate (annotationName, annotation, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationName" Type="System.String" />
        <Parameter Name="annotation" Type="System.Object" />
        <Parameter Name="writer" Type="System.Data.Entity.Migrations.Utilities.IndentedTextWriter" />
      </Parameters>
      <Docs>
        <param name="annotationName">The name of the annotation for which a value is being generated.</param>
        <param name="annotation">The annotation value.</param>
        <param name="writer">The writer to which generated code should be written.</param>
        <summary>
            Implement this method to generate code for the given annotation value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtraNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetExtraNamespaces (System.Collections.Generic.IEnumerable&lt;string&gt; annotationNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetExtraNamespaces(class System.Collections.Generic.IEnumerable`1&lt;string&gt; annotationNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Annotations.AnnotationCodeGenerator.GetExtraNamespaces(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtraNamespaces (annotationNames As IEnumerable(Of String)) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetExtraNamespaces : seq&lt;string&gt; -&gt; seq&lt;string&gt;&#xA;override this.GetExtraNamespaces : seq&lt;string&gt; -&gt; seq&lt;string&gt;" Usage="annotationCodeGenerator.GetExtraNamespaces annotationNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="annotationNames">The names of the annotations that are being included in the generated code.</param>
        <summary>
            Override this method to return additional namespaces that should be included in the code generated for the
            scaffolded migration. The default implementation returns an empty enumeration.
            </summary>
        <returns>A list of additional namespaces to include.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>