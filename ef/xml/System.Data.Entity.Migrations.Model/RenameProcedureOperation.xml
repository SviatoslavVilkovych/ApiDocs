<Type Name="RenameProcedureOperation" FullName="System.Data.Entity.Migrations.Model.RenameProcedureOperation">
  <TypeSignature Language="C#" Value="public class RenameProcedureOperation : System.Data.Entity.Migrations.Model.MigrationOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RenameProcedureOperation extends System.Data.Entity.Migrations.Model.MigrationOperation" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Migrations.Model.RenameProcedureOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class RenameProcedureOperation&#xA;Inherits MigrationOperation" />
  <TypeSignature Language="F#" Value="type RenameProcedureOperation = class&#xA;    inherit MigrationOperation" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Migrations.Model.MigrationOperation</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents renaming a stored procedure in the database.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RenameProcedureOperation (string name, string newName, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string newName, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Model.RenameProcedureOperation.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, newName As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Migrations.Model.RenameProcedureOperation : string * string * obj -&gt; System.Data.Entity.Migrations.Model.RenameProcedureOperation" Usage="new System.Data.Entity.Migrations.Model.RenameProcedureOperation (name, newName, anonymousArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the stored procedure to rename.</param>
        <param name="newName">The new name for the stored procedure.</param>
        <param name="anonymousArguments"> Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'. </param>
        <summary>
             Initializes a new instance of the <see cref="T:System.Data.Entity.Migrations.Model.RenameProcedureOperation" /> class.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Migrations.Model.MigrationOperation Inverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Migrations.Model.MigrationOperation Inverse" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.RenameProcedureOperation.Inverse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Inverse As MigrationOperation" />
      <MemberSignature Language="F#" Value="member this.Inverse : System.Data.Entity.Migrations.Model.MigrationOperation" Usage="System.Data.Entity.Migrations.Model.RenameProcedureOperation.Inverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Migrations.Model.MigrationOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an operation that will revert this operation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDestructiveChange">
      <MemberSignature Language="C#" Value="public override bool IsDestructiveChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestructiveChange" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.RenameProcedureOperation.IsDestructiveChange" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDestructiveChange As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDestructiveChange : bool" Usage="System.Data.Entity.Migrations.Model.RenameProcedureOperation.IsDestructiveChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating if this operation may result in data loss. Always returns false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.RenameProcedureOperation.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Entity.Migrations.Model.RenameProcedureOperation.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the stored procedure to rename.
            </summary>
        <value>
            The name of the stored procedure to rename.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewName">
      <MemberSignature Language="C#" Value="public virtual string NewName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.RenameProcedureOperation.NewName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NewName As String" />
      <MemberSignature Language="F#" Value="member this.NewName : string" Usage="System.Data.Entity.Migrations.Model.RenameProcedureOperation.NewName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the new name for the stored procedure.
            </summary>
        <value>
            The new name for the stored procedure.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>