<Type Name="RenameTableOperation" FullName="System.Data.Entity.Migrations.Model.RenameTableOperation">
  <TypeSignature Language="C#" Value="public class RenameTableOperation : System.Data.Entity.Migrations.Model.MigrationOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RenameTableOperation extends System.Data.Entity.Migrations.Model.MigrationOperation" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Migrations.Model.RenameTableOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class RenameTableOperation&#xA;Inherits MigrationOperation" />
  <TypeSignature Language="F#" Value="type RenameTableOperation = class&#xA;    inherit MigrationOperation" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Migrations.Model.MigrationOperation</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents renaming an existing table.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RenameTableOperation (string name, string newName, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string newName, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Model.RenameTableOperation.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, newName As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Migrations.Model.RenameTableOperation : string * string * obj -&gt; System.Data.Entity.Migrations.Model.RenameTableOperation" Usage="new System.Data.Entity.Migrations.Model.RenameTableOperation (name, newName, anonymousArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the table to be renamed. </param>
        <param name="newName"> New name for the table. </param>
        <param name="anonymousArguments"> Additional arguments that may be processed by providers. Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'. </param>
        <summary>
             Initializes a new instance of the RenameTableOperation class.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Migrations.Model.MigrationOperation Inverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Migrations.Model.MigrationOperation Inverse" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.RenameTableOperation.Inverse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Inverse As MigrationOperation" />
      <MemberSignature Language="F#" Value="member this.Inverse : System.Data.Entity.Migrations.Model.MigrationOperation" Usage="System.Data.Entity.Migrations.Model.RenameTableOperation.Inverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Migrations.Model.MigrationOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an operation that reverts the rename.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDestructiveChange">
      <MemberSignature Language="C#" Value="public override bool IsDestructiveChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestructiveChange" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.RenameTableOperation.IsDestructiveChange" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDestructiveChange As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDestructiveChange : bool" Usage="System.Data.Entity.Migrations.Model.RenameTableOperation.IsDestructiveChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.RenameTableOperation.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Entity.Migrations.Model.RenameTableOperation.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the table to be renamed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewName">
      <MemberSignature Language="C#" Value="public virtual string NewName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.RenameTableOperation.NewName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NewName As String" />
      <MemberSignature Language="F#" Value="member this.NewName : string" Usage="System.Data.Entity.Migrations.Model.RenameTableOperation.NewName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the new name for the table.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>