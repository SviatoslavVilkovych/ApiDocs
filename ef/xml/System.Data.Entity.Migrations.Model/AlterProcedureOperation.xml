<Type Name="AlterProcedureOperation" FullName="System.Data.Entity.Migrations.Model.AlterProcedureOperation">
  <TypeSignature Language="C#" Value="public class AlterProcedureOperation : System.Data.Entity.Migrations.Model.ProcedureOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AlterProcedureOperation extends System.Data.Entity.Migrations.Model.ProcedureOperation" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Migrations.Model.AlterProcedureOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class AlterProcedureOperation&#xA;Inherits ProcedureOperation" />
  <TypeSignature Language="F#" Value="type AlterProcedureOperation = class&#xA;    inherit ProcedureOperation" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Migrations.Model.ProcedureOperation</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents altering an existing stored procedure.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AlterProcedureOperation (string name, string bodySql, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string bodySql, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Model.AlterProcedureOperation.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, bodySql As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Migrations.Model.AlterProcedureOperation : string * string * obj -&gt; System.Data.Entity.Migrations.Model.AlterProcedureOperation" Usage="new System.Data.Entity.Migrations.Model.AlterProcedureOperation (name, bodySql, anonymousArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bodySql" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the stored procedure.</param>
        <param name="bodySql">The body of the stored procedure expressed in SQL.</param>
        <param name="anonymousArguments">Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.</param>
        <summary>
             Initializes a new instance of the <see cref="T:System.Data.Entity.Migrations.Model.AlterProcedureOperation" /> class.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Migrations.Model.MigrationOperation Inverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Migrations.Model.MigrationOperation Inverse" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.AlterProcedureOperation.Inverse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Inverse As MigrationOperation" />
      <MemberSignature Language="F#" Value="member this.Inverse : System.Data.Entity.Migrations.Model.MigrationOperation" Usage="System.Data.Entity.Migrations.Model.AlterProcedureOperation.Inverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Migrations.Model.MigrationOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an operation that will revert this operation. 
            Always returns a <see cref="T:System.Data.Entity.Migrations.Model.NotSupportedOperation" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>