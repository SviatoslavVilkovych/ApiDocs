<Type Name="MoveTableOperation" FullName="System.Data.Entity.Migrations.Model.MoveTableOperation">
  <TypeSignature Language="C#" Value="public class MoveTableOperation : System.Data.Entity.Migrations.Model.MigrationOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MoveTableOperation extends System.Data.Entity.Migrations.Model.MigrationOperation" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Migrations.Model.MoveTableOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class MoveTableOperation&#xA;Inherits MigrationOperation" />
  <TypeSignature Language="F#" Value="type MoveTableOperation = class&#xA;    inherit MigrationOperation" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Migrations.Model.MigrationOperation</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents moving a table from one schema to another.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MoveTableOperation (string name, string newSchema, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string newSchema, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Model.MoveTableOperation.#ctor(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, newSchema As String, Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Migrations.Model.MoveTableOperation : string * string * obj -&gt; System.Data.Entity.Migrations.Model.MoveTableOperation" Usage="new System.Data.Entity.Migrations.Model.MoveTableOperation (name, newSchema, anonymousArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="newSchema" Type="System.String" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"> Name of the table to be moved. </param>
        <param name="newSchema"> Name of the schema to move the table to. </param>
        <param name="anonymousArguments"> Additional arguments that may be processed by providers. Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'. </param>
        <summary>
             Initializes a new instance of the MoveTableOperation class.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextKey">
      <MemberSignature Language="C#" Value="public string ContextKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.MoveTableOperation.ContextKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextKey As String" />
      <MemberSignature Language="F#" Value="member this.ContextKey : string" Usage="System.Data.Entity.Migrations.Model.MoveTableOperation.ContextKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Used when altering the migrations history table so that data can be moved to the new table.
            </summary>
        <value>
            The context key for the model.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTableOperation">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Migrations.Model.CreateTableOperation CreateTableOperation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Migrations.Model.CreateTableOperation CreateTableOperation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.MoveTableOperation.CreateTableOperation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateTableOperation As CreateTableOperation" />
      <MemberSignature Language="F#" Value="member this.CreateTableOperation : System.Data.Entity.Migrations.Model.CreateTableOperation" Usage="System.Data.Entity.Migrations.Model.MoveTableOperation.CreateTableOperation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Migrations.Model.CreateTableOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Used when altering the migrations history table so that the table can be rebuilt rather than just dropping and adding the primary key.
            </summary>
        <value>
            The create table operation for the migrations history table.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Migrations.Model.MigrationOperation Inverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Migrations.Model.MigrationOperation Inverse" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.MoveTableOperation.Inverse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Inverse As MigrationOperation" />
      <MemberSignature Language="F#" Value="member this.Inverse : System.Data.Entity.Migrations.Model.MigrationOperation" Usage="System.Data.Entity.Migrations.Model.MoveTableOperation.Inverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Migrations.Model.MigrationOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an operation that moves the table back to its original schema.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDestructiveChange">
      <MemberSignature Language="C#" Value="public override bool IsDestructiveChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestructiveChange" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.MoveTableOperation.IsDestructiveChange" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDestructiveChange As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDestructiveChange : bool" Usage="System.Data.Entity.Migrations.Model.MoveTableOperation.IsDestructiveChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsSystem">
      <MemberSignature Language="C#" Value="public bool IsSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystem" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.MoveTableOperation.IsSystem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSystem As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSystem : bool" Usage="System.Data.Entity.Migrations.Model.MoveTableOperation.IsSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates whether this is a system table.
            </summary>
        <value>
            true if the table is a system table; otherwise, false.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.MoveTableOperation.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Entity.Migrations.Model.MoveTableOperation.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the table to be moved.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewSchema">
      <MemberSignature Language="C#" Value="public virtual string NewSchema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewSchema" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.MoveTableOperation.NewSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NewSchema As String" />
      <MemberSignature Language="F#" Value="member this.NewSchema : string" Usage="System.Data.Entity.Migrations.Model.MoveTableOperation.NewSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the schema to move the table to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>