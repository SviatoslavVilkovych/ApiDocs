<Type Name="HistoryOperation" FullName="System.Data.Entity.Migrations.Model.HistoryOperation">
  <TypeSignature Language="C#" Value="public class HistoryOperation : System.Data.Entity.Migrations.Model.MigrationOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HistoryOperation extends System.Data.Entity.Migrations.Model.MigrationOperation" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Migrations.Model.HistoryOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class HistoryOperation&#xA;Inherits MigrationOperation" />
  <TypeSignature Language="F#" Value="type HistoryOperation = class&#xA;    inherit MigrationOperation" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Migrations.Model.MigrationOperation</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Operation representing DML changes to the migrations history table.
             The migrations history table is used to store a log of the migrations that have been applied to the database.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HistoryOperation (System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt; commandTrees, object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt; commandTrees, object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Model.HistoryOperation.#ctor(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandTrees As IList(Of DbModificationCommandTree), Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Migrations.Model.HistoryOperation : System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt; * obj -&gt; System.Data.Entity.Migrations.Model.HistoryOperation" Usage="new System.Data.Entity.Migrations.Model.HistoryOperation (commandTrees, anonymousArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="commandTrees" Type="System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt;" />
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandTrees"> A sequence of command trees representing the operations being applied to the history table. </param>
        <param name="anonymousArguments"> Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'. </param>
        <summary>
             Initializes a new instance of the HistoryOperation class.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTrees">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt; CommandTrees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt; CommandTrees" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.HistoryOperation.CommandTrees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTrees As IList(Of DbModificationCommandTree)" />
      <MemberSignature Language="F#" Value="member this.CommandTrees : System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt;" Usage="System.Data.Entity.Migrations.Model.HistoryOperation.CommandTrees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A sequence of commands representing the operations being applied to the history table.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDestructiveChange">
      <MemberSignature Language="C#" Value="public override bool IsDestructiveChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestructiveChange" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.HistoryOperation.IsDestructiveChange" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDestructiveChange As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDestructiveChange : bool" Usage="System.Data.Entity.Migrations.Model.HistoryOperation.IsDestructiveChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>