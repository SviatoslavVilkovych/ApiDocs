<Type Name="CreateIndexOperation" FullName="System.Data.Entity.Migrations.Model.CreateIndexOperation">
  <TypeSignature Language="C#" Value="public class CreateIndexOperation : System.Data.Entity.Migrations.Model.IndexOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CreateIndexOperation extends System.Data.Entity.Migrations.Model.IndexOperation" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" />
  <TypeSignature Language="VB.NET" Value="Public Class CreateIndexOperation&#xA;Inherits IndexOperation" />
  <TypeSignature Language="F#" Value="type CreateIndexOperation = class&#xA;    inherit IndexOperation" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Migrations.Model.IndexOperation</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
             Represents creating a database index.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CreateIndexOperation (object anonymousArguments = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object anonymousArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Model.CreateIndexOperation.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional anonymousArguments As Object = null)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Migrations.Model.CreateIndexOperation : obj -&gt; System.Data.Entity.Migrations.Model.CreateIndexOperation" Usage="new System.Data.Entity.Migrations.Model.CreateIndexOperation anonymousArguments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1026:DefaultParametersShouldNotBeUsed")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="anonymousArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="anonymousArguments"> Additional arguments that may be processed by providers. Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'. </param>
        <summary>
             Initializes a new instance of the CreateIndexOperation class.
             The Table and Columns properties should also be populated.
            
             Entity Framework Migrations APIs are not designed to accept input provided by untrusted sources 
             (such as the end user of an application). If input is accepted from such sources it should be validated 
             before being passed to these APIs to protect against SQL injection attacks etc.
             </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Migrations.Model.MigrationOperation Inverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Migrations.Model.MigrationOperation Inverse" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.Inverse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Inverse As MigrationOperation" />
      <MemberSignature Language="F#" Value="member this.Inverse : System.Data.Entity.Migrations.Model.MigrationOperation" Usage="System.Data.Entity.Migrations.Model.CreateIndexOperation.Inverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Migrations.Model.MigrationOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an operation to drop this index.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public bool IsClustered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClustered" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.IsClustered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsClustered As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsClustered : bool with get, set" Usage="System.Data.Entity.Migrations.Model.CreateIndexOperation.IsClustered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether this is a clustered index.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDestructiveChange">
      <MemberSignature Language="C#" Value="public override bool IsDestructiveChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestructiveChange" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.IsDestructiveChange" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDestructiveChange As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDestructiveChange : bool" Usage="System.Data.Entity.Migrations.Model.CreateIndexOperation.IsDestructiveChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsUnique">
      <MemberSignature Language="C#" Value="public bool IsUnique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnique" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.IsUnique" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnique As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsUnique : bool with get, set" Usage="System.Data.Entity.Migrations.Model.CreateIndexOperation.IsUnique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating if this is a unique index.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>