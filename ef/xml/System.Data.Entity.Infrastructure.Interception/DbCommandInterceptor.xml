<Type Name="DbCommandInterceptor" FullName="System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor">
  <TypeSignature Language="C#" Value="public class DbCommandInterceptor : System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbCommandInterceptor extends System.Object implements class System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor, class System.Data.Entity.Infrastructure.Interception.IDbInterceptor" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor" />
  <TypeSignature Language="VB.NET" Value="Public Class DbCommandInterceptor&#xA;Implements IDbCommandInterceptor" />
  <TypeSignature Language="F#" Value="type DbCommandInterceptor = class&#xA;    interface IDbCommandInterceptor&#xA;    interface IDbInterceptor" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.Entity.Infrastructure.Interception.IDbInterceptor</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Base class that implements <see cref="T:System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor" />. This class is a convenience for
            use when only one or two methods of the interface actually need to have any implementation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbCommandInterceptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonQueryExecuted">
      <MemberSignature Language="C#" Value="public virtual void NonQueryExecuted (System.Data.Common.DbCommand command, System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;int&gt; interceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NonQueryExecuted(class System.Data.Common.DbCommand command, class System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext`1&lt;int32&gt; interceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor.NonQueryExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NonQueryExecuted (command As DbCommand, interceptionContext As DbCommandInterceptionContext(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member NonQueryExecuted : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;int&gt; -&gt; unit&#xA;override this.NonQueryExecuted : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;int&gt; -&gt; unit" Usage="dbCommandInterceptor.NonQueryExecuted (command, interceptionContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor.NonQueryExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="interceptionContext" Type="System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="interceptionContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="NonQueryExecuting">
      <MemberSignature Language="C#" Value="public virtual void NonQueryExecuting (System.Data.Common.DbCommand command, System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;int&gt; interceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NonQueryExecuting(class System.Data.Common.DbCommand command, class System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext`1&lt;int32&gt; interceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor.NonQueryExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NonQueryExecuting (command As DbCommand, interceptionContext As DbCommandInterceptionContext(Of Integer))" />
      <MemberSignature Language="F#" Value="abstract member NonQueryExecuting : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;int&gt; -&gt; unit&#xA;override this.NonQueryExecuting : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;int&gt; -&gt; unit" Usage="dbCommandInterceptor.NonQueryExecuting (command, interceptionContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor.NonQueryExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Int32})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="interceptionContext" Type="System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="interceptionContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ReaderExecuted">
      <MemberSignature Language="C#" Value="public virtual void ReaderExecuted (System.Data.Common.DbCommand command, System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Data.Common.DbDataReader&gt; interceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReaderExecuted(class System.Data.Common.DbCommand command, class System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext`1&lt;class System.Data.Common.DbDataReader&gt; interceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor.ReaderExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReaderExecuted (command As DbCommand, interceptionContext As DbCommandInterceptionContext(Of DbDataReader))" />
      <MemberSignature Language="F#" Value="abstract member ReaderExecuted : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Data.Common.DbDataReader&gt; -&gt; unit&#xA;override this.ReaderExecuted : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Data.Common.DbDataReader&gt; -&gt; unit" Usage="dbCommandInterceptor.ReaderExecuted (command, interceptionContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor.ReaderExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="interceptionContext" Type="System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Data.Common.DbDataReader&gt;" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="interceptionContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ReaderExecuting">
      <MemberSignature Language="C#" Value="public virtual void ReaderExecuting (System.Data.Common.DbCommand command, System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Data.Common.DbDataReader&gt; interceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReaderExecuting(class System.Data.Common.DbCommand command, class System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext`1&lt;class System.Data.Common.DbDataReader&gt; interceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor.ReaderExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReaderExecuting (command As DbCommand, interceptionContext As DbCommandInterceptionContext(Of DbDataReader))" />
      <MemberSignature Language="F#" Value="abstract member ReaderExecuting : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Data.Common.DbDataReader&gt; -&gt; unit&#xA;override this.ReaderExecuting : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Data.Common.DbDataReader&gt; -&gt; unit" Usage="dbCommandInterceptor.ReaderExecuting (command, interceptionContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor.ReaderExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Data.Common.DbDataReader})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="interceptionContext" Type="System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Data.Common.DbDataReader&gt;" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="interceptionContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ScalarExecuted">
      <MemberSignature Language="C#" Value="public virtual void ScalarExecuted (System.Data.Common.DbCommand command, System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;object&gt; interceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScalarExecuted(class System.Data.Common.DbCommand command, class System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext`1&lt;object&gt; interceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor.ScalarExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ScalarExecuted (command As DbCommand, interceptionContext As DbCommandInterceptionContext(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member ScalarExecuted : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;obj&gt; -&gt; unit&#xA;override this.ScalarExecuted : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;obj&gt; -&gt; unit" Usage="dbCommandInterceptor.ScalarExecuted (command, interceptionContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor.ScalarExecuted(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="interceptionContext" Type="System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="interceptionContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ScalarExecuting">
      <MemberSignature Language="C#" Value="public virtual void ScalarExecuting (System.Data.Common.DbCommand command, System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;object&gt; interceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScalarExecuting(class System.Data.Common.DbCommand command, class System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext`1&lt;object&gt; interceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbCommandInterceptor.ScalarExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ScalarExecuting (command As DbCommand, interceptionContext As DbCommandInterceptionContext(Of Object))" />
      <MemberSignature Language="F#" Value="abstract member ScalarExecuting : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;obj&gt; -&gt; unit&#xA;override this.ScalarExecuting : System.Data.Common.DbCommand * System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;obj&gt; -&gt; unit" Usage="dbCommandInterceptor.ScalarExecuting (command, interceptionContext)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor.ScalarExecuting(System.Data.Common.DbCommand,System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="interceptionContext" Type="System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="command">To be added.</param>
        <param name="interceptionContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>