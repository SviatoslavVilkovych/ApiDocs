<Type Name="DbInterception" FullName="System.Data.Entity.Infrastructure.Interception.DbInterception">
  <TypeSignature Language="C#" Value="public static class DbInterception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbInterception extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.Interception.DbInterception" />
  <TypeSignature Language="VB.NET" Value="Public Class DbInterception" />
  <TypeSignature Language="F#" Value="type DbInterception = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This is the registration point for <see cref="T:System.Data.Entity.Infrastructure.Interception.IDbInterceptor" /> interceptors. Interceptors
            receive notifications when EF performs certain operations such as executing commands against
            the database. For example, see <see cref="T:System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static void Add (System.Data.Entity.Infrastructure.Interception.IDbInterceptor interceptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Add(class System.Data.Entity.Infrastructure.Interception.IDbInterceptor interceptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterception.Add(System.Data.Entity.Infrastructure.Interception.IDbInterceptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Add (interceptor As IDbInterceptor)" />
      <MemberSignature Language="F#" Value="static member Add : System.Data.Entity.Infrastructure.Interception.IDbInterceptor -&gt; unit" Usage="System.Data.Entity.Infrastructure.Interception.DbInterception.Add interceptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interceptor" Type="System.Data.Entity.Infrastructure.Interception.IDbInterceptor" />
      </Parameters>
      <Docs>
        <param name="interceptor">The interceptor to add.</param>
        <summary>
            Registers a new <see cref="T:System.Data.Entity.Infrastructure.Interception.IDbInterceptor" /> to receive notifications. Note that the interceptor
            must implement some interface that extends from <see cref="T:System.Data.Entity.Infrastructure.Interception.IDbInterceptor" /> to be useful.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatch">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Infrastructure.Interception.DbDispatchers Dispatch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Entity.Infrastructure.Interception.DbDispatchers Dispatch" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Interception.DbInterception.Dispatch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Dispatch As DbDispatchers" />
      <MemberSignature Language="F#" Value="member this.Dispatch : System.Data.Entity.Infrastructure.Interception.DbDispatchers" Usage="System.Data.Entity.Infrastructure.Interception.DbInterception.Dispatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.DbDispatchers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This is the entry point for dispatching to interceptors. This is usually only used internally by
            Entity Framework but it is provided publicly so that other code can make sure that registered
            interceptors are called when operations are performed on behalf of EF. For example, EF providers
            a may make use of this when executing commands.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public static void Remove (System.Data.Entity.Infrastructure.Interception.IDbInterceptor interceptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Remove(class System.Data.Entity.Infrastructure.Interception.IDbInterceptor interceptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterception.Remove(System.Data.Entity.Infrastructure.Interception.IDbInterceptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Remove (interceptor As IDbInterceptor)" />
      <MemberSignature Language="F#" Value="static member Remove : System.Data.Entity.Infrastructure.Interception.IDbInterceptor -&gt; unit" Usage="System.Data.Entity.Infrastructure.Interception.DbInterception.Remove interceptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interceptor" Type="System.Data.Entity.Infrastructure.Interception.IDbInterceptor" />
      </Parameters>
      <Docs>
        <param name="interceptor">The interceptor to remove.</param>
        <summary>
            Removes a registered <see cref="T:System.Data.Entity.Infrastructure.Interception.IDbInterceptor" /> so that it will no longer receive notifications.
            If the given interceptor is not registered, then this is a no-op.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>