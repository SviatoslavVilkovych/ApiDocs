<Type Name="DbInterceptionContext" FullName="System.Data.Entity.Infrastructure.Interception.DbInterceptionContext">
  <TypeSignature Language="C#" Value="public class DbInterceptionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbInterceptionContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DbInterceptionContext" />
  <TypeSignature Language="F#" Value="type DbInterceptionContext = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents contextual information associated with calls into <see cref="T:System.Data.Entity.Infrastructure.Interception.IDbInterceptor" />
            implementations.
            </summary>
    <remarks>
            Note that specific types/operations that can be intercepted may use a more specific
            interception context derived from this class. For example, if SQL is being executed by
            a <see cref="T:System.Data.Entity.DbContext" />, then the DbContext will be contained in the
            <see cref="T:System.Data.Entity.Infrastructure.Interception.DbCommandInterceptionContext`1" /> instance that is passed to the methods
            of <see cref="T:System.Data.Entity.Infrastructure.Interception.IDbCommandInterceptor" />.
            Instances of this class are publicly immutable for contextual information. To add
            contextual information use one of the With... or As... methods to create a new
            interception context containing the new information.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbInterceptionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" /> with no state.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbInterceptionContext (System.Data.Entity.Infrastructure.Interception.DbInterceptionContext copyFrom);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Entity.Infrastructure.Interception.DbInterceptionContext copyFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.#ctor(System.Data.Entity.Infrastructure.Interception.DbInterceptionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (copyFrom As DbInterceptionContext)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Infrastructure.Interception.DbInterceptionContext : System.Data.Entity.Infrastructure.Interception.DbInterceptionContext -&gt; System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" Usage="new System.Data.Entity.Infrastructure.Interception.DbInterceptionContext copyFrom" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="copyFrom" Type="System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" />
      </Parameters>
      <Docs>
        <param name="copyFrom">The context from which to copy state.</param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" /> by copying state from the given
            interception context. See <see cref="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.Clone" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsAsync">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.Interception.DbInterceptionContext AsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.Interception.DbInterceptionContext AsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.AsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AsAsync () As DbInterceptionContext" />
      <MemberSignature Language="F#" Value="member this.AsAsync : unit -&gt; System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" Usage="dbInterceptionContext.AsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.DbInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" /> that contains all the contextual information in this
            interception context the <see cref="P:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.IsAsync" /> flag set to true.
            </summary>
        <returns>A new interception context associated with the async flag set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Entity.Infrastructure.Interception.DbInterceptionContext Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Entity.Infrastructure.Interception.DbInterceptionContext Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As DbInterceptionContext" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Data.Entity.Infrastructure.Interception.DbInterceptionContext&#xA;override this.Clone : unit -&gt; System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" Usage="dbInterceptionContext.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.DbInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Call this method when creating a copy of an interception context in order to add new state
            to it. Using this method instead of calling the constructor directly ensures virtual dispatch
            so that the new type will have the same type (and any specialized state) as the context that
            is being cloned.
            </summary>
        <returns>A new context with all state copied.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbContexts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Entity.DbContext&gt; DbContexts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.DbContext&gt; DbContexts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.DbContexts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DbContexts As IEnumerable(Of DbContext)" />
      <MemberSignature Language="F#" Value="member this.DbContexts : seq&lt;System.Data.Entity.DbContext&gt;" Usage="System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.DbContexts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Entity.DbContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets all the <see cref="T:System.Data.Entity.DbContext" /> instances associated with this interception context.
            </summary>
        <value>To be added.</value>
        <remarks>
            This list usually contains zero or one items. However, it can contain more than one item if
            a single <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> has been used to construct multiple <see cref="T:System.Data.Entity.DbContext" />
            instances.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dbInterceptionContext.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dbInterceptionContext.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="dbInterceptionContext.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool" Usage="System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if the operation is being executed asynchronously, otherwise false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectContexts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Objects.ObjectContext&gt; ObjectContexts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Objects.ObjectContext&gt; ObjectContexts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.ObjectContexts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectContexts As IEnumerable(Of ObjectContext)" />
      <MemberSignature Language="F#" Value="member this.ObjectContexts : seq&lt;System.Data.Entity.Core.Objects.ObjectContext&gt;" Usage="System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.ObjectContexts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Objects.ObjectContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets all the <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> instances associated with this interception context.
            </summary>
        <value>To be added.</value>
        <remarks>
            This list usually contains zero or one items. However, it can contain more than one item when
            EF has created a new <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" /> for use in database creation and initialization, or
            if a single <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> is used with multiple <see cref="P:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.ObjectContexts" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dbInterceptionContext.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithDbContext">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.Interception.DbInterceptionContext WithDbContext (System.Data.Entity.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.Interception.DbInterceptionContext WithDbContext(class System.Data.Entity.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.WithDbContext(System.Data.Entity.DbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDbContext (context As DbContext) As DbInterceptionContext" />
      <MemberSignature Language="F#" Value="member this.WithDbContext : System.Data.Entity.DbContext -&gt; System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" Usage="dbInterceptionContext.WithDbContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.DbInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Entity.DbContext" />
      </Parameters>
      <Docs>
        <param name="context">The context to associate.</param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" /> that contains all the contextual information in this
            interception context with the addition of the given <see cref="T:System.Data.Entity.DbContext" />.
            </summary>
        <returns>A new interception context associated with the given context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithObjectContext">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.Interception.DbInterceptionContext WithObjectContext (System.Data.Entity.Core.Objects.ObjectContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.Interception.DbInterceptionContext WithObjectContext(class System.Data.Entity.Core.Objects.ObjectContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.WithObjectContext(System.Data.Entity.Core.Objects.ObjectContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithObjectContext (context As ObjectContext) As DbInterceptionContext" />
      <MemberSignature Language="F#" Value="member this.WithObjectContext : System.Data.Entity.Core.Objects.ObjectContext -&gt; System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" Usage="dbInterceptionContext.WithObjectContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.DbInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Entity.Core.Objects.ObjectContext" />
      </Parameters>
      <Docs>
        <param name="context">The context to associate.</param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" /> that contains all the contextual information in this
            interception context with the addition of the given <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </summary>
        <returns>A new interception context associated with the given context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>