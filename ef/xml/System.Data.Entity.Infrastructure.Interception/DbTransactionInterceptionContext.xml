<Type Name="DbTransactionInterceptionContext" FullName="System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext">
  <TypeSignature Language="C#" Value="public class DbTransactionInterceptionContext : System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbTransactionInterceptionContext extends System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DbTransactionInterceptionContext&#xA;Inherits MutableInterceptionContext" />
  <TypeSignature Language="F#" Value="type DbTransactionInterceptionContext = class&#xA;    inherit MutableInterceptionContext" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Infrastructure.Interception.MutableInterceptionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents contextual information associated with calls to <see cref="T:System.Data.Common.DbTransaction" /> that don't return any results.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbTransactionInterceptionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Constructs a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" /> with no state.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbTransactionInterceptionContext (System.Data.Entity.Infrastructure.Interception.DbInterceptionContext copyFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Entity.Infrastructure.Interception.DbInterceptionContext copyFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.#ctor(System.Data.Entity.Infrastructure.Interception.DbInterceptionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (copyFrom As DbInterceptionContext)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext : System.Data.Entity.Infrastructure.Interception.DbInterceptionContext -&gt; System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" Usage="new System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext copyFrom" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="copyFrom" Type="System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" />
      </Parameters>
      <Docs>
        <param name="copyFrom">The context from which to copy state.</param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" /> by copying immutable state from the given
            interception context. Also see <see cref="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.Clone" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsAsync">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext AsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext AsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.AsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AsAsync () As DbTransactionInterceptionContext" />
      <MemberSignature Language="F#" Value="override this.AsAsync : unit -&gt; System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" Usage="dbTransactionInterceptionContext.AsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" /> that contains all the contextual information in this
            interception context together with the <see cref="P:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext.IsAsync" /> flag set to true.
            </summary>
        <returns>A new interception context associated with the async flag set.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Data.Entity.Infrastructure.Interception.DbInterceptionContext Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Entity.Infrastructure.Interception.DbInterceptionContext Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As DbInterceptionContext" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" Usage="dbTransactionInterceptionContext.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.DbInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Common.DbConnection" Usage="System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The connection on which the transaction was started
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dbTransactionInterceptionContext.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dbTransactionInterceptionContext.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="dbTransactionInterceptionContext.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dbTransactionInterceptionContext.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithConnection">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext WithConnection (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext WithConnection(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.WithConnection(System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithConnection (connection As DbConnection) As DbTransactionInterceptionContext" />
      <MemberSignature Language="F#" Value="member this.WithConnection : System.Data.Common.DbConnection -&gt; System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" Usage="dbTransactionInterceptionContext.WithConnection connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection on which the transaction was started.</param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" /> that contains all the contextual information in this
            interception context with the addition of the given <see cref="T:System.Data.Common.DbConnection" />.
            </summary>
        <returns>A new interception context that also contains the connection on which the transaction was started.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDbContext">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext WithDbContext (System.Data.Entity.DbContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext WithDbContext(class System.Data.Entity.DbContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.WithDbContext(System.Data.Entity.DbContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDbContext (context As DbContext) As DbTransactionInterceptionContext" />
      <MemberSignature Language="F#" Value="override this.WithDbContext : System.Data.Entity.DbContext -&gt; System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" Usage="dbTransactionInterceptionContext.WithDbContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Entity.DbContext" />
      </Parameters>
      <Docs>
        <param name="context">The context to associate.</param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" /> that contains all the contextual information in this
            interception context with the addition of the given <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </summary>
        <returns>A new interception context associated with the given context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithObjectContext">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext WithObjectContext (System.Data.Entity.Core.Objects.ObjectContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext WithObjectContext(class System.Data.Entity.Core.Objects.ObjectContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext.WithObjectContext(System.Data.Entity.Core.Objects.ObjectContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithObjectContext (context As ObjectContext) As DbTransactionInterceptionContext" />
      <MemberSignature Language="F#" Value="override this.WithObjectContext : System.Data.Entity.Core.Objects.ObjectContext -&gt; System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" Usage="dbTransactionInterceptionContext.WithObjectContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Entity.Core.Objects.ObjectContext" />
      </Parameters>
      <Docs>
        <param name="context">The context to associate.</param>
        <summary>
            Creates a new <see cref="T:System.Data.Entity.Infrastructure.Interception.DbTransactionInterceptionContext" /> that contains all the contextual information in this
            interception context with the addition of the given <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </summary>
        <returns>A new interception context associated with the given context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>