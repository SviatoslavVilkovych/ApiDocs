<Type Name="DbConfigurationTypeAttribute" FullName="System.Data.Entity.DbConfigurationTypeAttribute">
  <TypeSignature Language="C#" Value="public class DbConfigurationTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbConfigurationTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.DbConfigurationTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class DbConfigurationTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type DbConfigurationTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1813:AvoidUnsealedAttributes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1019:DefineAccessorsForAttributeArguments")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This attribute can be placed on a subclass of <see cref="T:System.Data.Entity.DbContext" /> to indicate that the subclass of
            <see cref="T:System.Data.Entity.DbConfiguration" /> representing the code-based configuration for the application is in a different
            assembly than the context type.
            </summary>
    <remarks>
            Normally a subclass of <see cref="T:System.Data.Entity.DbConfiguration" /> should be placed in the same assembly as
            the subclass of <see cref="T:System.Data.Entity.DbContext" /> used by the application. It will then be discovered automatically.
            However, if this is not possible or if the application contains multiple context types in different
            assemblies, then this attribute can be used to direct DbConfiguration discovery to the appropriate type.
            An alternative to using this attribute is to specify the DbConfiguration type to use in the application's
            config file. See http://go.microsoft.com/fwlink/?LinkId=260883 for more information.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbConfigurationTypeAttribute (string configurationTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.DbConfigurationTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationTypeName As String)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.DbConfigurationTypeAttribute : string -&gt; System.Data.Entity.DbConfigurationTypeAttribute" Usage="new System.Data.Entity.DbConfigurationTypeAttribute configurationTypeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationTypeName">
            The <see cref="T:System.Data.Entity.DbConfiguration" /> type to use.
            </param>
        <summary>
            Indicates that the subclass of <see cref="T:System.Data.Entity.DbConfiguration" /> represented by the given assembly-qualified
            name should be used for code-based configuration for this application.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbConfigurationTypeAttribute (Type configurationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type configurationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.DbConfigurationTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationType As Type)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.DbConfigurationTypeAttribute : Type -&gt; System.Data.Entity.DbConfigurationTypeAttribute" Usage="new System.Data.Entity.DbConfigurationTypeAttribute configurationType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="configurationType">
            The <see cref="T:System.Data.Entity.DbConfiguration" /> type to use.
            </param>
        <summary>
            Indicates that the given subclass of <see cref="T:System.Data.Entity.DbConfiguration" /> should be used for code-based configuration
            for this application.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationType">
      <MemberSignature Language="C#" Value="public Type ConfigurationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ConfigurationType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.DbConfigurationTypeAttribute.ConfigurationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfigurationType As Type" />
      <MemberSignature Language="F#" Value="member this.ConfigurationType : Type" Usage="System.Data.Entity.DbConfigurationTypeAttribute.ConfigurationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the subclass of <see cref="T:System.Data.Entity.DbConfiguration" /> that should be used for code-based configuration
            for this application.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>