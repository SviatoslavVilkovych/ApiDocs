<Type Name="EntitySqlParser" FullName="System.Data.Entity.Core.Common.EntitySql.EntitySqlParser">
  <TypeSignature Language="C#" Value="public sealed class EntitySqlParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntitySqlParser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Common.EntitySql.EntitySqlParser" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntitySqlParser" />
  <TypeSignature Language="F#" Value="type EntitySqlParser = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Public Entity SQL Parser class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Common.EntitySql.ParseResult Parse (string query, params System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Core.Common.EntitySql.ParseResult Parse(string query, class System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.EntitySql.EntitySqlParser.Parse(System.String,System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (query As String, ParamArray parameters As DbParameterReferenceExpression()) As ParseResult" />
      <MemberSignature Language="F#" Value="member this.Parse : string * System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression[] -&gt; System.Data.Entity.Core.Common.EntitySql.ParseResult" Usage="entitySqlParser.Parse (query, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.EntitySql.ParseResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="query">The EntitySQL query to be parsed.</param>
        <param name="parameters">The optional query parameters.</param>
        <summary>Parse the specified query with the specified parameters.</summary>
        <returns>
            The <see cref="T:System.Data.Entity.Core.Common.EntitySql.ParseResult" /> containing
            <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree" />
            and information describing inline function definitions if any.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseLambda">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Common.CommandTrees.DbLambda ParseLambda (string query, params System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Core.Common.CommandTrees.DbLambda ParseLambda(string query, class System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.EntitySql.EntitySqlParser.ParseLambda(System.String,System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseLambda (query As String, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="F#" Value="member this.ParseLambda : string * System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression[] -&gt; System.Data.Entity.Core.Common.CommandTrees.DbLambda" Usage="entitySqlParser.ParseLambda (query, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="variables" Type="System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="query">The query to be parsed.</param>
        <param name="variables">The optional query variables.</param>
        <summary>
            Parse a specific query with a specific set variables and produce a
            <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambda" />
            .
            </summary>
        <returns>
            The <see cref="T:System.Data.Entity.Core.Common.EntitySql.ParseResult" /> containing
            <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCommandTree" />
            and information describing inline function definitions if any.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>