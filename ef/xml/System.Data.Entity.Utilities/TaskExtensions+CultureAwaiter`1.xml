<Type Name="TaskExtensions+CultureAwaiter&lt;T&gt;" FullName="System.Data.Entity.Utilities.TaskExtensions+CultureAwaiter&lt;T&gt;">
  <TypeSignature Language="C#" Value="public struct TaskExtensions.CultureAwaiter&lt;T&gt; : System.Runtime.CompilerServices.ICriticalNotifyCompletion" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit TaskExtensions/CultureAwaiter`1&lt;T&gt; extends System.ValueType implements class System.Runtime.CompilerServices.ICriticalNotifyCompletion, class System.Runtime.CompilerServices.INotifyCompletion" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure TaskExtensions.CultureAwaiter(Of T)&#xA;Implements ICriticalNotifyCompletion" />
  <TypeSignature Language="F#" Value="type TaskExtensions.CultureAwaiter&lt;'T&gt; = struct&#xA;    interface ICriticalNotifyCompletion&#xA;    interface INotifyCompletion" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.CompilerServices.ICriticalNotifyCompletion</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.CompilerServices.INotifyCompletion</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1815:OverrideEqualsAndOperatorEqualsOnValueTypes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Awaiter")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
            The type of the result produced by the associated <see cref="T:System.Threading.Tasks.Task`1" />.
            </typeparam>
    <summary>
            Provides an awaitable object that allows for awaits on <see cref="T:System.Threading.Tasks.Task`1" /> that
            preserve the culture.
            </summary>
    <remarks>This type is intended for compiler use only.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureAwaiter (System.Threading.Tasks.Task&lt;T&gt; task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task`1&lt;!T&gt; task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.#ctor(System.Threading.Tasks.Task{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (task As Task(Of T))" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter&lt;'T&gt; : System.Threading.Tasks.Task&lt;'T&gt; -&gt; System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter&lt;'T&gt;" Usage="new System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter&lt;'T&gt; task" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="task">The task to be awaited on.</param>
        <summary>
            Constructs a new instance of the <see cref="T:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAwaiter">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter&lt;T&gt; GetAwaiter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.Entity.Utilities.TaskExtensions/CultureAwaiter`1&lt;!T&gt; GetAwaiter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.GetAwaiter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAwaiter () As TaskExtensions.CultureAwaiter(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetAwaiter : unit -&gt; System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter&lt;'T&gt;" Usage="cultureAwaiter.GetAwaiter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704:IdentifiersShouldBeSpelledCorrectly", MessageId="Awaiter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Utilities.TaskExtensions+CultureAwaiter&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an awaiter used to await this <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
        <returns>An awaiter instance.</returns>
        <remarks>This method is intended for compiler user rather than use directly in code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResult">
      <MemberSignature Language="C#" Value="public T GetResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T GetResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.GetResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResult () As T" />
      <MemberSignature Language="F#" Value="member this.GetResult : unit -&gt; 'T" Usage="cultureAwaiter.GetResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ends the await on the completed <see cref="T:System.Threading.Tasks.Task`1" />.</summary>
        <returns>The result of the completed <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">The awaiter was not properly initialized.</exception>
        <exception cref="T:System.Threading.Tasks.TaskCanceledException">The task was canceled.</exception>
        <exception cref="T:System.Exception">The task completed in a Faulted state.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter&lt;'T&gt;.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this <see cref="T:System.Threading.Tasks.Task">Task</see> has completed.
            </summary>
        <value>To be added.</value>
        <remarks>
          <see cref="P:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.IsCompleted" /> will return true when the Task is in one of the three
            final states: <see cref="F:System.Threading.Tasks.TaskStatus.RanToCompletion">RanToCompletion</see>,
            <see cref="F:System.Threading.Tasks.TaskStatus.Faulted">Faulted</see>, or
            <see cref="F:System.Threading.Tasks.TaskStatus.Canceled">Canceled</see>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="public void OnCompleted (Action continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCompleted(class System.Action continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.OnCompleted(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCompleted (continuation As Action)" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : Action -&gt; unit&#xA;override this.OnCompleted : Action -&gt; unit" Usage="cultureAwaiter.OnCompleted continuation" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(System.Action)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuation" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="continuation">The action to invoke when the await operation completes.</param>
        <summary>This method is not implemented and should not be called.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeOnCompleted">
      <MemberSignature Language="C#" Value="public void UnsafeOnCompleted (Action continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnsafeOnCompleted(class System.Action continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Utilities.TaskExtensions.CultureAwaiter`1.UnsafeOnCompleted(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnsafeOnCompleted (continuation As Action)" />
      <MemberSignature Language="F#" Value="abstract member UnsafeOnCompleted : Action -&gt; unit&#xA;override this.UnsafeOnCompleted : Action -&gt; unit" Usage="cultureAwaiter.UnsafeOnCompleted continuation" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted(System.Action)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="continuation" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="continuation">The action to invoke when the await operation completes.</param>
        <summary>
            Schedules the continuation onto the <see cref="T:System.Threading.Tasks.Task`1" /> associated with this
            <see cref="T:System.Runtime.CompilerServices.TaskAwaiter`1" />.
            </summary>
        <remarks>This method is intended for compiler user rather than use directly in code.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="continuation" /> argument is null
            (Nothing in Visual Basic).
            </exception>
        <exception cref="T:System.InvalidOperationException">The awaiter was not properly initialized.</exception>
      </Docs>
    </Member>
  </Members>
</Type>