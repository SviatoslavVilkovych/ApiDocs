<Type Name="AttributeToTableAnnotationConvention&lt;TAttribute,TAnnotation&gt;" FullName="System.Data.Entity.ModelConfiguration.Conventions.AttributeToTableAnnotationConvention&lt;TAttribute,TAnnotation&gt;">
  <TypeSignature Language="C#" Value="public class AttributeToTableAnnotationConvention&lt;TAttribute,TAnnotation&gt; : System.Data.Entity.ModelConfiguration.Conventions.Convention where TAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributeToTableAnnotationConvention`2&lt;(class System.Attribute) TAttribute, TAnnotation&gt; extends System.Data.Entity.ModelConfiguration.Conventions.Convention" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Conventions.AttributeToTableAnnotationConvention`2" />
  <TypeSignature Language="VB.NET" Value="Public Class AttributeToTableAnnotationConvention(Of TAttribute, TAnnotation)&#xA;Inherits Convention" />
  <TypeSignature Language="F#" Value="type AttributeToTableAnnotationConvention&lt;'Attribute, 'Annotation (requires 'Attribute :&gt; Attribute)&gt; = class&#xA;    inherit Convention" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TAttribute">
      <Constraints>
        <BaseTypeName>System.Attribute</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TAnnotation" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Entity.ModelConfiguration.Conventions.Convention</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TAttribute">The type of attribute to discover.</typeparam>
    <typeparam name="TAnnotation">The type of annotation that will be created.</typeparam>
    <summary>
            A general purpose class for Code First conventions that read attributes from .NET types
            and generate table annotations based on those attributes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeToTableAnnotationConvention (string annotationName, Func&lt;Type,System.Collections.Generic.IList&lt;TAttribute&gt;,TAnnotation&gt; annotationFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string annotationName, class System.Func`3&lt;class System.Type, class System.Collections.Generic.IList`1&lt;!TAttribute&gt;, !TAnnotation&gt; annotationFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Conventions.AttributeToTableAnnotationConvention`2.#ctor(System.String,System.Func{System.Type,System.Collections.Generic.IList{`0},`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (annotationName As String, annotationFactory As Func(Of Type, IList(Of TAttribute), TAnnotation))" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.ModelConfiguration.Conventions.AttributeToTableAnnotationConvention&lt;'Attribute, 'Annotation (requires 'Attribute :&gt; Attribute)&gt; : string * Func&lt;Type, System.Collections.Generic.IList&lt;'Attribute&gt;, 'Annotation&gt; -&gt; System.Data.Entity.ModelConfiguration.Conventions.AttributeToTableAnnotationConvention&lt;'Attribute, 'Annotation (requires 'Attribute :&gt; Attribute)&gt;" Usage="new System.Data.Entity.ModelConfiguration.Conventions.AttributeToTableAnnotationConvention&lt;'Attribute, 'Annotation (requires 'Attribute :&gt; System.Attribute)&gt; (annotationName, annotationFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="annotationName" Type="System.String" />
        <Parameter Name="annotationFactory" Type="System.Func&lt;System.Type,System.Collections.Generic.IList&lt;TAttribute&gt;,TAnnotation&gt;" />
      </Parameters>
      <Docs>
        <param name="annotationName">The name of the annotations to create.</param>
        <param name="annotationFactory">A factory for creating the annotation on each table.</param>
        <summary>
            Constructs a convention that will create table annotations with the given name and
            using the given factory delegate.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>