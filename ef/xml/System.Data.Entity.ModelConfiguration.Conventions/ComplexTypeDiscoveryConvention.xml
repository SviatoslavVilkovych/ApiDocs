<Type Name="ComplexTypeDiscoveryConvention" FullName="System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention">
  <TypeSignature Language="C#" Value="public class ComplexTypeDiscoveryConvention : System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention&lt;System.Data.Entity.Core.Metadata.Edm.EdmModel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComplexTypeDiscoveryConvention extends System.Object implements class System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention`1&lt;class System.Data.Entity.Core.Metadata.Edm.EdmModel&gt;, class System.Data.Entity.ModelConfiguration.Conventions.IConvention" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class ComplexTypeDiscoveryConvention&#xA;Implements IConceptualModelConvention(Of EdmModel)" />
  <TypeSignature Language="F#" Value="type ComplexTypeDiscoveryConvention = class&#xA;    interface IConceptualModelConvention&lt;EdmModel&gt;&#xA;    interface IConvention" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention&lt;System.Data.Entity.Core.Metadata.Edm.EdmModel&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.Entity.ModelConfiguration.Conventions.IConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Convention to configure a type as a complex type if it has no primary key, no mapped base type and no navigation properties.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComplexTypeDiscoveryConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public virtual void Apply (System.Data.Entity.Core.Metadata.Edm.EdmModel item, System.Data.Entity.Infrastructure.DbModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(class System.Data.Entity.Core.Metadata.Edm.EdmModel item, class System.Data.Entity.Infrastructure.DbModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention.Apply(System.Data.Entity.Core.Metadata.Edm.EdmModel,System.Data.Entity.Infrastructure.DbModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Apply (item As EdmModel, model As DbModel)" />
      <MemberSignature Language="F#" Value="abstract member Apply : System.Data.Entity.Core.Metadata.Edm.EdmModel * System.Data.Entity.Infrastructure.DbModel -&gt; unit&#xA;override this.Apply : System.Data.Entity.Core.Metadata.Edm.EdmModel * System.Data.Entity.Infrastructure.DbModel -&gt; unit" Usage="complexTypeDiscoveryConvention.Apply (item, model)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.ModelConfiguration.Conventions.IConceptualModelConvention`1.Apply(`0,System.Data.Entity.Infrastructure.DbModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Maintainability", "CA1506:AvoidExcessiveClassCoupling")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Data.Entity.Core.Metadata.Edm.EdmModel" />
        <Parameter Name="model" Type="System.Data.Entity.Infrastructure.DbModel" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <param name="model">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>