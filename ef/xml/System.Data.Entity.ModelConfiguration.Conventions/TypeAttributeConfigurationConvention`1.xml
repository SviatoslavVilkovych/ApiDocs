<Type Name="TypeAttributeConfigurationConvention&lt;TAttribute&gt;" FullName="System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention&lt;TAttribute&gt;">
  <TypeSignature Language="C#" Value="public abstract class TypeAttributeConfigurationConvention&lt;TAttribute&gt; : System.Data.Entity.ModelConfiguration.Conventions.Convention where TAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeAttributeConfigurationConvention`1&lt;(class System.Attribute) TAttribute&gt; extends System.Data.Entity.ModelConfiguration.Conventions.Convention" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeAttributeConfigurationConvention(Of TAttribute)&#xA;Inherits Convention" />
  <TypeSignature Language="F#" Value="type TypeAttributeConfigurationConvention&lt;'Attribute (requires 'Attribute :&gt; Attribute)&gt; = class&#xA;    inherit Convention" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TAttribute">
      <Constraints>
        <BaseTypeName>System.Attribute</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Entity.ModelConfiguration.Conventions.Convention</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005:AvoidExcessiveParametersOnGenericTypes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TAttribute"> The type of the attribute to look for. </typeparam>
    <summary>
            Base class for conventions that process CLR attributes found in the model.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeAttributeConfigurationConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public abstract void Apply (System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration configuration, TAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Apply(class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration configuration, !TAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Conventions.TypeAttributeConfigurationConvention`1.Apply(System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Apply (configuration As ConventionTypeConfiguration, attribute As TAttribute)" />
      <MemberSignature Language="F#" Value="abstract member Apply : System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration * 'Attribute -&gt; unit" Usage="typeAttributeConfigurationConvention.Apply (configuration, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" />
        <Parameter Name="attribute" Type="TAttribute" />
      </Parameters>
      <Docs>
        <param name="configuration">The configuration for the class that contains the property.</param>
        <param name="attribute">The attribute.</param>
        <summary>
            Applies this convention to a class that has an attribute of type TAttribute applied.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>