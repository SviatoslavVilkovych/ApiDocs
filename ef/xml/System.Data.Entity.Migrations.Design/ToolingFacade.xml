<Type Name="ToolingFacade" FullName="System.Data.Entity.Migrations.Design.ToolingFacade">
  <TypeSignature Language="C#" Value="public class ToolingFacade : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolingFacade extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Migrations.Design.ToolingFacade" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolingFacade&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type ToolingFacade = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Helper class that is used by design time tools to run migrations related
            commands that need to interact with an application that is being edited
            in Visual Studio.
            Because the application is being edited the assemblies need to
            be loaded in a separate AppDomain to ensure the latest version
            is always loaded.
            The App/Web.config file from the startup project is also copied
            to ensure that any configuration is applied.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolingFacade (string migrationsAssemblyName, string contextAssemblyName, string configurationTypeName, string workingDirectory, string configurationFilePath, string dataDirectory, System.Data.Entity.Infrastructure.DbConnectionInfo connectionStringInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string migrationsAssemblyName, string contextAssemblyName, string configurationTypeName, string workingDirectory, string configurationFilePath, string dataDirectory, class System.Data.Entity.Infrastructure.DbConnectionInfo connectionStringInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Data.Entity.Infrastructure.DbConnectionInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (migrationsAssemblyName As String, contextAssemblyName As String, configurationTypeName As String, workingDirectory As String, configurationFilePath As String, dataDirectory As String, connectionStringInfo As DbConnectionInfo)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Migrations.Design.ToolingFacade : string * string * string * string * string * string * System.Data.Entity.Infrastructure.DbConnectionInfo -&gt; System.Data.Entity.Migrations.Design.ToolingFacade" Usage="new System.Data.Entity.Migrations.Design.ToolingFacade (migrationsAssemblyName, contextAssemblyName, configurationTypeName, workingDirectory, configurationFilePath, dataDirectory, connectionStringInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2140:TransparentMethodsMustNotReferenceCriticalCodeFxCopRule")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="migrationsAssemblyName" Type="System.String" />
        <Parameter Name="contextAssemblyName" Type="System.String" />
        <Parameter Name="configurationTypeName" Type="System.String" />
        <Parameter Name="workingDirectory" Type="System.String" />
        <Parameter Name="configurationFilePath" Type="System.String" />
        <Parameter Name="dataDirectory" Type="System.String" />
        <Parameter Name="connectionStringInfo" Type="System.Data.Entity.Infrastructure.DbConnectionInfo" />
      </Parameters>
      <Docs>
        <param name="migrationsAssemblyName"> The name of the assembly that contains the migrations configuration to be used. </param>
        <param name="contextAssemblyName"> The name of the assembly that contains the DbContext to be used. </param>
        <param name="configurationTypeName"> The namespace qualified name of migrations configuration to be used. </param>
        <param name="workingDirectory"> The working directory containing the compiled assemblies. </param>
        <param name="configurationFilePath"> The path of the config file from the startup project. </param>
        <param name="dataDirectory"> The path of the application data directory from the startup project. Typically the App_Data directory for web applications or the working directory for executables. </param>
        <param name="connectionStringInfo"> The connection to the database to be migrated. If null is supplied, the default connection for the context will be used. </param>
        <summary>
            Initializes a new instance of the ToolingFacade class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="toolingFacade.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="toolingFacade.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.
            </param>
        <summary>
            Releases all resources used by the facade.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ToolingFacade ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="toolingFacade.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases all unmanaged resources used by the facade.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextType">
      <MemberSignature Language="C#" Value="public string GetContextType (string contextTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetContextType(string contextTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetContextType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextType (contextTypeName As String) As String" />
      <MemberSignature Language="F#" Value="member this.GetContextType : string -&gt; string" Usage="toolingFacade.GetContextType contextTypeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextTypeName"> The name of the context type. If null, the single context type found in the assembly will be returned. </param>
        <summary>
            Gets the fully qualified name of a type deriving from <see cref="T:System.Data.Entity.DbContext" />.
            </summary>
        <returns> The context type found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetContextTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetContextTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetContextTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextTypes () As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.GetContextTypes : unit -&gt; seq&lt;string&gt;" Usage="toolingFacade.GetContextTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the fully qualified name of all types deriving from <see cref="T:System.Data.Entity.DbContext" />.
            </summary>
        <returns> All context types found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseMigrations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetDatabaseMigrations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetDatabaseMigrations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetDatabaseMigrations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDatabaseMigrations () As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetDatabaseMigrations : unit -&gt; seq&lt;string&gt;&#xA;override this.GetDatabaseMigrations : unit -&gt; seq&lt;string&gt;" Usage="toolingFacade.GetDatabaseMigrations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a list of all migrations that have been applied to the database.
            </summary>
        <returns> Ids of applied migrations. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPendingMigrations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetPendingMigrations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetPendingMigrations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetPendingMigrations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPendingMigrations () As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetPendingMigrations : unit -&gt; seq&lt;string&gt;&#xA;override this.GetPendingMigrations : unit -&gt; seq&lt;string&gt;" Usage="toolingFacade.GetPendingMigrations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a list of all migrations that have not been applied to the database.
            </summary>
        <returns> Ids of pending migrations. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogInfoDelegate">
      <MemberSignature Language="C#" Value="public Action&lt;string&gt; LogInfoDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;string&gt; LogInfoDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogInfoDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property LogInfoDelegate As Action(Of String)" />
      <MemberSignature Language="F#" Value="member this.LogInfoDelegate : Action&lt;string&gt; with get, set" Usage="System.Data.Entity.Migrations.Design.ToolingFacade.LogInfoDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an action to be run to log information.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogVerboseDelegate">
      <MemberSignature Language="C#" Value="public Action&lt;string&gt; LogVerboseDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;string&gt; LogVerboseDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogVerboseDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property LogVerboseDelegate As Action(Of String)" />
      <MemberSignature Language="F#" Value="member this.LogVerboseDelegate : Action&lt;string&gt; with get, set" Usage="System.Data.Entity.Migrations.Design.ToolingFacade.LogVerboseDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an action to be run to log verbose information.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogWarningDelegate">
      <MemberSignature Language="C#" Value="public Action&lt;string&gt; LogWarningDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;string&gt; LogWarningDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogWarningDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property LogWarningDelegate As Action(Of String)" />
      <MemberSignature Language="F#" Value="member this.LogWarningDelegate : Action&lt;string&gt; with get, set" Usage="System.Data.Entity.Migrations.Design.ToolingFacade.LogWarningDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an action to be run to log warnings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Migrations.Design.ScaffoldedMigration Scaffold (string migrationName, string language, string rootNamespace, bool ignoreChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.Migrations.Design.ScaffoldedMigration Scaffold(string migrationName, string language, string rootNamespace, bool ignoreChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.Scaffold(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Scaffold (migrationName As String, language As String, rootNamespace As String, ignoreChanges As Boolean) As ScaffoldedMigration" />
      <MemberSignature Language="F#" Value="abstract member Scaffold : string * string * string * bool -&gt; System.Data.Entity.Migrations.Design.ScaffoldedMigration&#xA;override this.Scaffold : string * string * string * bool -&gt; System.Data.Entity.Migrations.Design.ScaffoldedMigration" Usage="toolingFacade.Scaffold (migrationName, language, rootNamespace, ignoreChanges)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Migrations.Design.ScaffoldedMigration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationName" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="ignoreChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="migrationName"> The name for the generated migration. </param>
        <param name="language"> The programming language of the generated migration. </param>
        <param name="rootNamespace"> The root namespace of the project the migration will be added to. </param>
        <param name="ignoreChanges"> Whether or not to include model changes. </param>
        <summary>
            Scaffolds a code-based migration to apply any pending model changes.
            </summary>
        <returns> The scaffolded migration. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaffoldInitialCreate">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Migrations.Design.ScaffoldedMigration ScaffoldInitialCreate (string language, string rootNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Migrations.Design.ScaffoldedMigration ScaffoldInitialCreate(string language, string rootNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.ScaffoldInitialCreate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScaffoldInitialCreate (language As String, rootNamespace As String) As ScaffoldedMigration" />
      <MemberSignature Language="F#" Value="member this.ScaffoldInitialCreate : string * string -&gt; System.Data.Entity.Migrations.Design.ScaffoldedMigration" Usage="toolingFacade.ScaffoldInitialCreate (language, rootNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Migrations.Design.ScaffoldedMigration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language"> The programming language of the generated migration. </param>
        <param name="rootNamespace"> The root namespace of the project the migration will be added to. </param>
        <summary>
            Scaffolds the initial code-based migration corresponding to a previously run database initializer.
            </summary>
        <returns> The scaffolded migration. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptUpdate">
      <MemberSignature Language="C#" Value="public string ScriptUpdate (string sourceMigration, string targetMigration, bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ScriptUpdate(string sourceMigration, string targetMigration, bool force) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.ScriptUpdate(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScriptUpdate (sourceMigration As String, targetMigration As String, force As Boolean) As String" />
      <MemberSignature Language="F#" Value="member this.ScriptUpdate : string * string * bool -&gt; string" Usage="toolingFacade.ScriptUpdate (sourceMigration, targetMigration, force)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceMigration" Type="System.String" />
        <Parameter Name="targetMigration" Type="System.String" />
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceMigration"> The migration to update from. If null is supplied, a script to update the current database will be produced. </param>
        <param name="targetMigration"> The migration to update to. If null is supplied, a script to update to the latest migration will be produced. </param>
        <param name="force"> Value indicating if data loss during automatic migration is acceptable. </param>
        <summary>
            Generates a SQL script to migrate between two migrations.
            </summary>
        <returns> The generated SQL script. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (string targetMigration, bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(string targetMigration, bool force) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Design.ToolingFacade.Update(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update (targetMigration As String, force As Boolean)" />
      <MemberSignature Language="F#" Value="member this.Update : string * bool -&gt; unit" Usage="toolingFacade.Update (targetMigration, force)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetMigration" Type="System.String" />
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetMigration"> The Id of the migration to migrate to. If null is supplied, the database will be updated to the latest migration. </param>
        <param name="force"> Value indicating if data loss during automatic migration is acceptable. </param>
        <summary>
            Updates the database to the specified migration.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>