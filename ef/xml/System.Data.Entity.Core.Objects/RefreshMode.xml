<Type Name="RefreshMode" FullName="System.Data.Entity.Core.Objects.RefreshMode">
  <TypeSignature Language="C#" Value="public enum RefreshMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RefreshMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Objects.RefreshMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum RefreshMode" />
  <TypeSignature Language="F#" Value="type RefreshMode = " />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1008:EnumsShouldHaveZeroValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines the different ways to handle modified properties when refreshing in-memory data from the database.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClientWins">
      <MemberSignature Language="C#" Value="ClientWins" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Entity.Core.Objects.RefreshMode ClientWins = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Entity.Core.Objects.RefreshMode.ClientWins" />
      <MemberSignature Language="VB.NET" Value="ClientWins" />
      <MemberSignature Language="F#" Value="ClientWins = 2" Usage="System.Data.Entity.Core.Objects.RefreshMode.ClientWins" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Objects.RefreshMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            For unmodified client objects, same behavior as StoreWins.  For modified client
            objects, Refresh original values with store value, keeping all values on client
            object. The next time an update happens, all the client change units will be
            considered modified and require updating.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="StoreWins">
      <MemberSignature Language="C#" Value="StoreWins" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Entity.Core.Objects.RefreshMode StoreWins = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Entity.Core.Objects.RefreshMode.StoreWins" />
      <MemberSignature Language="VB.NET" Value="StoreWins" />
      <MemberSignature Language="F#" Value="StoreWins = 1" Usage="System.Data.Entity.Core.Objects.RefreshMode.StoreWins" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Objects.RefreshMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            Discard all changes on the client and refresh values with store values.
            Client original values is updated to match the store.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>