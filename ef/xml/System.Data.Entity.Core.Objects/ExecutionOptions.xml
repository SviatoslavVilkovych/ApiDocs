<Type Name="ExecutionOptions" FullName="System.Data.Entity.Core.Objects.ExecutionOptions">
  <TypeSignature Language="C#" Value="public class ExecutionOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExecutionOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Objects.ExecutionOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ExecutionOptions" />
  <TypeSignature Language="F#" Value="type ExecutionOptions = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for query execution.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExecutionOptions (System.Data.Entity.Core.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Data.Entity.Core.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.ExecutionOptions.#ctor(System.Data.Entity.Core.Objects.MergeOption)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.Objects.ExecutionOptions : System.Data.Entity.Core.Objects.MergeOption -&gt; System.Data.Entity.Core.Objects.ExecutionOptions" Usage="new System.Data.Entity.Core.Objects.ExecutionOptions mergeOption" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Entity.Core.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"> Merge option to use for entity results. </param>
        <summary>
            Creates a new instance of <see cref="T:System.Data.Entity.Core.Objects.ExecutionOptions" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExecutionOptions (System.Data.Entity.Core.Objects.MergeOption mergeOption, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Data.Entity.Core.Objects.MergeOption mergeOption, bool streaming) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.ExecutionOptions.#ctor(System.Data.Entity.Core.Objects.MergeOption,System.Boolean)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.Objects.ExecutionOptions : System.Data.Entity.Core.Objects.MergeOption * bool -&gt; System.Data.Entity.Core.Objects.ExecutionOptions" Usage="new System.Data.Entity.Core.Objects.ExecutionOptions (mergeOption, streaming)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Entity.Core.Objects.MergeOption" />
        <Parameter Name="streaming" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mergeOption"> Merge option to use for entity results. </param>
        <param name="streaming"> Whether the query is streaming or buffering. </param>
        <summary>
            Creates a new instance of <see cref="T:System.Data.Entity.Core.Objects.ExecutionOptions" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.ExecutionOptions.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="executionOptions.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.ExecutionOptions.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="executionOptions.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Objects.MergeOption MergeOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Core.Objects.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Objects.ExecutionOptions.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MergeOption As MergeOption" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Entity.Core.Objects.MergeOption" Usage="System.Data.Entity.Core.Objects.ExecutionOptions.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Merge option to use for entity results.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Data.Entity.Core.Objects.ExecutionOptions left, System.Data.Entity.Core.Objects.ExecutionOptions right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Data.Entity.Core.Objects.ExecutionOptions left, class System.Data.Entity.Core.Objects.ExecutionOptions right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.ExecutionOptions.op_Equality(System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ExecutionOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ExecutionOptions, right As ExecutionOptions) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Data.Entity.Core.Objects.ExecutionOptions * System.Data.Entity.Core.Objects.ExecutionOptions -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Entity.Core.Objects.ExecutionOptions" />
        <Parameter Name="right" Type="System.Data.Entity.Core.Objects.ExecutionOptions" />
      </Parameters>
      <Docs>
        <param name="left">The left object to compare.</param>
        <param name="right">The right object to compare.</param>
        <summary>Determines whether the specified objects are equal.</summary>
        <returns>true if the two objects are equal; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Data.Entity.Core.Objects.ExecutionOptions left, System.Data.Entity.Core.Objects.ExecutionOptions right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.Entity.Core.Objects.ExecutionOptions left, class System.Data.Entity.Core.Objects.ExecutionOptions right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.ExecutionOptions.op_Inequality(System.Data.Entity.Core.Objects.ExecutionOptions,System.Data.Entity.Core.Objects.ExecutionOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ExecutionOptions, right As ExecutionOptions) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Data.Entity.Core.Objects.ExecutionOptions * System.Data.Entity.Core.Objects.ExecutionOptions -&gt; bool" Usage="System.Data.Entity.Core.Objects.ExecutionOptions.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Entity.Core.Objects.ExecutionOptions" />
        <Parameter Name="right" Type="System.Data.Entity.Core.Objects.ExecutionOptions" />
      </Parameters>
      <Docs>
        <param name="left">The left object to compare.</param>
        <param name="right">The right object to compare.</param>
        <summary>
            Determines whether the specified objects are not equal.
            </summary>
        <returns>true if the two objects are not equal; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Streaming">
      <MemberSignature Language="C#" Value="public bool Streaming { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Streaming" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Objects.ExecutionOptions.Streaming" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Streaming As Boolean" />
      <MemberSignature Language="F#" Value="member this.Streaming : bool" Usage="System.Data.Entity.Core.Objects.ExecutionOptions.Streaming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Queries are now streaming by default unless a retrying ExecutionStrategy is used. This property no longer returns an accurate value.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the query is streaming or buffering.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>