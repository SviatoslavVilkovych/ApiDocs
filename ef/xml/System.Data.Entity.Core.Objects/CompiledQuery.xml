<Type Name="CompiledQuery" FullName="System.Data.Entity.Core.Objects.CompiledQuery">
  <TypeSignature Language="C#" Value="public sealed class CompiledQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompiledQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Objects.CompiledQuery" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompiledQuery" />
  <TypeSignature Language="F#" Value="type CompiledQuery = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Caches an ELinq query
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Compile&lt;TArg0,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TResult&gt; Compile&lt;TArg0,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TArg0, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TArg0, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TResult))) As Func(Of TArg0, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`2" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TResult&gt; Compile&lt;TArg0,TArg1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TResult))) As Func(Of TArg0, TArg1, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1 must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`3" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TResult))) As Func(Of TArg0, TArg1, TArg2, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`4" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`5" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`6" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`7" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TArg6">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg6  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`8" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TArg6">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg6  must be a primitive type.</typeparam>
        <typeparam name="TArg7">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg7  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`9" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TArg6">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg6  must be a primitive type.</typeparam>
        <typeparam name="TArg7">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg7  must be a primitive type.</typeparam>
        <typeparam name="TArg8">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg8  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`10" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TArg6">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg6  must be a primitive type.</typeparam>
        <typeparam name="TArg7">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg7  must be a primitive type.</typeparam>
        <typeparam name="TArg8">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg8  must be a primitive type.</typeparam>
        <typeparam name="TArg9">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg9  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`11" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TArg6">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg6  must be a primitive type.</typeparam>
        <typeparam name="TArg7">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg7  must be a primitive type.</typeparam>
        <typeparam name="TArg8">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg8  must be a primitive type.</typeparam>
        <typeparam name="TArg9">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg9  must be a primitive type.</typeparam>
        <typeparam name="TArg10">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg10  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`12" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TArg6">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg6  must be a primitive type.</typeparam>
        <typeparam name="TArg7">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg7  must be a primitive type.</typeparam>
        <typeparam name="TArg8">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg8  must be a primitive type.</typeparam>
        <typeparam name="TArg9">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg9  must be a primitive type.</typeparam>
        <typeparam name="TArg10">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg10  must be a primitive type.</typeparam>
        <typeparam name="TArg11">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg11  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`13" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TArg6">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg6  must be a primitive type.</typeparam>
        <typeparam name="TArg7">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg7  must be a primitive type.</typeparam>
        <typeparam name="TArg8">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg8  must be a primitive type.</typeparam>
        <typeparam name="TArg9">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg9  must be a primitive type.</typeparam>
        <typeparam name="TArg10">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg10  must be a primitive type.</typeparam>
        <typeparam name="TArg11">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg11  must be a primitive type.</typeparam>
        <typeparam name="TArg12">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg12  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`14" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TArg6">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg6  must be a primitive type.</typeparam>
        <typeparam name="TArg7">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg7  must be a primitive type.</typeparam>
        <typeparam name="TArg8">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg8  must be a primitive type.</typeparam>
        <typeparam name="TArg9">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg9  must be a primitive type.</typeparam>
        <typeparam name="TArg10">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg10  must be a primitive type.</typeparam>
        <typeparam name="TArg11">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg11  must be a primitive type.</typeparam>
        <typeparam name="TArg12">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg12  must be a primitive type.</typeparam>
        <typeparam name="TArg13">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg13  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`15" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TArg14 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TArg6">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg6  must be a primitive type.</typeparam>
        <typeparam name="TArg7">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg7  must be a primitive type.</typeparam>
        <typeparam name="TArg8">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg8  must be a primitive type.</typeparam>
        <typeparam name="TArg9">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg9  must be a primitive type.</typeparam>
        <typeparam name="TArg10">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg10  must be a primitive type.</typeparam>
        <typeparam name="TArg11">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg11  must be a primitive type.</typeparam>
        <typeparam name="TArg12">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg12  must be a primitive type.</typeparam>
        <typeparam name="TArg13">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg13  must be a primitive type.</typeparam>
        <typeparam name="TArg14">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg14  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`16" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt; query) where TArg0 : System.Data.Entity.Core.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt; Compile&lt;(class System.Data.Entity.Core.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TArg14 As ObjectContext, TArg15 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult)" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'TArg15, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'TArg15, 'Result (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Entity.Core.Objects.ObjectContext)" Usage="System.Data.Entity.Core.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters", Justification="required for this feature")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Entity.Core.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TArg15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">
            A type derived from <see cref="T:System.Data.Entity.Core.Objects.ObjectContext" />.
            </typeparam>
        <typeparam name="TArg1">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg1  must be a primitive type.</typeparam>
        <typeparam name="TArg2">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg2  must be a primitive type.</typeparam>
        <typeparam name="TArg3">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg3  must be a primitive type.</typeparam>
        <typeparam name="TArg4">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg4  must be a primitive type.</typeparam>
        <typeparam name="TArg5">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg5  must be a primitive type.</typeparam>
        <typeparam name="TArg6">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg6  must be a primitive type.</typeparam>
        <typeparam name="TArg7">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg7  must be a primitive type.</typeparam>
        <typeparam name="TArg8">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg8  must be a primitive type.</typeparam>
        <typeparam name="TArg9">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg9  must be a primitive type.</typeparam>
        <typeparam name="TArg10">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg10  must be a primitive type.</typeparam>
        <typeparam name="TArg11">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg11  must be a primitive type.</typeparam>
        <typeparam name="TArg12">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg12  must be a primitive type.</typeparam>
        <typeparam name="TArg13">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg13  must be a primitive type.</typeparam>
        <typeparam name="TArg14">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg14  must be a primitive type.</typeparam>
        <typeparam name="TArg15">Represents the type of the parameter that has to be passed in when executing the delegate returned by this method.  TArg15  must be a primitive type.</typeparam>
        <typeparam name="TResult">
            The type  T  of the query results returned by executing the delegate returned by the
            <see cref="M:System.Data.Entity.Core.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />
            method.
            </typeparam>
        <param name="query">The lambda expression to compile.</param>
        <summary>Creates a new delegate that represents the compiled LINQ to Entities query.</summary>
        <returns>
          <see cref="T:System.Func`17" />, a generic delegate that represents the compiled LINQ to Entities query.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>