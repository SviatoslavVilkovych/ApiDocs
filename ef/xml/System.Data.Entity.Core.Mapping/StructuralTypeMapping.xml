<Type Name="StructuralTypeMapping" FullName="System.Data.Entity.Core.Mapping.StructuralTypeMapping">
  <TypeSignature Language="C#" Value="public abstract class StructuralTypeMapping : System.Data.Entity.Core.Mapping.MappingItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StructuralTypeMapping extends System.Data.Entity.Core.Mapping.MappingItem" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Mapping.StructuralTypeMapping" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StructuralTypeMapping&#xA;Inherits MappingItem" />
  <TypeSignature Language="F#" Value="type StructuralTypeMapping = class&#xA;    inherit MappingItem" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Mapping.MappingItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Specifies a structural type mapping.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StructuralTypeMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.StructuralTypeMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCondition">
      <MemberSignature Language="C#" Value="public abstract void AddCondition (System.Data.Entity.Core.Mapping.ConditionPropertyMapping condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCondition(class System.Data.Entity.Core.Mapping.ConditionPropertyMapping condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.StructuralTypeMapping.AddCondition(System.Data.Entity.Core.Mapping.ConditionPropertyMapping)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddCondition (condition As ConditionPropertyMapping)" />
      <MemberSignature Language="F#" Value="abstract member AddCondition : System.Data.Entity.Core.Mapping.ConditionPropertyMapping -&gt; unit" Usage="structuralTypeMapping.AddCondition condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Data.Entity.Core.Mapping.ConditionPropertyMapping" />
      </Parameters>
      <Docs>
        <param name="condition">The property mapping condition to be added.</param>
        <summary>
            Adds a property mapping condition.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyMapping">
      <MemberSignature Language="C#" Value="public abstract void AddPropertyMapping (System.Data.Entity.Core.Mapping.PropertyMapping propertyMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPropertyMapping(class System.Data.Entity.Core.Mapping.PropertyMapping propertyMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.StructuralTypeMapping.AddPropertyMapping(System.Data.Entity.Core.Mapping.PropertyMapping)" />
      <MemberSignature Language="F#" Value="abstract member AddPropertyMapping : System.Data.Entity.Core.Mapping.PropertyMapping -&gt; unit" Usage="structuralTypeMapping.AddPropertyMapping propertyMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyMapping" Type="System.Data.Entity.Core.Mapping.PropertyMapping" />
      </Parameters>
      <Docs>
        <param name="propertyMapping">The property mapping to be added.</param>
        <summary>
            Adds a property mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.ConditionPropertyMapping&gt; Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Entity.Core.Mapping.ConditionPropertyMapping&gt; Conditions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.StructuralTypeMapping.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Conditions As ReadOnlyCollection(Of ConditionPropertyMapping)" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.ConditionPropertyMapping&gt;" Usage="System.Data.Entity.Core.Mapping.StructuralTypeMapping.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.ConditionPropertyMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a read-only collection of property mapping conditions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyMappings">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.PropertyMapping&gt; PropertyMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Entity.Core.Mapping.PropertyMapping&gt; PropertyMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.StructuralTypeMapping.PropertyMappings" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyMappings As ReadOnlyCollection(Of PropertyMapping)" />
      <MemberSignature Language="F#" Value="member this.PropertyMappings : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.PropertyMapping&gt;" Usage="System.Data.Entity.Core.Mapping.StructuralTypeMapping.PropertyMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.PropertyMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a read-only collection of property mappings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCondition">
      <MemberSignature Language="C#" Value="public abstract void RemoveCondition (System.Data.Entity.Core.Mapping.ConditionPropertyMapping condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCondition(class System.Data.Entity.Core.Mapping.ConditionPropertyMapping condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.StructuralTypeMapping.RemoveCondition(System.Data.Entity.Core.Mapping.ConditionPropertyMapping)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveCondition (condition As ConditionPropertyMapping)" />
      <MemberSignature Language="F#" Value="abstract member RemoveCondition : System.Data.Entity.Core.Mapping.ConditionPropertyMapping -&gt; unit" Usage="structuralTypeMapping.RemoveCondition condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Data.Entity.Core.Mapping.ConditionPropertyMapping" />
      </Parameters>
      <Docs>
        <param name="condition">The property mapping condition to be removed.</param>
        <summary>
            Removes a property mapping condition.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyMapping">
      <MemberSignature Language="C#" Value="public abstract void RemovePropertyMapping (System.Data.Entity.Core.Mapping.PropertyMapping propertyMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePropertyMapping(class System.Data.Entity.Core.Mapping.PropertyMapping propertyMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.StructuralTypeMapping.RemovePropertyMapping(System.Data.Entity.Core.Mapping.PropertyMapping)" />
      <MemberSignature Language="F#" Value="abstract member RemovePropertyMapping : System.Data.Entity.Core.Mapping.PropertyMapping -&gt; unit" Usage="structuralTypeMapping.RemovePropertyMapping propertyMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyMapping" Type="System.Data.Entity.Core.Mapping.PropertyMapping" />
      </Parameters>
      <Docs>
        <param name="propertyMapping">The property mapping to be removed.</param>
        <summary>
            Removes a property mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>