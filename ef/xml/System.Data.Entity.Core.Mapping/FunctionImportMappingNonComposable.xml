<Type Name="FunctionImportMappingNonComposable" FullName="System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable">
  <TypeSignature Language="C#" Value="public sealed class FunctionImportMappingNonComposable : System.Data.Entity.Core.Mapping.FunctionImportMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FunctionImportMappingNonComposable extends System.Data.Entity.Core.Mapping.FunctionImportMapping" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FunctionImportMappingNonComposable&#xA;Inherits FunctionImportMapping" />
  <TypeSignature Language="F#" Value="type FunctionImportMappingNonComposable = class&#xA;    inherit FunctionImportMapping" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Mapping.FunctionImportMapping</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a mapping from a model function import to a store non-composable function.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FunctionImportMappingNonComposable (System.Data.Entity.Core.Metadata.Edm.EdmFunction functionImport, System.Data.Entity.Core.Metadata.Edm.EdmFunction targetFunction, System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Mapping.FunctionImportResultMapping&gt; resultMappings, System.Data.Entity.Core.Mapping.EntityContainerMapping containerMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Entity.Core.Metadata.Edm.EdmFunction functionImport, class System.Data.Entity.Core.Metadata.Edm.EdmFunction targetFunction, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Mapping.FunctionImportResultMapping&gt; resultMappings, class System.Data.Entity.Core.Mapping.EntityContainerMapping containerMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable.#ctor(System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Data.Entity.Core.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Mapping.FunctionImportResultMapping},System.Data.Entity.Core.Mapping.EntityContainerMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (functionImport As EdmFunction, targetFunction As EdmFunction, resultMappings As IEnumerable(Of FunctionImportResultMapping), containerMapping As EntityContainerMapping)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable : System.Data.Entity.Core.Metadata.Edm.EdmFunction * System.Data.Entity.Core.Metadata.Edm.EdmFunction * seq&lt;System.Data.Entity.Core.Mapping.FunctionImportResultMapping&gt; * System.Data.Entity.Core.Mapping.EntityContainerMapping -&gt; System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable" Usage="new System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable (functionImport, targetFunction, resultMappings, containerMapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="functionImport" Type="System.Data.Entity.Core.Metadata.Edm.EdmFunction" />
        <Parameter Name="targetFunction" Type="System.Data.Entity.Core.Metadata.Edm.EdmFunction" />
        <Parameter Name="resultMappings" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Mapping.FunctionImportResultMapping&gt;" />
        <Parameter Name="containerMapping" Type="System.Data.Entity.Core.Mapping.EntityContainerMapping" />
      </Parameters>
      <Docs>
        <param name="functionImport">The model function import.</param>
        <param name="targetFunction">The store non-composable function.</param>
        <param name="resultMappings">The function import result mappings.</param>
        <param name="containerMapping">The parent container mapping.</param>
        <summary>
            Initializes a new FunctionImportMappingNonComposable instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultMappings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.FunctionImportResultMapping&gt; ResultMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Entity.Core.Mapping.FunctionImportResultMapping&gt; ResultMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable.ResultMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResultMappings As ReadOnlyCollection(Of FunctionImportResultMapping)" />
      <MemberSignature Language="F#" Value="member this.ResultMappings : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.FunctionImportResultMapping&gt;" Usage="System.Data.Entity.Core.Mapping.FunctionImportMappingNonComposable.ResultMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Mapping.FunctionImportResultMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the function import result mappings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>