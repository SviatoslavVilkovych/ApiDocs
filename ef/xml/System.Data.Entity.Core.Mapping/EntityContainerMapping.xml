<Type Name="EntityContainerMapping" FullName="System.Data.Entity.Core.Mapping.EntityContainerMapping">
  <TypeSignature Language="C#" Value="public class EntityContainerMapping : System.Data.Entity.Core.Mapping.MappingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityContainerMapping extends System.Data.Entity.Core.Mapping.MappingBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Mapping.EntityContainerMapping" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityContainerMapping&#xA;Inherits MappingBase" />
  <TypeSignature Language="F#" Value="type EntityContainerMapping = class&#xA;    inherit MappingBase" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Mapping.MappingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the Mapping metadata for the EntityContainer map in CS space.
            Only one EntityContainerMapping element is allowed in the MSL file for CS mapping.
            </summary>
    <remarks>
                We currently assume that an Entity Container on the C side
                is mapped to a single Entity Container in the S - space.
            </remarks>
    <example>
                For Example if conceptually you could represent the CS MSL file as following
                ---Mapping
                --EntityContainerMapping ( CNorthwind--&gt;SNorthwind )
                --EntitySetMapping
                --AssociationSetMapping
                The type represents the metadata for EntityContainerMapping element in the above example.
                The EntitySetBaseMapping elements that are children of the EntityContainerMapping element
                can be accessed through the properties on this type.
            </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityContainerMapping (System.Data.Entity.Core.Metadata.Edm.EntityContainer conceptualEntityContainer, System.Data.Entity.Core.Metadata.Edm.EntityContainer storeEntityContainer, System.Data.Entity.Core.Mapping.StorageMappingItemCollection mappingItemCollection, bool generateUpdateViews);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Entity.Core.Metadata.Edm.EntityContainer conceptualEntityContainer, class System.Data.Entity.Core.Metadata.Edm.EntityContainer storeEntityContainer, class System.Data.Entity.Core.Mapping.StorageMappingItemCollection mappingItemCollection, bool generateUpdateViews) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.#ctor(System.Data.Entity.Core.Metadata.Edm.EntityContainer,System.Data.Entity.Core.Metadata.Edm.EntityContainer,System.Data.Entity.Core.Mapping.StorageMappingItemCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conceptualEntityContainer As EntityContainer, storeEntityContainer As EntityContainer, mappingItemCollection As StorageMappingItemCollection, generateUpdateViews As Boolean)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.Mapping.EntityContainerMapping : System.Data.Entity.Core.Metadata.Edm.EntityContainer * System.Data.Entity.Core.Metadata.Edm.EntityContainer * System.Data.Entity.Core.Mapping.StorageMappingItemCollection * bool -&gt; System.Data.Entity.Core.Mapping.EntityContainerMapping" Usage="new System.Data.Entity.Core.Mapping.EntityContainerMapping (conceptualEntityContainer, storeEntityContainer, mappingItemCollection, generateUpdateViews)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conceptualEntityContainer" Type="System.Data.Entity.Core.Metadata.Edm.EntityContainer" />
        <Parameter Name="storeEntityContainer" Type="System.Data.Entity.Core.Metadata.Edm.EntityContainer" />
        <Parameter Name="mappingItemCollection" Type="System.Data.Entity.Core.Mapping.StorageMappingItemCollection" />
        <Parameter Name="generateUpdateViews" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="conceptualEntityContainer">The conceptual entity container to be mapped.</param>
        <param name="storeEntityContainer">The store entity container to be mapped.</param>
        <param name="mappingItemCollection">The parent mapping item collection.</param>
        <param name="generateUpdateViews">Flag indicating whether to generate update views.</param>
        <summary>
            Initializes a new EntityContainerMapping instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFunctionImportMapping">
      <MemberSignature Language="C#" Value="public void AddFunctionImportMapping (System.Data.Entity.Core.Mapping.FunctionImportMapping functionImportMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFunctionImportMapping(class System.Data.Entity.Core.Mapping.FunctionImportMapping functionImportMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.AddFunctionImportMapping(System.Data.Entity.Core.Mapping.FunctionImportMapping)" />
      <MemberSignature Language="F#" Value="member this.AddFunctionImportMapping : System.Data.Entity.Core.Mapping.FunctionImportMapping -&gt; unit" Usage="entityContainerMapping.AddFunctionImportMapping functionImportMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionImportMapping" Type="System.Data.Entity.Core.Mapping.FunctionImportMapping" />
      </Parameters>
      <Docs>
        <param name="functionImportMapping">The function import mapping to add.</param>
        <summary>
            Adds a function import mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSetMapping">
      <MemberSignature Language="C#" Value="public void AddSetMapping (System.Data.Entity.Core.Mapping.AssociationSetMapping setMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSetMapping(class System.Data.Entity.Core.Mapping.AssociationSetMapping setMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.AddSetMapping(System.Data.Entity.Core.Mapping.AssociationSetMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSetMapping (setMapping As AssociationSetMapping)" />
      <MemberSignature Language="F#" Value="member this.AddSetMapping : System.Data.Entity.Core.Mapping.AssociationSetMapping -&gt; unit" Usage="entityContainerMapping.AddSetMapping setMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setMapping" Type="System.Data.Entity.Core.Mapping.AssociationSetMapping" />
      </Parameters>
      <Docs>
        <param name="setMapping">The association set mapping to add.</param>
        <summary>
            Adds an association set mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSetMapping">
      <MemberSignature Language="C#" Value="public void AddSetMapping (System.Data.Entity.Core.Mapping.EntitySetMapping setMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSetMapping(class System.Data.Entity.Core.Mapping.EntitySetMapping setMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.AddSetMapping(System.Data.Entity.Core.Mapping.EntitySetMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSetMapping (setMapping As EntitySetMapping)" />
      <MemberSignature Language="F#" Value="member this.AddSetMapping : System.Data.Entity.Core.Mapping.EntitySetMapping -&gt; unit" Usage="entityContainerMapping.AddSetMapping setMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setMapping" Type="System.Data.Entity.Core.Mapping.EntitySetMapping" />
      </Parameters>
      <Docs>
        <param name="setMapping">The entity set mapping to add.</param>
        <summary>
            Adds an entity set mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociationSetMappings">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Mapping.AssociationSetMapping&gt; AssociationSetMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Mapping.AssociationSetMapping&gt; AssociationSetMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.AssociationSetMappings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AssociationSetMappings As IEnumerable(Of AssociationSetMapping)" />
      <MemberSignature Language="F#" Value="member this.AssociationSetMappings : seq&lt;System.Data.Entity.Core.Mapping.AssociationSetMapping&gt;" Usage="System.Data.Entity.Core.Mapping.EntityContainerMapping.AssociationSetMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Mapping.AssociationSetMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the association set mappings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltInTypeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.BuiltInTypeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BuiltInTypeKind As BuiltInTypeKind" />
      <MemberSignature Language="F#" Value="member this.BuiltInTypeKind : System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" Usage="System.Data.Entity.Core.Mapping.EntityContainerMapping.BuiltInTypeKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type kind for this item
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConceptualEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.EntityContainer ConceptualEntityContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.EntityContainer ConceptualEntityContainer" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.ConceptualEntityContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConceptualEntityContainer As EntityContainer" />
      <MemberSignature Language="F#" Value="member this.ConceptualEntityContainer : System.Data.Entity.Core.Metadata.Edm.EntityContainer" Usage="System.Data.Entity.Core.Mapping.EntityContainerMapping.ConceptualEntityContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the conceptual entity container.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetMappings">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Mapping.EntitySetMapping&gt; EntitySetMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Mapping.EntitySetMapping&gt; EntitySetMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.EntitySetMappings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntitySetMappings As IEnumerable(Of EntitySetMapping)" />
      <MemberSignature Language="F#" Value="member this.EntitySetMappings : seq&lt;System.Data.Entity.Core.Mapping.EntitySetMapping&gt;" Usage="System.Data.Entity.Core.Mapping.EntityContainerMapping.EntitySetMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Mapping.EntitySetMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the entity set mappings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionImportMappings">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Mapping.FunctionImportMapping&gt; FunctionImportMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Mapping.FunctionImportMapping&gt; FunctionImportMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.FunctionImportMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FunctionImportMappings As IEnumerable(Of FunctionImportMapping)" />
      <MemberSignature Language="F#" Value="member this.FunctionImportMappings : seq&lt;System.Data.Entity.Core.Mapping.FunctionImportMapping&gt;" Usage="System.Data.Entity.Core.Mapping.EntityContainerMapping.FunctionImportMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Mapping.FunctionImportMapping&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the function import mappings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateUpdateViews">
      <MemberSignature Language="C#" Value="public bool GenerateUpdateViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateUpdateViews" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.GenerateUpdateViews" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GenerateUpdateViews As Boolean" />
      <MemberSignature Language="F#" Value="member this.GenerateUpdateViews : bool" Usage="System.Data.Entity.Core.Mapping.EntityContainerMapping.GenerateUpdateViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a flag that indicates whether to generate the update views or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MappingItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Mapping.StorageMappingItemCollection MappingItemCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Mapping.StorageMappingItemCollection MappingItemCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.MappingItemCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MappingItemCollection As StorageMappingItemCollection" />
      <MemberSignature Language="F#" Value="member this.MappingItemCollection : System.Data.Entity.Core.Mapping.StorageMappingItemCollection" Usage="System.Data.Entity.Core.Mapping.EntityContainerMapping.MappingItemCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Mapping.StorageMappingItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parent mapping item collection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFunctionImportMapping">
      <MemberSignature Language="C#" Value="public void RemoveFunctionImportMapping (System.Data.Entity.Core.Mapping.FunctionImportMapping functionImportMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFunctionImportMapping(class System.Data.Entity.Core.Mapping.FunctionImportMapping functionImportMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.RemoveFunctionImportMapping(System.Data.Entity.Core.Mapping.FunctionImportMapping)" />
      <MemberSignature Language="F#" Value="member this.RemoveFunctionImportMapping : System.Data.Entity.Core.Mapping.FunctionImportMapping -&gt; unit" Usage="entityContainerMapping.RemoveFunctionImportMapping functionImportMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionImportMapping" Type="System.Data.Entity.Core.Mapping.FunctionImportMapping" />
      </Parameters>
      <Docs>
        <param name="functionImportMapping">The function import mapping to remove.</param>
        <summary>
            Removes a function import mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSetMapping">
      <MemberSignature Language="C#" Value="public void RemoveSetMapping (System.Data.Entity.Core.Mapping.AssociationSetMapping setMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSetMapping(class System.Data.Entity.Core.Mapping.AssociationSetMapping setMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.RemoveSetMapping(System.Data.Entity.Core.Mapping.AssociationSetMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSetMapping (setMapping As AssociationSetMapping)" />
      <MemberSignature Language="F#" Value="member this.RemoveSetMapping : System.Data.Entity.Core.Mapping.AssociationSetMapping -&gt; unit" Usage="entityContainerMapping.RemoveSetMapping setMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setMapping" Type="System.Data.Entity.Core.Mapping.AssociationSetMapping" />
      </Parameters>
      <Docs>
        <param name="setMapping">The association set mapping to remove.</param>
        <summary>
            Removes an association set mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSetMapping">
      <MemberSignature Language="C#" Value="public void RemoveSetMapping (System.Data.Entity.Core.Mapping.EntitySetMapping setMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSetMapping(class System.Data.Entity.Core.Mapping.EntitySetMapping setMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Mapping.EntityContainerMapping.RemoveSetMapping(System.Data.Entity.Core.Mapping.EntitySetMapping)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSetMapping (setMapping As EntitySetMapping)" />
      <MemberSignature Language="F#" Value="member this.RemoveSetMapping : System.Data.Entity.Core.Mapping.EntitySetMapping -&gt; unit" Usage="entityContainerMapping.RemoveSetMapping setMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setMapping" Type="System.Data.Entity.Core.Mapping.EntitySetMapping" />
      </Parameters>
      <Docs>
        <param name="setMapping">The association set mapping to remove.</param>
        <summary>
            Removes an association set mapping.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.EntityContainer StoreEntityContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.EntityContainer StoreEntityContainer" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Mapping.EntityContainerMapping.StoreEntityContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StoreEntityContainer As EntityContainer" />
      <MemberSignature Language="F#" Value="member this.StoreEntityContainer : System.Data.Entity.Core.Metadata.Edm.EntityContainer" Usage="System.Data.Entity.Core.Mapping.EntityContainerMapping.StoreEntityContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the store entity container.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>