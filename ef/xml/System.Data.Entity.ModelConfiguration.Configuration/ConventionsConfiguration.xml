<Type Name="ConventionsConfiguration" FullName="System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration">
  <TypeSignature Language="C#" Value="public class ConventionsConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConventionsConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class ConventionsConfiguration" />
  <TypeSignature Language="F#" Value="type ConventionsConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Allows the conventions used by a <see cref="T:System.Data.Entity.DbModelBuilder" /> instance to be customized.
                The default conventions can be found in the System.Data.Entity.ModelConfiguration.Conventions namespace.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (params System.Data.Entity.ModelConfiguration.Conventions.IConvention[] conventions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Data.Entity.ModelConfiguration.Conventions.IConvention[] conventions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Add(System.Data.Entity.ModelConfiguration.Conventions.IConvention[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (ParamArray conventions As IConvention())" />
      <MemberSignature Language="F#" Value="member this.Add : System.Data.Entity.ModelConfiguration.Conventions.IConvention[] -&gt; unit" Usage="conventionsConfiguration.Add conventions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="System.Data.Entity.ModelConfiguration.Conventions.IConvention[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="conventions"> The conventions to be enabled. </param>
        <summary>
                Enables one or more conventions for the <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add&lt;TConvention&gt;">
      <MemberSignature Language="C#" Value="public void Add&lt;TConvention&gt; () where TConvention : System.Data.Entity.ModelConfiguration.Conventions.IConventionnew();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add&lt;.ctor (class System.Data.Entity.ModelConfiguration.Conventions.IConvention) TConvention&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Add``1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add(Of TConvention As {IConventionNew}) ()" />
      <MemberSignature Language="F#" Value="member this.Add : unit -&gt; unit (requires 'Convention :&gt; System.Data.Entity.ModelConfiguration.Conventions.IConvention and 'Convention : (new : unit -&gt; 'Convention))" Usage="conventionsConfiguration.Add " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TConvention">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <InterfaceName>System.Data.Entity.ModelConfiguration.Conventions.IConvention</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TConvention"> The type of the convention to be enabled. </typeparam>
        <summary>
                Enables a convention for the <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAfter&lt;TExistingConvention&gt;">
      <MemberSignature Language="C#" Value="public void AddAfter&lt;TExistingConvention&gt; (System.Data.Entity.ModelConfiguration.Conventions.IConvention newConvention) where TExistingConvention : System.Data.Entity.ModelConfiguration.Conventions.IConvention;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAfter&lt;(class System.Data.Entity.ModelConfiguration.Conventions.IConvention) TExistingConvention&gt;(class System.Data.Entity.ModelConfiguration.Conventions.IConvention newConvention) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.AddAfter``1(System.Data.Entity.ModelConfiguration.Conventions.IConvention)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAfter(Of TExistingConvention As IConvention) (newConvention As IConvention)" />
      <MemberSignature Language="F#" Value="member this.AddAfter : System.Data.Entity.ModelConfiguration.Conventions.IConvention -&gt; unit (requires 'ExistingConvention :&gt; System.Data.Entity.ModelConfiguration.Conventions.IConvention)" Usage="conventionsConfiguration.AddAfter newConvention" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExistingConvention">
          <Constraints>
            <InterfaceName>System.Data.Entity.ModelConfiguration.Conventions.IConvention</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="newConvention" Type="System.Data.Entity.ModelConfiguration.Conventions.IConvention" />
      </Parameters>
      <Docs>
        <typeparam name="TExistingConvention"> The type of the convention after which the enabled one will run. </typeparam>
        <param name="newConvention"> The convention to enable. </param>
        <summary>
                Enables a convention for the <see cref="T:System.Data.Entity.DbModelBuilder" />. This convention
                will run after the one specified.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBefore&lt;TExistingConvention&gt;">
      <MemberSignature Language="C#" Value="public void AddBefore&lt;TExistingConvention&gt; (System.Data.Entity.ModelConfiguration.Conventions.IConvention newConvention) where TExistingConvention : System.Data.Entity.ModelConfiguration.Conventions.IConvention;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBefore&lt;(class System.Data.Entity.ModelConfiguration.Conventions.IConvention) TExistingConvention&gt;(class System.Data.Entity.ModelConfiguration.Conventions.IConvention newConvention) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.AddBefore``1(System.Data.Entity.ModelConfiguration.Conventions.IConvention)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBefore(Of TExistingConvention As IConvention) (newConvention As IConvention)" />
      <MemberSignature Language="F#" Value="member this.AddBefore : System.Data.Entity.ModelConfiguration.Conventions.IConvention -&gt; unit (requires 'ExistingConvention :&gt; System.Data.Entity.ModelConfiguration.Conventions.IConvention)" Usage="conventionsConfiguration.AddBefore newConvention" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExistingConvention">
          <Constraints>
            <InterfaceName>System.Data.Entity.ModelConfiguration.Conventions.IConvention</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="newConvention" Type="System.Data.Entity.ModelConfiguration.Conventions.IConvention" />
      </Parameters>
      <Docs>
        <typeparam name="TExistingConvention"> The type of the convention before which the enabled one will run. </typeparam>
        <param name="newConvention"> The convention to enable. </param>
        <summary>
                Enables a configuration convention for the <see cref="T:System.Data.Entity.DbModelBuilder" />. This convention
                will run before the one specified.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFromAssembly">
      <MemberSignature Language="C#" Value="public void AddFromAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFromAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.AddFromAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="F#" Value="member this.AddFromAssembly : System.Reflection.Assembly -&gt; unit" Usage="conventionsConfiguration.AddFromAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">The assembly containing conventions to be added.</param>
        <summary>
                Discover all conventions in the given assembly and add them to the <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
        <remarks>
                This method add all conventions ordered by type name. The order in which conventions are added
                can have an impact on how they behave because it governs the order in which they are run.
                All conventions found must have a parameterless public constructor.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="conventionsConfiguration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="conventionsConfiguration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="conventionsConfiguration.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (params System.Data.Entity.ModelConfiguration.Conventions.IConvention[] conventions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Data.Entity.ModelConfiguration.Conventions.IConvention[] conventions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Remove(System.Data.Entity.ModelConfiguration.Conventions.IConvention[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (ParamArray conventions As IConvention())" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Data.Entity.ModelConfiguration.Conventions.IConvention[] -&gt; unit" Usage="conventionsConfiguration.Remove conventions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conventions" Type="System.Data.Entity.ModelConfiguration.Conventions.IConvention[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="conventions"> The conventions to be disabled. </param>
        <summary>
                Disables one or more conventions for the <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove&lt;TConvention&gt;">
      <MemberSignature Language="C#" Value="public void Remove&lt;TConvention&gt; () where TConvention : System.Data.Entity.ModelConfiguration.Conventions.IConvention;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove&lt;(class System.Data.Entity.ModelConfiguration.Conventions.IConvention) TConvention&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Remove``1" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove(Of TConvention As IConvention) ()" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit (requires 'Convention :&gt; System.Data.Entity.ModelConfiguration.Conventions.IConvention)" Usage="conventionsConfiguration.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1004:GenericMethodsShouldProvideTypeParameter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TConvention">
          <Constraints>
            <InterfaceName>System.Data.Entity.ModelConfiguration.Conventions.IConvention</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TConvention"> The type of the convention to be disabled. </typeparam>
        <summary>
                Disables a convention for the <see cref="T:System.Data.Entity.DbModelBuilder" />.
                The default conventions that are available for removal can be found in the
                System.Data.Entity.ModelConfiguration.Conventions namespace.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="conventionsConfiguration.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>