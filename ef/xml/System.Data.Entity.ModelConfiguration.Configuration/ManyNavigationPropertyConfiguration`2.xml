<Type Name="ManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;" FullName="System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;">
  <TypeSignature Language="C#" Value="public class ManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt; where TEntityType : class where TTargetEntityType : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManyNavigationPropertyConfiguration`2&lt;class TEntityType, class TTargetEntityType&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ManyNavigationPropertyConfiguration(Of TEntityType, TTargetEntityType)" />
  <TypeSignature Language="F#" Value="type ManyNavigationPropertyConfiguration&lt;'EntityType, 'argetEntityType (requires 'EntityType : null and 'argetEntityType : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntityType">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TTargetEntityType">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntityType"> The entity type that the relationship originates from. </typeparam>
    <typeparam name="TTargetEntityType"> The entity type that the relationship targets. </typeparam>
    <summary>
            Configures a many relationship from an entity type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="manyNavigationPropertyConfiguration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="manyNavigationPropertyConfiguration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="manyNavigationPropertyConfiguration.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="manyNavigationPropertyConfiguration.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithMany">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt; WithMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2&lt;!TEntityType, !TTargetEntityType&gt; WithMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithMany" />
      <MemberSignature Language="VB.NET" Value="Public Function WithMany () As ManyToManyNavigationPropertyConfiguration(Of TEntityType, TTargetEntityType)" />
      <MemberSignature Language="F#" Value="member this.WithMany : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;'EntityType, 'argetEntityType (requires 'EntityType : null and 'argetEntityType : null)&gt;" Usage="manyNavigationPropertyConfiguration.WithMany " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the relationship to be many:many without a navigation property on the other side of the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithMany">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt; WithMany (System.Linq.Expressions.Expression&lt;Func&lt;TTargetEntityType,System.Collections.Generic.ICollection&lt;TEntityType&gt;&gt;&gt; navigationPropertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2&lt;!TEntityType, !TTargetEntityType&gt; WithMany(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TTargetEntityType, class System.Collections.Generic.ICollection`1&lt;!TEntityType&gt;&gt;&gt; navigationPropertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithMany (navigationPropertyExpression As Expression(Of Func(Of TTargetEntityType, ICollection(Of TEntityType)))) As ManyToManyNavigationPropertyConfiguration(Of TEntityType, TTargetEntityType)" />
      <MemberSignature Language="F#" Value="member this.WithMany : System.Linq.Expressions.Expression&lt;Func&lt;'argetEntityType, System.Collections.Generic.ICollection&lt;'EntityType&gt;&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;'EntityType, 'argetEntityType (requires 'EntityType : null and 'argetEntityType : null)&gt;" Usage="manyNavigationPropertyConfiguration.WithMany navigationPropertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationPropertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TTargetEntityType,System.Collections.Generic.ICollection&lt;TEntityType&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationPropertyExpression"> An lambda expression representing the navigation property on the other end of the relationship. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures the relationship to be many:many with a navigation property on the other side of the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOptional">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TTargetEntityType&gt; WithOptional ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1&lt;!TTargetEntityType&gt; WithOptional() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithOptional" />
      <MemberSignature Language="VB.NET" Value="Public Function WithOptional () As DependentNavigationPropertyConfiguration(Of TTargetEntityType)" />
      <MemberSignature Language="F#" Value="member this.WithOptional : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;'argetEntityType (requires 'argetEntityType : null)&gt;" Usage="manyNavigationPropertyConfiguration.WithOptional " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TTargetEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the relationship to be many:optional without a navigation property on the other side of the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOptional">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TTargetEntityType&gt; WithOptional (System.Linq.Expressions.Expression&lt;Func&lt;TTargetEntityType,TEntityType&gt;&gt; navigationPropertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1&lt;!TTargetEntityType&gt; WithOptional(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TTargetEntityType, !TEntityType&gt;&gt; navigationPropertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithOptional(System.Linq.Expressions.Expression{System.Func{`1,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithOptional (navigationPropertyExpression As Expression(Of Func(Of TTargetEntityType, TEntityType))) As DependentNavigationPropertyConfiguration(Of TTargetEntityType)" />
      <MemberSignature Language="F#" Value="member this.WithOptional : System.Linq.Expressions.Expression&lt;Func&lt;'argetEntityType, 'EntityType&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;'argetEntityType (requires 'argetEntityType : null)&gt;" Usage="manyNavigationPropertyConfiguration.WithOptional navigationPropertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TTargetEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationPropertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TTargetEntityType,TEntityType&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationPropertyExpression"> An lambda expression representing the navigation property on the other end of the relationship. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures the relationship to be many:optional with a navigation property on the other side of the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithRequired">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TTargetEntityType&gt; WithRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1&lt;!TTargetEntityType&gt; WithRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithRequired" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRequired () As DependentNavigationPropertyConfiguration(Of TTargetEntityType)" />
      <MemberSignature Language="F#" Value="member this.WithRequired : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;'argetEntityType (requires 'argetEntityType : null)&gt;" Usage="manyNavigationPropertyConfiguration.WithRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TTargetEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the relationship to be many:required without a navigation property on the other side of the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithRequired">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TTargetEntityType&gt; WithRequired (System.Linq.Expressions.Expression&lt;Func&lt;TTargetEntityType,TEntityType&gt;&gt; navigationPropertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1&lt;!TTargetEntityType&gt; WithRequired(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TTargetEntityType, !TEntityType&gt;&gt; navigationPropertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithRequired(System.Linq.Expressions.Expression{System.Func{`1,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRequired (navigationPropertyExpression As Expression(Of Func(Of TTargetEntityType, TEntityType))) As DependentNavigationPropertyConfiguration(Of TTargetEntityType)" />
      <MemberSignature Language="F#" Value="member this.WithRequired : System.Linq.Expressions.Expression&lt;Func&lt;'argetEntityType, 'EntityType&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;'argetEntityType (requires 'argetEntityType : null)&gt;" Usage="manyNavigationPropertyConfiguration.WithRequired navigationPropertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TTargetEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationPropertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TTargetEntityType,TEntityType&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationPropertyExpression"> An lambda expression representing the navigation property on the other end of the relationship. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures the relationship to be many:required with a navigation property on the other side of the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>