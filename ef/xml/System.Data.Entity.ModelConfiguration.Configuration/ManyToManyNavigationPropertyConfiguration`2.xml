<Type Name="ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;" FullName="System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;">
  <TypeSignature Language="C#" Value="public class ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt; where TEntityType : class where TTargetEntityType : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManyToManyNavigationPropertyConfiguration`2&lt;class TEntityType, class TTargetEntityType&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2" />
  <TypeSignature Language="VB.NET" Value="Public Class ManyToManyNavigationPropertyConfiguration(Of TEntityType, TTargetEntityType)" />
  <TypeSignature Language="F#" Value="type ManyToManyNavigationPropertyConfiguration&lt;'EntityType, 'argetEntityType (requires 'EntityType : null and 'argetEntityType : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntityType">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TTargetEntityType">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntityType">The type of the parent entity of the navigation property specified in the HasMany call.</typeparam>
    <typeparam name="TTargetEntityType">The type of the parent entity of the navigation property specified in the WithMany call.</typeparam>
    <summary>
            Configures a many:many relationship.
            This configuration functionality is available via the Code First Fluent API, see <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="manyToManyNavigationPropertyConfiguration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="manyToManyNavigationPropertyConfiguration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="manyToManyNavigationPropertyConfiguration.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt; Map (Action&lt;System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration&gt; configurationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2&lt;!TEntityType, !TTargetEntityType&gt; Map(class System.Action`1&lt;class System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration&gt; configurationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.Map(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration})" />
      <MemberSignature Language="VB.NET" Value="Public Function Map (configurationAction As Action(Of ManyToManyAssociationMappingConfiguration)) As ManyToManyNavigationPropertyConfiguration(Of TEntityType, TTargetEntityType)" />
      <MemberSignature Language="F#" Value="member this.Map : Action&lt;System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;'EntityType, 'argetEntityType (requires 'EntityType : null and 'argetEntityType : null)&gt;" Usage="manyToManyNavigationPropertyConfiguration.Map configurationAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationAction" Type="System.Action&lt;System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration&gt;" />
      </Parameters>
      <Docs>
        <param name="configurationAction"> Action that configures the foreign key column(s) and table. </param>
        <summary>
            Configures the foreign key column(s) and table used to store the relationship.
            </summary>
        <returns>The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2" /> instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapToStoredProcedures">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt; MapToStoredProcedures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2&lt;!TEntityType, !TTargetEntityType&gt; MapToStoredProcedures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.MapToStoredProcedures" />
      <MemberSignature Language="VB.NET" Value="Public Function MapToStoredProcedures () As ManyToManyNavigationPropertyConfiguration(Of TEntityType, TTargetEntityType)" />
      <MemberSignature Language="F#" Value="member this.MapToStoredProcedures : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;'EntityType, 'argetEntityType (requires 'EntityType : null and 'argetEntityType : null)&gt;" Usage="manyToManyNavigationPropertyConfiguration.MapToStoredProcedures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures stored procedures to be used for modifying this relationship.
            The default conventions for procedure and parameter names will be used.
            </summary>
        <returns>The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2" /> instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapToStoredProcedures">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt; MapToStoredProcedures (Action&lt;System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration&lt;TEntityType,TTargetEntityType&gt;&gt; modificationStoredProcedureMappingConfigurationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2&lt;!TEntityType, !TTargetEntityType&gt; MapToStoredProcedures(class System.Action`1&lt;class System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration`2&lt;!TEntityType, !TTargetEntityType&gt;&gt; modificationStoredProcedureMappingConfigurationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.MapToStoredProcedures(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration{`0,`1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function MapToStoredProcedures (modificationStoredProcedureMappingConfigurationAction As Action(Of ManyToManyModificationStoredProceduresConfiguration(Of TEntityType, TTargetEntityType))) As ManyToManyNavigationPropertyConfiguration(Of TEntityType, TTargetEntityType)" />
      <MemberSignature Language="F#" Value="member this.MapToStoredProcedures : Action&lt;System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration&lt;'EntityType, 'argetEntityType&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;'EntityType, 'argetEntityType (requires 'EntityType : null and 'argetEntityType : null)&gt;" Usage="manyToManyNavigationPropertyConfiguration.MapToStoredProcedures modificationStoredProcedureMappingConfigurationAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationStoredProcedureMappingConfigurationAction" Type="System.Action&lt;System.Data.Entity.ModelConfiguration.Configuration.ManyToManyModificationStoredProceduresConfiguration&lt;TEntityType,TTargetEntityType&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="modificationStoredProcedureMappingConfigurationAction">
            Configuration to override the default conventions for procedure and parameter names.
            </param>
        <summary> 
            Configures stored procedures to be used for modifying this relationship. 
            </summary>
        <returns>The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2" /> instance so that multiple calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="manyToManyNavigationPropertyConfiguration.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>