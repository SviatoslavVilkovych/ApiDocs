<Type Name="OptionalNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;" FullName="System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt;">
  <TypeSignature Language="C#" Value="public class OptionalNavigationPropertyConfiguration&lt;TEntityType,TTargetEntityType&gt; where TEntityType : class where TTargetEntityType : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OptionalNavigationPropertyConfiguration`2&lt;class TEntityType, class TTargetEntityType&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2" />
  <TypeSignature Language="VB.NET" Value="Public Class OptionalNavigationPropertyConfiguration(Of TEntityType, TTargetEntityType)" />
  <TypeSignature Language="F#" Value="type OptionalNavigationPropertyConfiguration&lt;'EntityType, 'argetEntityType (requires 'EntityType : null and 'argetEntityType : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntityType">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TTargetEntityType">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntityType"> The entity type that the relationship originates from. </typeparam>
    <typeparam name="TTargetEntityType"> The entity type that the relationship targets. </typeparam>
    <summary>
            Configures an optional relationship from an entity type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="optionalNavigationPropertyConfiguration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="optionalNavigationPropertyConfiguration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="optionalNavigationPropertyConfiguration.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="optionalNavigationPropertyConfiguration.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WithMany">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TEntityType&gt; WithMany ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1&lt;!TEntityType&gt; WithMany() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithMany" />
      <MemberSignature Language="VB.NET" Value="Public Function WithMany () As DependentNavigationPropertyConfiguration(Of TEntityType)" />
      <MemberSignature Language="F#" Value="member this.WithMany : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;'EntityType (requires 'EntityType : null)&gt;" Usage="optionalNavigationPropertyConfiguration.WithMany " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the relationship to be optional:many without a navigation property on the other side of the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithMany">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TEntityType&gt; WithMany (System.Linq.Expressions.Expression&lt;Func&lt;TTargetEntityType,System.Collections.Generic.ICollection&lt;TEntityType&gt;&gt;&gt; navigationPropertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1&lt;!TEntityType&gt; WithMany(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TTargetEntityType, class System.Collections.Generic.ICollection`1&lt;!TEntityType&gt;&gt;&gt; navigationPropertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithMany (navigationPropertyExpression As Expression(Of Func(Of TTargetEntityType, ICollection(Of TEntityType)))) As DependentNavigationPropertyConfiguration(Of TEntityType)" />
      <MemberSignature Language="F#" Value="member this.WithMany : System.Linq.Expressions.Expression&lt;Func&lt;'argetEntityType, System.Collections.Generic.ICollection&lt;'EntityType&gt;&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;'EntityType (requires 'EntityType : null)&gt;" Usage="optionalNavigationPropertyConfiguration.WithMany navigationPropertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration&lt;TEntityType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationPropertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TTargetEntityType,System.Collections.Generic.ICollection&lt;TEntityType&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationPropertyExpression"> An lambda expression representing the navigation property on the other end of the relationship. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures the relationship to be optional:many with a navigation property on the other side of the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOptionalDependent">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithOptionalDependent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithOptionalDependent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalDependent" />
      <MemberSignature Language="VB.NET" Value="Public Function WithOptionalDependent () As ForeignKeyNavigationPropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.WithOptionalDependent : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration" Usage="optionalNavigationPropertyConfiguration.WithOptionalDependent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the relationship to be optional:optional without a navigation property on the other side of the relationship.
            The entity type being configured will be the dependent and contain a foreign key to the principal.
            The entity type that the relationship targets will be the principal in the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOptionalDependent">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithOptionalDependent (System.Linq.Expressions.Expression&lt;Func&lt;TTargetEntityType,TEntityType&gt;&gt; navigationPropertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithOptionalDependent(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TTargetEntityType, !TEntityType&gt;&gt; navigationPropertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalDependent(System.Linq.Expressions.Expression{System.Func{`1,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithOptionalDependent (navigationPropertyExpression As Expression(Of Func(Of TTargetEntityType, TEntityType))) As ForeignKeyNavigationPropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.WithOptionalDependent : System.Linq.Expressions.Expression&lt;Func&lt;'argetEntityType, 'EntityType&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration" Usage="optionalNavigationPropertyConfiguration.WithOptionalDependent navigationPropertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationPropertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TTargetEntityType,TEntityType&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationPropertyExpression"> An lambda expression representing the navigation property on the other end of the relationship. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures the relationship to be optional:optional with a navigation property on the other side of the relationship.
            The entity type being configured will be the dependent and contain a foreign key to the principal.
            The entity type that the relationship targets will be the principal in the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOptionalPrincipal">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithOptionalPrincipal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithOptionalPrincipal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Function WithOptionalPrincipal () As ForeignKeyNavigationPropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.WithOptionalPrincipal : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration" Usage="optionalNavigationPropertyConfiguration.WithOptionalPrincipal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the relationship to be optional:optional without a navigation property on the other side of the relationship.
            The entity type being configured will be the principal in the relationship.
            The entity type that the relationship targets will be the dependent and contain a foreign key to the principal.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOptionalPrincipal">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithOptionalPrincipal (System.Linq.Expressions.Expression&lt;Func&lt;TTargetEntityType,TEntityType&gt;&gt; navigationPropertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithOptionalPrincipal(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TTargetEntityType, !TEntityType&gt;&gt; navigationPropertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal(System.Linq.Expressions.Expression{System.Func{`1,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithOptionalPrincipal (navigationPropertyExpression As Expression(Of Func(Of TTargetEntityType, TEntityType))) As ForeignKeyNavigationPropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.WithOptionalPrincipal : System.Linq.Expressions.Expression&lt;Func&lt;'argetEntityType, 'EntityType&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration" Usage="optionalNavigationPropertyConfiguration.WithOptionalPrincipal navigationPropertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationPropertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TTargetEntityType,TEntityType&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationPropertyExpression"> A lambda expression representing the navigation property on the other end of the relationship. </param>
        <summary>
            Configures the relationship to be optional:optional with a navigation property on the other side of the relationship.
            The entity type being configured will be the principal in the relationship.
            The entity type that the relationship targets will be the dependent and contain a foreign key to the principal.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithRequired">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithRequired" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRequired () As ForeignKeyNavigationPropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.WithRequired : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration" Usage="optionalNavigationPropertyConfiguration.WithRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the relationship to be optional:required without a navigation property on the other side of the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithRequired">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithRequired (System.Linq.Expressions.Expression&lt;Func&lt;TTargetEntityType,TEntityType&gt;&gt; navigationPropertyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration WithRequired(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TTargetEntityType, !TEntityType&gt;&gt; navigationPropertyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithRequired(System.Linq.Expressions.Expression{System.Func{`1,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRequired (navigationPropertyExpression As Expression(Of Func(Of TTargetEntityType, TEntityType))) As ForeignKeyNavigationPropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.WithRequired : System.Linq.Expressions.Expression&lt;Func&lt;'argetEntityType, 'EntityType&gt;&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration" Usage="optionalNavigationPropertyConfiguration.WithRequired navigationPropertyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationPropertyExpression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TTargetEntityType,TEntityType&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="navigationPropertyExpression"> An lambda expression representing the navigation property on the other end of the relationship. C#: t =&gt; t.MyProperty VB.Net: Function(t) t.MyProperty </param>
        <summary>
            Configures the relationship to be optional:required with a navigation property on the other side of the relationship.
            </summary>
        <returns> A configuration object that can be used to further configure the relationship. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>