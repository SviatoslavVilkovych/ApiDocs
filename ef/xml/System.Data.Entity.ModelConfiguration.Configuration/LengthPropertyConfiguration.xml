<Type Name="LengthPropertyConfiguration" FullName="System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration">
  <TypeSignature Language="C#" Value="public abstract class LengthPropertyConfiguration : System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LengthPropertyConfiguration extends System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LengthPropertyConfiguration&#xA;Inherits PrimitivePropertyConfiguration" />
  <TypeSignature Language="F#" Value="type LengthPropertyConfiguration = class&#xA;    inherit PrimitivePropertyConfiguration" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Used to configure a property with length facets for an entity type or complex type.
            This configuration functionality is available via the Code First Fluent API, see <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HasMaxLength">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration HasMaxLength (Nullable&lt;int&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration HasMaxLength(valuetype System.Nullable`1&lt;int32&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.HasMaxLength(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function HasMaxLength (value As Nullable(Of Integer)) As LengthPropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasMaxLength : Nullable&lt;int&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration" Usage="lengthPropertyConfiguration.HasMaxLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="value"> The maximum length for the property. Setting 'null' will remove any maximum length restriction from the property and a default length will be used for the database column. </param>
        <summary>
            Configures the property to have the specified maximum length.
            </summary>
        <returns> The same LengthPropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration IsFixedLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration IsFixedLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFixedLength () As LengthPropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsFixedLength : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration" Usage="lengthPropertyConfiguration.IsFixedLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the property to be fixed length.
            Use HasMaxLength to set the length that the property is fixed to.
            </summary>
        <returns> The same LengthPropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMaxLength">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration IsMaxLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration IsMaxLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.IsMaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Function IsMaxLength () As LengthPropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsMaxLength : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration" Usage="lengthPropertyConfiguration.IsMaxLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the property to allow the maximum length supported by the database provider.
            </summary>
        <returns> The same LengthPropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVariableLength">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration IsVariableLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration IsVariableLength() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.IsVariableLength" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVariableLength () As LengthPropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsVariableLength : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration" Usage="lengthPropertyConfiguration.IsVariableLength " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the property to be variable length.
            Properties are variable length by default.
            </summary>
        <returns> The same LengthPropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>