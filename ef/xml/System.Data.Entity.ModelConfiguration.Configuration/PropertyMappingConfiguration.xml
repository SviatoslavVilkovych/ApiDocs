<Type Name="PropertyMappingConfiguration" FullName="System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration">
  <TypeSignature Language="C#" Value="public class PropertyMappingConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyMappingConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyMappingConfiguration" />
  <TypeSignature Language="F#" Value="type PropertyMappingConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Used to configure a property in a mapping fragment.
            This configuration functionality is available via the Code First Fluent API, see <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HasColumnAnnotation">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration HasColumnAnnotation (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration HasColumnAnnotation(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration.HasColumnAnnotation(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasColumnAnnotation (name As String, value As Object) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasColumnAnnotation : string * obj -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="propertyMappingConfiguration.HasColumnAnnotation (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The annotation name, which must be a valid C#/EDM identifier.</param>
        <param name="value">The annotation value, which may be a string or some other type that
            can be serialized with an <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
        <summary>
            Sets an annotation in the model for the database column used to store the property. The annotation
            value can later be used when processing the column such as when creating migrations.
            </summary>
        <returns>The same PropertyMappingConfiguration instance so that multiple calls can be chained.</returns>
        <remarks>
            It will likely be necessary to register a <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /> if the type of
            the annotation value is anything other than a string. Passing a null value clears any annotation with
            the given name on the column that had been previously set.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnName">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration HasColumnName (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration HasColumnName(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration.HasColumnName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasColumnName (columnName As String) As PropertyMappingConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasColumnName : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration" Usage="propertyMappingConfiguration.HasColumnName columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PropertyMappingConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"> The name of the column. </param>
        <summary>
            Configures the name of the database column used to store the property, in a mapping fragment.
            </summary>
        <returns> The same PropertyMappingConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>