<Type Name="PrimitivePropertyConfiguration" FullName="System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration">
  <TypeSignature Language="C#" Value="public class PrimitivePropertyConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrimitivePropertyConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class PrimitivePropertyConfiguration" />
  <TypeSignature Language="F#" Value="type PrimitivePropertyConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Used to configure a primitive property of an entity type or complex type.
            This configuration functionality is available via the Code First Fluent API, see <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="primitivePropertyConfiguration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="primitivePropertyConfiguration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="primitivePropertyConfiguration.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnAnnotation">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasColumnAnnotation (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasColumnAnnotation(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnAnnotation(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasColumnAnnotation (name As String, value As Object) As PrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasColumnAnnotation : string * obj -&gt; System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" Usage="primitivePropertyConfiguration.HasColumnAnnotation (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The annotation name, which must be a valid C#/EDM identifier.</param>
        <param name="value">The annotation value, which may be a string or some other type that
            can be serialized with an <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
        <summary>
            Sets an annotation in the model for the database column used to store the property. The annotation
            value can later be used when processing the column such as when creating migrations.
            </summary>
        <returns>The same PrimitivePropertyConfiguration instance so that multiple calls can be chained.</returns>
        <remarks>
            It will likely be necessary to register a <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /> if the type of
            the annotation value is anything other than a string. Passing a null value clears any annotation with
            the given name on the column that had been previously set.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnName">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasColumnName (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasColumnName(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasColumnName (columnName As String) As PrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasColumnName : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" Usage="primitivePropertyConfiguration.HasColumnName columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"> The name of the column. </param>
        <summary>
            Configures the name of the database column used to store the property.
            </summary>
        <returns> The same PrimitivePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnOrder">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasColumnOrder (Nullable&lt;int&gt; columnOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasColumnOrder(valuetype System.Nullable`1&lt;int32&gt; columnOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function HasColumnOrder (columnOrder As Nullable(Of Integer)) As PrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasColumnOrder : Nullable&lt;int&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" Usage="primitivePropertyConfiguration.HasColumnOrder columnOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnOrder" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="columnOrder"> The order that this column should appear in the database table. </param>
        <summary>
            Configures the order of the database column used to store the property.
            This method is also used to specify key ordering when an entity type has a composite key.
            </summary>
        <returns> The same PrimitivePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnType">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasColumnType (string columnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasColumnType(string columnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasColumnType (columnType As String) As PrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasColumnType : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" Usage="primitivePropertyConfiguration.HasColumnType columnType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnType"> Name of the database provider specific data type. </param>
        <summary>
            Configures the data type of the database column used to store the property.
            </summary>
        <returns> The same PrimitivePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDatabaseGeneratedOption">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasDatabaseGeneratedOption (Nullable&lt;System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption&gt; databaseGeneratedOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasDatabaseGeneratedOption(valuetype System.Nullable`1&lt;valuetype System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption&gt; databaseGeneratedOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})" />
      <MemberSignature Language="VB.NET" Value="Public Function HasDatabaseGeneratedOption (databaseGeneratedOption As Nullable(Of DatabaseGeneratedOption)) As PrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasDatabaseGeneratedOption : Nullable&lt;System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" Usage="primitivePropertyConfiguration.HasDatabaseGeneratedOption databaseGeneratedOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseGeneratedOption" Type="System.Nullable&lt;System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption&gt;" />
      </Parameters>
      <Docs>
        <param name="databaseGeneratedOption">
            The pattern used to generate values for the property in the database.
            Setting 'null' will cause the default option to be used, which may be 'None', 'Identity', or 'Computed' depending
            on the type of the property, its semantics in the model (e.g. primary keys are treated differently), and which
            set of conventions are being used.
            </param>
        <summary>
            Configures how values for the property are generated by the database.
            </summary>
        <returns> The same PrimitivePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasParameterName">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration HasParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasParameterName (parameterName As String) As PrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasParameterName : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" Usage="primitivePropertyConfiguration.HasParameterName parameterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">Name of the parameter.</param>
        <summary>
            Configures the name of the parameter used in stored procedures for this property.
            </summary>
        <returns> The same PrimitivePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConcurrencyToken">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration IsConcurrencyToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration IsConcurrencyToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsConcurrencyToken" />
      <MemberSignature Language="VB.NET" Value="Public Function IsConcurrencyToken () As PrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsConcurrencyToken : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" Usage="primitivePropertyConfiguration.IsConcurrencyToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the property to be used as an optimistic concurrency token.
            </summary>
        <returns> The same PrimitivePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConcurrencyToken">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration IsConcurrencyToken (Nullable&lt;bool&gt; concurrencyToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration IsConcurrencyToken(valuetype System.Nullable`1&lt;bool&gt; concurrencyToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsConcurrencyToken (concurrencyToken As Nullable(Of Boolean)) As PrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsConcurrencyToken : Nullable&lt;bool&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" Usage="primitivePropertyConfiguration.IsConcurrencyToken concurrencyToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="concurrencyToken" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyToken"> Value indicating if the property is a concurrency token or not. Specifying 'null' will remove the concurrency token facet from the property. Specifying 'null' will cause the same runtime behavior as specifying 'false'. </param>
        <summary>
            Configures whether or not the property is to be used as an optimistic concurrency token.
            </summary>
        <returns> The same PrimitivePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptional">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration IsOptional ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration IsOptional() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsOptional" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOptional () As PrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsOptional : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" Usage="primitivePropertyConfiguration.IsOptional " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the property to be optional.
            The database column used to store this property will be nullable.
            </summary>
        <returns> The same PrimitivePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration IsRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration IsRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsRequired" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRequired () As PrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsRequired : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" Usage="primitivePropertyConfiguration.IsRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the property to be required.
            The database column used to store this property will be non-nullable.
            </summary>
        <returns> The same PrimitivePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="primitivePropertyConfiguration.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>