<Type Name="ConventionTypeConfiguration" FullName="System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration">
  <TypeSignature Language="C#" Value="public class ConventionTypeConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConventionTypeConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class ConventionTypeConfiguration" />
  <TypeSignature Language="F#" Value="type ConventionTypeConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Allows configuration to be performed for an entity type in a model.
            This configuration functionality is available via lightweight conventions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ClrType">
      <MemberSignature Language="C#" Value="public Type ClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ClrType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.ClrType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrType As Type" />
      <MemberSignature Language="F#" Value="member this.ClrType : Type" Usage="System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.ClrType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of this entity type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="conventionTypeConfiguration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="conventionTypeConfiguration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="conventionTypeConfiguration.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEntitySetName">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasEntitySetName (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasEntitySetName(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasEntitySetName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasEntitySetName (entitySetName As String) As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasEntitySetName : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.HasEntitySetName entitySetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName"> The name of the entity set. </param>
        <summary>
            Configures the entity set name to be used for this entity type.
            The entity set name can only be configured for the base type in each set.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>
            Calling this will have no effect once it has been configured.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKey">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasKey (System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; keyProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasKey(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; keyProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasKey(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Function HasKey (keyProperties As IEnumerable(Of PropertyInfo)) As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasKey : seq&lt;System.Reflection.PropertyInfo&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.HasKey keyProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyProperties" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="keyProperties"> The properties to be used as the primary key. </param>
        <summary>
            Configures the primary key property(s) for this entity type.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>
            Calling this will have no effect once it has been configured or if any
            property does not exist.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKey">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasKey (System.Collections.Generic.IEnumerable&lt;string&gt; propertyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasKey(class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasKey(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function HasKey (propertyNames As IEnumerable(Of String)) As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasKey : seq&lt;string&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.HasKey propertyNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyNames" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyNames"> The names of the properties to be used as the primary key. </param>
        <summary>
            Configures the primary key property(s) for this entity type.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKey">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasKey (System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasKey(class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasKey(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="F#" Value="member this.HasKey : System.Reflection.PropertyInfo -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.HasKey propertyInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"> The property to be used as the primary key. </param>
        <summary>
            Configures the primary key property for this entity type.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKey">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasKey (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasKey(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasKey (propertyName As String) As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasKey : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.HasKey propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"> The name of the property to be used as the primary key. </param>
        <summary>
            Configures the primary key property for this entity type.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTableAnnotation">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasTableAnnotation (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration HasTableAnnotation(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.HasTableAnnotation(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasTableAnnotation (name As String, value As Object) As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasTableAnnotation : string * obj -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.HasTableAnnotation (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The annotation name, which must be a valid C#/EDM identifier.</param>
        <param name="value">The annotation value, which may be a string or some other type that
            can be serialized with an <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
        <summary>
            Sets an annotation in the model for the table to which this entity is mapped. The annotation
            value can later be used when processing the table such as when creating migrations.
            </summary>
        <returns>The same configuration instance so that multiple calls can be chained.</returns>
        <remarks>
            It will likely be necessary to register a <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /> if the type of
            the annotation value is anything other than a string. Calling this method will have no effect if the 
            annotation with the given name has already been configured.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration Ignore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration Ignore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Ignore" />
      <MemberSignature Language="VB.NET" Value="Public Function Ignore () As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.Ignore : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.Ignore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Excludes this entity type from the model so that it will not be mapped to the database.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration Ignore (System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration Ignore(class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Ignore(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="F#" Value="member this.Ignore : System.Reflection.PropertyInfo -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.Ignore propertyInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"> The property to be configured. </param>
        <summary>
            Excludes a property from the model so that it will not be mapped to the database.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>
            Calling this will have no effect if the property does not exist.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration Ignore (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration Ignore(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Ignore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ignore (propertyName As String) As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.Ignore : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.Ignore propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"> The name of the property to be configured. </param>
        <summary>
            Excludes a property from the model so that it will not be mapped to the database.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>
            Calling this will have no effect if the property does not exist.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComplexType">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration IsComplexType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration IsComplexType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.IsComplexType" />
      <MemberSignature Language="VB.NET" Value="Public Function IsComplexType () As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsComplexType : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.IsComplexType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Changes this entity type to a complex type.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapToStoredProcedures">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration MapToStoredProcedures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration MapToStoredProcedures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.MapToStoredProcedures" />
      <MemberSignature Language="VB.NET" Value="Public Function MapToStoredProcedures () As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.MapToStoredProcedures : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.MapToStoredProcedures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures this type to use stored procedures for insert, update and delete.
            The default conventions for procedure and parameter names will be used.
            </summary>
        <returns> The same configuration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapToStoredProcedures">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration MapToStoredProcedures (Action&lt;System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration&gt; modificationStoredProceduresConfigurationAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration MapToStoredProcedures(class System.Action`1&lt;class System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration&gt; modificationStoredProceduresConfigurationAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.MapToStoredProcedures(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration})" />
      <MemberSignature Language="VB.NET" Value="Public Function MapToStoredProcedures (modificationStoredProceduresConfigurationAction As Action(Of ConventionModificationStoredProceduresConfiguration)) As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.MapToStoredProcedures : Action&lt;System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.MapToStoredProcedures modificationStoredProceduresConfigurationAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationStoredProceduresConfigurationAction" Type="System.Action&lt;System.Data.Entity.ModelConfiguration.Configuration.ConventionModificationStoredProceduresConfiguration&gt;" />
      </Parameters>
      <Docs>
        <param name="modificationStoredProceduresConfigurationAction">
            Configuration to override the default conventions for procedure and parameter names.
            </param>
        <summary>
            Configures this type to use stored procedures for insert, update and delete.
            </summary>
        <returns> The same configuration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration Property (System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration Property(class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Property(System.Reflection.PropertyInfo)" />
      <MemberSignature Language="F#" Value="member this.Property : System.Reflection.PropertyInfo -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" Usage="conventionTypeConfiguration.Property propertyInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"> The property being configured. </param>
        <summary>
            Configures a property that is defined on this type.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration Property (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration Property(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.Property(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyName As String) As ConventionPrimitivePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.Property : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration" Usage="conventionTypeConfiguration.Property propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionPrimitivePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"> The name of the property being configured. </param>
        <summary>
            Configures a property that is defined on this type.
            </summary>
        <returns> A configuration object that can be used to configure the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="conventionTypeConfiguration.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ToTable">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration ToTable (string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration ToTable(string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.ToTable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTable (tableName As String) As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.ToTable : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.ToTable tableName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName"> The name of the table. </param>
        <summary>
            Configures the table name that this entity type is mapped to.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>
            Calling this will have no effect once it has been configured.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTable">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration ToTable (string tableName, string schemaName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration ToTable(string tableName, string schemaName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration.ToTable(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTable (tableName As String, schemaName As String) As ConventionTypeConfiguration" />
      <MemberSignature Language="F#" Value="member this.ToTable : string * string -&gt; System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" Usage="conventionTypeConfiguration.ToTable (tableName, schemaName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="schemaName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName"> The name of the table. </param>
        <param name="schemaName"> The database schema of the table. </param>
        <summary>
            Configures the table name that this entity type is mapped to.
            </summary>
        <returns>
            The same <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionTypeConfiguration" /> instance so that multiple calls can be chained.
            </returns>
        <remarks>
            Calling this will have no effect once it has been configured.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>