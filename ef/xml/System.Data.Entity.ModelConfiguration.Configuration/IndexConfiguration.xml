<Type Name="IndexConfiguration" FullName="System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration">
  <TypeSignature Language="C#" Value="public class IndexConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IndexConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class IndexConfiguration" />
  <TypeSignature Language="F#" Value="type IndexConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Configures an index.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HasName">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration HasName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration HasName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration.HasName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasName (name As String) As IndexConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasName : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration" Usage="indexConfiguration.HasName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> Value indicating what the index name should be.</param>
        <summary>
            Configures the index to have a specific name.
            </summary>
        <returns> The same IndexConfigurationBase instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration IsClustered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration IsClustered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration.IsClustered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClustered () As IndexConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsClustered : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration" Usage="indexConfiguration.IsClustered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the index to be clustered.
            </summary>
        <returns> The same IndexConfigurationBase instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration IsClustered (bool clustered);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration IsClustered(bool clustered) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration.IsClustered(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClustered (clustered As Boolean) As IndexConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsClustered : bool -&gt; System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration" Usage="indexConfiguration.IsClustered clustered" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clustered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clustered"> Value indicating if the index should be clustered or not. </param>
        <summary>
            Configures whether or not the index will be clustered.
            </summary>
        <returns> The same IndexConfigurationBase instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnique">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration IsUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration IsUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration.IsUnique" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnique () As IndexConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsUnique : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration" Usage="indexConfiguration.IsUnique " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the index to be unique.
            </summary>
        <returns> The same IndexConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnique">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration IsUnique (bool unique);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration IsUnique(bool unique) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration.IsUnique(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnique (unique As Boolean) As IndexConfiguration" />
      <MemberSignature Language="F#" Value="member this.IsUnique : bool -&gt; System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration" Usage="indexConfiguration.IsUnique unique" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unique" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="unique"> Value indicating if the index should be unique or not. </param>
        <summary>
            Configures whether the index will be unique.
            </summary>
        <returns> The same IndexConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>