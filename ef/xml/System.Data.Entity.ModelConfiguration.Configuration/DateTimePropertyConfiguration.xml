<Type Name="DateTimePropertyConfiguration" FullName="System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration">
  <TypeSignature Language="C#" Value="public class DateTimePropertyConfiguration : System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DateTimePropertyConfiguration extends System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class DateTimePropertyConfiguration&#xA;Inherits PrimitivePropertyConfiguration" />
  <TypeSignature Language="F#" Value="type DateTimePropertyConfiguration = class&#xA;    inherit PrimitivePropertyConfiguration" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Used to configure a <see cref="T:System.DateTime" /> property of an entity type or complex type.
            This configuration functionality is available via the Code First Fluent API, see <see cref="T:System.Data.Entity.DbModelBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HasColumnAnnotation">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasColumnAnnotation (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasColumnAnnotation(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnAnnotation(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasColumnAnnotation (name As String, value As Object) As DateTimePropertyConfiguration" />
      <MemberSignature Language="F#" Value="override this.HasColumnAnnotation : string * obj -&gt; System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" Usage="dateTimePropertyConfiguration.HasColumnAnnotation (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The annotation name, which must be a valid C#/EDM identifier.</param>
        <param name="value">The annotation value, which may be a string or some other type that
            can be serialized with an <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /></param>
        <summary>
            Sets an annotation in the model for the database column used to store the property. The annotation
            value can later be used when processing the column such as when creating migrations.
            </summary>
        <returns>The same DateTimePropertyConfiguration instance so that multiple calls can be chained.</returns>
        <remarks>
            It will likely be necessary to register a <see cref="T:System.Data.Entity.Infrastructure.IMetadataAnnotationSerializer" /> if the type of
            the annotation value is anything other than a string. Passing a null value clears any annotation with
            the given name on the column that had been previously set.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnName">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasColumnName (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasColumnName(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasColumnName (columnName As String) As DateTimePropertyConfiguration" />
      <MemberSignature Language="F#" Value="override this.HasColumnName : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" Usage="dateTimePropertyConfiguration.HasColumnName columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"> The name of the column. </param>
        <summary>
            Configures the name of the database column used to store the property.
            </summary>
        <returns> The same DateTimePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnOrder">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasColumnOrder (Nullable&lt;int&gt; columnOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasColumnOrder(valuetype System.Nullable`1&lt;int32&gt; columnOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Function HasColumnOrder (columnOrder As Nullable(Of Integer)) As DateTimePropertyConfiguration" />
      <MemberSignature Language="F#" Value="override this.HasColumnOrder : Nullable&lt;int&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" Usage="dateTimePropertyConfiguration.HasColumnOrder columnOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnOrder" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="columnOrder"> The order that this column should appear in the database table. </param>
        <summary>
            Configures the order of the database column used to store the property.
            This method is also used to specify key ordering when an entity type has a composite key.
            </summary>
        <returns> The same DateTimePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasColumnType">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasColumnType (string columnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasColumnType(string columnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasColumnType (columnType As String) As DateTimePropertyConfiguration" />
      <MemberSignature Language="F#" Value="override this.HasColumnType : string -&gt; System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" Usage="dateTimePropertyConfiguration.HasColumnType columnType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnType"> Name of the database provider specific data type. </param>
        <summary>
            Configures the data type of the database column used to store the property.
            </summary>
        <returns> The same DateTimePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDatabaseGeneratedOption">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasDatabaseGeneratedOption (Nullable&lt;System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption&gt; databaseGeneratedOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasDatabaseGeneratedOption(valuetype System.Nullable`1&lt;valuetype System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption&gt; databaseGeneratedOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})" />
      <MemberSignature Language="VB.NET" Value="Public Function HasDatabaseGeneratedOption (databaseGeneratedOption As Nullable(Of DatabaseGeneratedOption)) As DateTimePropertyConfiguration" />
      <MemberSignature Language="F#" Value="override this.HasDatabaseGeneratedOption : Nullable&lt;System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" Usage="dateTimePropertyConfiguration.HasDatabaseGeneratedOption databaseGeneratedOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseGeneratedOption" Type="System.Nullable&lt;System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption&gt;" />
      </Parameters>
      <Docs>
        <param name="databaseGeneratedOption">
            The pattern used to generate values for the property in the database.
            Setting 'null' will cause the default option to be used, which may be 'None', 'Identity', or 'Computed' depending
            on the type of the property, its semantics in the model (e.g. primary keys are treated differently), and which
            set of conventions are being used.
            </param>
        <summary>
            Configures how values for the property are generated by the database.
            </summary>
        <returns> The same DateTimePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrecision">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasPrecision (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration HasPrecision(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasPrecision(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasPrecision (value As Byte) As DateTimePropertyConfiguration" />
      <MemberSignature Language="F#" Value="member this.HasPrecision : byte -&gt; System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" Usage="dateTimePropertyConfiguration.HasPrecision value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"> Precision of the property. </param>
        <summary>
            Configures the precision of the property.
            If the database provider does not support precision for the data type of the column then the value is ignored.
            </summary>
        <returns> The same DateTimePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConcurrencyToken">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration IsConcurrencyToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration IsConcurrencyToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsConcurrencyToken" />
      <MemberSignature Language="VB.NET" Value="Public Function IsConcurrencyToken () As DateTimePropertyConfiguration" />
      <MemberSignature Language="F#" Value="override this.IsConcurrencyToken : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" Usage="dateTimePropertyConfiguration.IsConcurrencyToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the property to be used as an optimistic concurrency token.
            </summary>
        <returns> The same DateTimePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConcurrencyToken">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration IsConcurrencyToken (Nullable&lt;bool&gt; concurrencyToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration IsConcurrencyToken(valuetype System.Nullable`1&lt;bool&gt; concurrencyToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function IsConcurrencyToken (concurrencyToken As Nullable(Of Boolean)) As DateTimePropertyConfiguration" />
      <MemberSignature Language="F#" Value="override this.IsConcurrencyToken : Nullable&lt;bool&gt; -&gt; System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" Usage="dateTimePropertyConfiguration.IsConcurrencyToken concurrencyToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="concurrencyToken" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="concurrencyToken"> Value indicating if the property is a concurrency token or not. Specifying 'null' will remove the concurrency token facet from the property. Specifying 'null' will cause the same runtime behavior as specifying 'false'. </param>
        <summary>
            Configures whether or not the property is to be used as an optimistic concurrency token.
            </summary>
        <returns> The same DateTimePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptional">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration IsOptional ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration IsOptional() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsOptional" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOptional () As DateTimePropertyConfiguration" />
      <MemberSignature Language="F#" Value="override this.IsOptional : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" Usage="dateTimePropertyConfiguration.IsOptional " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the property to be optional.
            The database column used to store this property will be nullable.
            </summary>
        <returns> The same DateTimePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration IsRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration IsRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsRequired" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRequired () As DateTimePropertyConfiguration" />
      <MemberSignature Language="F#" Value="override this.IsRequired : unit -&gt; System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" Usage="dateTimePropertyConfiguration.IsRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Configures the property to be required.
            The database column used to store this property will be non-nullable.
            <see cref="T:System.DateTime" /> properties are required by default.
            </summary>
        <returns> The same DateTimePropertyConfiguration instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>