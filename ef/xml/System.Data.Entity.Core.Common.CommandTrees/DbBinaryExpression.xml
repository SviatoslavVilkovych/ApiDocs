<Type Name="DbBinaryExpression" FullName="System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression">
  <TypeSignature Language="C#" Value="public abstract class DbBinaryExpression : System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbBinaryExpression extends System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbBinaryExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="F#" Value="type DbBinaryExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implements the basic functionality required by expressions that accept two expression operands.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.Common.CommandTrees.DbExpression Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Common.CommandTrees.DbExpression Left" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression.Left" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Left As DbExpression" />
      <MemberSignature Language="F#" Value="member this.Left : System.Data.Entity.Core.Common.CommandTrees.DbExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> that defines the left argument.
            </summary>
        <value>
            The <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> that defines the left argument.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
        <exception cref="T:System.ArgumentException">
            The expression is not associated with the command tree of the
            <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression" />
            ,or its result type is not equal or promotable to the required type for the left argument.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.Common.CommandTrees.DbExpression Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Common.CommandTrees.DbExpression Right" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression.Right" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Right As DbExpression" />
      <MemberSignature Language="F#" Value="member this.Right : System.Data.Entity.Core.Common.CommandTrees.DbExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> that defines the right argument.
            </summary>
        <value>
            The <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> that defines the right argument.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The expression is null.</exception>
        <exception cref="T:System.ArgumentException">
            The expression is not associated with the command tree of the
            <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression" />
            ,or its result type is not equal or promotable to the required type for the right argument.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>