<Type Name="DbModificationClause" FullName="System.Data.Entity.Core.Common.CommandTrees.DbModificationClause">
  <TypeSignature Language="C#" Value="public abstract class DbModificationClause" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbModificationClause extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Common.CommandTrees.DbModificationClause" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbModificationClause" />
  <TypeSignature Language="F#" Value="type DbModificationClause = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Specifies a single clause in an insert or update modification operation, see
            <see cref="P:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.SetClauses" /> and <see cref="P:System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree.SetClauses" /></summary>
    <remarks>
            An abstract base class allows the possibility of patterns other than
            Property = Value in future versions, e.g.,
            <code>update SomeTable
                set ComplexTypeColumn.SomeProperty()
                where Id = 2</code></remarks>
  </Docs>
  <Members />
</Type>