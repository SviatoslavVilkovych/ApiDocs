<Type Name="DbInsertCommandTree" FullName="System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree">
  <TypeSignature Language="C#" Value="public sealed class DbInsertCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbInsertCommandTree extends System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbInsertCommandTree&#xA;Inherits DbModificationCommandTree" />
  <TypeSignature Language="F#" Value="type DbInsertCommandTree = class&#xA;    inherit DbModificationCommandTree" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a single row insert operation expressed as a command tree. This class cannot be inherited.</summary>
    <remarks>
            Represents a single row insert operation expressed as a canonical command tree.
            When the <see cref="P:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.Returning" /> property is set, the command returns a reader; otherwise,
            it returns a scalar value indicating the number of rows affected.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbInsertCommandTree (System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace metadata, System.Data.Entity.Core.Metadata.Edm.DataSpace dataSpace, System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding target, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt; setClauses, System.Data.Entity.Core.Common.CommandTrees.DbExpression returning);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace metadata, valuetype System.Data.Entity.Core.Metadata.Edm.DataSpace dataSpace, class System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding target, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt; setClauses, class System.Data.Entity.Core.Common.CommandTrees.DbExpression returning) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationClause},System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree : System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace * System.Data.Entity.Core.Metadata.Edm.DataSpace * System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt; * System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree" Usage="new System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree (metadata, dataSpace, target, setClauses, returning)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" />
        <Parameter Name="dataSpace" Type="System.Data.Entity.Core.Metadata.Edm.DataSpace" />
        <Parameter Name="target" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" />
        <Parameter Name="setClauses" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt;" />
        <Parameter Name="returning" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="metadata">The model this command will operate on.</param>
        <param name="dataSpace">The data space.</param>
        <param name="target">The target table for the data manipulation language (DML) operation.</param>
        <param name="setClauses">The list of insert set clauses that define the insert operation. .</param>
        <param name="returning">A <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> that specifies a projection of results to be returned, based on the modified rows.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTreeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Core.Common.CommandTrees.DbCommandTreeKind CommandTreeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Core.Common.CommandTrees.DbCommandTreeKind CommandTreeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.CommandTreeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CommandTreeKind As DbCommandTreeKind" />
      <MemberSignature Language="F#" Value="member this.CommandTreeKind : System.Data.Entity.Core.Common.CommandTrees.DbCommandTreeKind" Usage="System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.CommandTreeKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbCommandTreeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the command tree kind.</summary>
        <value>The command tree kind.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Returning">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Common.CommandTrees.DbExpression Returning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Common.CommandTrees.DbExpression Returning" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.Returning" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Returning As DbExpression" />
      <MemberSignature Language="F#" Value="member this.Returning : System.Data.Entity.Core.Common.CommandTrees.DbExpression" Usage="System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.Returning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> that specifies a projection of results to be returned based on the modified rows.
            </summary>
        <value>
            An <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> that specifies a projection of results to be returned based on the modified rows. null indicates that no results should be returned from this command.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClauses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt; SetClauses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt; SetClauses" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.SetClauses" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetClauses As IList(Of DbModificationClause)" />
      <MemberSignature Language="F#" Value="member this.SetClauses : System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt;" Usage="System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree.SetClauses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of insert set clauses that define the insert operation. </summary>
        <value>The list of insert set clauses that define the insert operation. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>