<Type Name="BasicExpressionVisitor" FullName="System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor">
  <TypeSignature Language="C#" Value="public abstract class BasicExpressionVisitor : System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasicExpressionVisitor extends System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasicExpressionVisitor&#xA;Inherits DbExpressionVisitor" />
  <TypeSignature Language="F#" Value="type BasicExpressionVisitor = class&#xA;    inherit DbExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Common.CommandTrees.DbExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An abstract base type for types that implement the IExpressionVisitor interface to derive from.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicExpressionVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbAndExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbAndExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbAndExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbAndExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbAndExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbAndExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbAndExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbAndExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbApplyExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbApplyExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbApplyExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbArithmeticExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbArithmeticExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbArithmeticExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbCaseExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbCaseExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCaseExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbCastExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbCastExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCastExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbCastExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbCastExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbCastExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbCastExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCastExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbComparisonExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbComparisonExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbComparisonExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbConstantExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbConstantExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbConstantExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbCrossJoinExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbCrossJoinExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbCrossJoinExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbDerefExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DeRefExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbDerefExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbDistinctExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbDistinctExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbDistinctExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbElementExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbElementExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbElementExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbElementExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbElementExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbElementExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbElementExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbElementExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbEntityRefExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbEntityRefExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbEntityRefExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbExceptExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbExceptExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExceptExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The expression </param>
        <summary>
            Called when an <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> of an otherwise unrecognized type is encountered.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
        <exception cref="T:System.NotSupportedException">
            Always thrown if this method is called, since it indicates that
            <paramref name="expression" />
            is of an unsupported type
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbFilterExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbFilterExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFilterExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbFunctionExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbFunctionExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbGroupByExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbInExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbInExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbInExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbInExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbInExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbInExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbInExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbInExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbIntersectExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbIntersectExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIntersectExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbIsEmptyExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbIsEmptyExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsEmptyExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbIsNullExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbIsNullExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsNullExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbIsOfExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbIsOfExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbIsOfExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbJoinExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbJoinExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbJoinExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbLambdaExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbLambdaExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLambdaExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbLikeExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbLikeExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLikeExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbLimitExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbLimitExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbLimitExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbNewInstanceExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbNewInstanceExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNewInstanceExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbNotExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbNotExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNotExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbNotExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbNotExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbNotExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbNotExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNotExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbNullExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbNullExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbNullExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbNullExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbOfTypeExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbOfTypeExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbOfTypeExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbOrExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbOrExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbOrExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbOrExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbOrExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbOrExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbOrExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbOrExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbParameterReferenceExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbParameterReferenceExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbParameterReferenceExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbProjectExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbProjectExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbProjectExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbPropertyExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbPropertyExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbPropertyExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbQuantifierExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbQuantifierExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbQuantifierExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbRefExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbRefExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbRefExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbRefKeyExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbRefKeyExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRefKeyExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbRelationshipNavigationExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbRelationshipNavigationExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbRelationshipNavigationExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbScanExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbScanExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbScanExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbScanExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbScanExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbScanExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbScanExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbScanExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbSkipExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbSkipExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSkipExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbSortExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbSortExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbSortExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbSortExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbSortExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbSortExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbSortExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbTreatExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbTreatExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbTreatExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbUnionAllExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbUnionAllExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbUnionAllExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (expression As DbVariableReferenceExpression)" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression -&gt; unit" Usage="basicExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbVariableReferenceExpression that is being visited. </param>
        <summary>
            Visitor pattern method for <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbVariableReferenceExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VisitAggregate">
      <MemberSignature Language="C#" Value="public virtual void VisitAggregate (System.Data.Entity.Core.Common.CommandTrees.DbAggregate aggregate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitAggregate(class System.Data.Entity.Core.Common.CommandTrees.DbAggregate aggregate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitAggregate(System.Data.Entity.Core.Common.CommandTrees.DbAggregate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitAggregate (aggregate As DbAggregate)" />
      <MemberSignature Language="F#" Value="abstract member VisitAggregate : System.Data.Entity.Core.Common.CommandTrees.DbAggregate -&gt; unit&#xA;override this.VisitAggregate : System.Data.Entity.Core.Common.CommandTrees.DbAggregate -&gt; unit" Usage="basicExpressionVisitor.VisitAggregate aggregate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregate" Type="System.Data.Entity.Core.Common.CommandTrees.DbAggregate" />
      </Parameters>
      <Docs>
        <param name="aggregate"> The aggregate to visit. </param>
        <summary>
            Convenience method to visit the specified <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbAggregate" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="aggregate" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VisitAggregateList">
      <MemberSignature Language="C#" Value="public virtual void VisitAggregateList (System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbAggregate&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitAggregateList(class System.Collections.Generic.IList`1&lt;class System.Data.Entity.Core.Common.CommandTrees.DbAggregate&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitAggregateList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbAggregate})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitAggregateList (aggregates As IList(Of DbAggregate))" />
      <MemberSignature Language="F#" Value="abstract member VisitAggregateList : System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbAggregate&gt; -&gt; unit&#xA;override this.VisitAggregateList : System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbAggregate&gt; -&gt; unit" Usage="basicExpressionVisitor.VisitAggregateList aggregates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregates" Type="System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbAggregate&gt;" />
      </Parameters>
      <Docs>
        <param name="aggregates"> The list of aggregates to visit. </param>
        <summary>
            Convenience method to visit each <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbAggregate" /> in the list, if the list is non-null.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="aggregates" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VisitBinaryExpression">
      <MemberSignature Language="C#" Value="protected virtual void VisitBinaryExpression (System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitBinaryExpression(class System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitBinaryExpression(System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitBinaryExpression (expression As DbBinaryExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitBinaryExpression : System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression -&gt; unit&#xA;override this.VisitBinaryExpression : System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression -&gt; unit" Usage="basicExpressionVisitor.VisitBinaryExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbBinaryExpression to visit. </param>
        <summary>
            Convenience method to visit the specified <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbBinaryExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VisitExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitExpression (System.Data.Entity.Core.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitExpression(class System.Data.Entity.Core.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitExpression(System.Data.Entity.Core.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitExpression (expression As DbExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitExpression : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; unit&#xA;override this.VisitExpression : System.Data.Entity.Core.Common.CommandTrees.DbExpression -&gt; unit" Usage="basicExpressionVisitor.VisitExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The expression to visit. </param>
        <summary>
            Convenience method to visit the specified <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" />, if non-null.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionBindingPost">
      <MemberSignature Language="C#" Value="protected virtual void VisitExpressionBindingPost (System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitExpressionBindingPost(class System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitExpressionBindingPost(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitExpressionBindingPost (binding As DbExpressionBinding)" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionBindingPost : System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding -&gt; unit&#xA;override this.VisitExpressionBindingPost : System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding -&gt; unit" Usage="basicExpressionVisitor.VisitExpressionBindingPost binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding"> The previously visited DbExpressionBinding. </param>
        <summary>
            Convenience method for post-processing after a DbExpressionBinding has been visited.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionBindingPre">
      <MemberSignature Language="C#" Value="protected virtual void VisitExpressionBindingPre (System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitExpressionBindingPre(class System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitExpressionBindingPre(System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitExpressionBindingPre (binding As DbExpressionBinding)" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionBindingPre : System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding -&gt; unit&#xA;override this.VisitExpressionBindingPre : System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding -&gt; unit" Usage="basicExpressionVisitor.VisitExpressionBindingPre binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding"> The DbExpressionBinding to visit. </param>
        <summary>
            Convenience method to visit the specified <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpressionBinding" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionList">
      <MemberSignature Language="C#" Value="public virtual void VisitExpressionList (System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbExpression&gt; expressionList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitExpressionList(class System.Collections.Generic.IList`1&lt;class System.Data.Entity.Core.Common.CommandTrees.DbExpression&gt; expressionList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitExpressionList (expressionList As IList(Of DbExpression))" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionList : System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbExpression&gt; -&gt; unit&#xA;override this.VisitExpressionList : System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbExpression&gt; -&gt; unit" Usage="basicExpressionVisitor.VisitExpressionList expressionList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionList" Type="System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="expressionList"> The list of expressions to visit. </param>
        <summary>
            Convenience method to visit each <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbExpression" /> in the given list, if the list is non-null.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expressionList" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VisitGroupExpressionBindingMid">
      <MemberSignature Language="C#" Value="protected virtual void VisitGroupExpressionBindingMid (System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitGroupExpressionBindingMid(class System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitGroupExpressionBindingMid(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitGroupExpressionBindingMid (binding As DbGroupExpressionBinding)" />
      <MemberSignature Language="F#" Value="abstract member VisitGroupExpressionBindingMid : System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding -&gt; unit&#xA;override this.VisitGroupExpressionBindingMid : System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding -&gt; unit" Usage="basicExpressionVisitor.VisitGroupExpressionBindingMid binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding"> The DbGroupExpressionBinding of the DbGroupByExpression </param>
        <summary>
            Convenience method indicating that the grouping keys of a <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupByExpression" /> have been visited and the aggregates are now about to be visited.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitGroupExpressionBindingPost">
      <MemberSignature Language="C#" Value="protected virtual void VisitGroupExpressionBindingPost (System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitGroupExpressionBindingPost(class System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitGroupExpressionBindingPost(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitGroupExpressionBindingPost (binding As DbGroupExpressionBinding)" />
      <MemberSignature Language="F#" Value="abstract member VisitGroupExpressionBindingPost : System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding -&gt; unit&#xA;override this.VisitGroupExpressionBindingPost : System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding -&gt; unit" Usage="basicExpressionVisitor.VisitGroupExpressionBindingPost binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding"> The previously visited DbGroupExpressionBinding. </param>
        <summary>
            Convenience method for post-processing after a DbGroupExpressionBinding has been visited.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitGroupExpressionBindingPre">
      <MemberSignature Language="C#" Value="protected virtual void VisitGroupExpressionBindingPre (System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitGroupExpressionBindingPre(class System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitGroupExpressionBindingPre(System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitGroupExpressionBindingPre (binding As DbGroupExpressionBinding)" />
      <MemberSignature Language="F#" Value="abstract member VisitGroupExpressionBindingPre : System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding -&gt; unit&#xA;override this.VisitGroupExpressionBindingPre : System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding -&gt; unit" Usage="basicExpressionVisitor.VisitGroupExpressionBindingPre binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding"> The DbGroupExpressionBinding to visit. </param>
        <summary>
            Convenience method to visit the specified <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbGroupExpressionBinding" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="binding" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VisitLambdaPost">
      <MemberSignature Language="C#" Value="protected virtual void VisitLambdaPost (System.Data.Entity.Core.Common.CommandTrees.DbLambda lambda);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitLambdaPost(class System.Data.Entity.Core.Common.CommandTrees.DbLambda lambda) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitLambdaPost(System.Data.Entity.Core.Common.CommandTrees.DbLambda)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitLambdaPost (lambda As DbLambda)" />
      <MemberSignature Language="F#" Value="abstract member VisitLambdaPost : System.Data.Entity.Core.Common.CommandTrees.DbLambda -&gt; unit&#xA;override this.VisitLambdaPost : System.Data.Entity.Core.Common.CommandTrees.DbLambda -&gt; unit" Usage="basicExpressionVisitor.VisitLambdaPost lambda" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Entity.Core.Common.CommandTrees.DbLambda" />
      </Parameters>
      <Docs>
        <param name="lambda"> The previously visited DbLambda. </param>
        <summary>
            Convenience method for post-processing after a DbLambda has been visited.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLambdaPre">
      <MemberSignature Language="C#" Value="protected virtual void VisitLambdaPre (System.Data.Entity.Core.Common.CommandTrees.DbLambda lambda);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitLambdaPre(class System.Data.Entity.Core.Common.CommandTrees.DbLambda lambda) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitLambdaPre(System.Data.Entity.Core.Common.CommandTrees.DbLambda)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitLambdaPre (lambda As DbLambda)" />
      <MemberSignature Language="F#" Value="abstract member VisitLambdaPre : System.Data.Entity.Core.Common.CommandTrees.DbLambda -&gt; unit&#xA;override this.VisitLambdaPre : System.Data.Entity.Core.Common.CommandTrees.DbLambda -&gt; unit" Usage="basicExpressionVisitor.VisitLambdaPre lambda" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Entity.Core.Common.CommandTrees.DbLambda" />
      </Parameters>
      <Docs>
        <param name="lambda"> The DbLambda that is about to be visited </param>
        <summary>
            Convenience method indicating that the body of a Lambda <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbFunctionExpression" /> is now about to be visited.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="lambda" />
            is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="VisitUnaryExpression">
      <MemberSignature Language="C#" Value="protected virtual void VisitUnaryExpression (System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitUnaryExpression(class System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor.VisitUnaryExpression(System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitUnaryExpression (expression As DbUnaryExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitUnaryExpression : System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression -&gt; unit&#xA;override this.VisitUnaryExpression : System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression -&gt; unit" Usage="basicExpressionVisitor.VisitUnaryExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression" />
      </Parameters>
      <Docs>
        <param name="expression"> The DbUnaryExpression to visit. </param>
        <summary>
            Convenience method to visit the specified <see cref="T:System.Data.Entity.Core.Common.CommandTrees.DbUnaryExpression" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" />
            is null
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>