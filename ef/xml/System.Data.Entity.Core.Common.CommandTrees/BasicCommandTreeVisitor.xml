<Type Name="BasicCommandTreeVisitor" FullName="System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor">
  <TypeSignature Language="C#" Value="public abstract class BasicCommandTreeVisitor : System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasicCommandTreeVisitor extends System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasicCommandTreeVisitor&#xA;Inherits BasicExpressionVisitor" />
  <TypeSignature Language="F#" Value="type BasicCommandTreeVisitor = class&#xA;    inherit BasicExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Common.CommandTrees.BasicExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An abstract base type for types that implement the IExpressionVisitor interface to derive from.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicCommandTreeVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCommandTree">
      <MemberSignature Language="C#" Value="public virtual void VisitCommandTree (System.Data.Entity.Core.Common.CommandTrees.DbCommandTree commandTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitCommandTree(class System.Data.Entity.Core.Common.CommandTrees.DbCommandTree commandTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitCommandTree (commandTree As DbCommandTree)" />
      <MemberSignature Language="F#" Value="abstract member VisitCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbCommandTree -&gt; unit&#xA;override this.VisitCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbCommandTree -&gt; unit" Usage="basicCommandTreeVisitor.VisitCommandTree commandTree" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandTree" Type="System.Data.Entity.Core.Common.CommandTrees.DbCommandTree" />
      </Parameters>
      <Docs>
        <param name="commandTree">The command tree.</param>
        <summary>Implements the visitor pattern for the command tree.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDeleteCommandTree">
      <MemberSignature Language="C#" Value="protected virtual void VisitDeleteCommandTree (System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree deleteTree);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitDeleteCommandTree(class System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree deleteTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitDeleteCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitDeleteCommandTree (deleteTree As DbDeleteCommandTree)" />
      <MemberSignature Language="F#" Value="abstract member VisitDeleteCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree -&gt; unit&#xA;override this.VisitDeleteCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree -&gt; unit" Usage="basicCommandTreeVisitor.VisitDeleteCommandTree deleteTree" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deleteTree" Type="System.Data.Entity.Core.Common.CommandTrees.DbDeleteCommandTree" />
      </Parameters>
      <Docs>
        <param name="deleteTree">The delete command tree.</param>
        <summary>Implements the visitor pattern for the delete command tree.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFunctionCommandTree">
      <MemberSignature Language="C#" Value="protected virtual void VisitFunctionCommandTree (System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree functionTree);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitFunctionCommandTree(class System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree functionTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitFunctionCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitFunctionCommandTree (functionTree As DbFunctionCommandTree)" />
      <MemberSignature Language="F#" Value="abstract member VisitFunctionCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree -&gt; unit&#xA;override this.VisitFunctionCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree -&gt; unit" Usage="basicCommandTreeVisitor.VisitFunctionCommandTree functionTree" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionTree" Type="System.Data.Entity.Core.Common.CommandTrees.DbFunctionCommandTree" />
      </Parameters>
      <Docs>
        <param name="functionTree">The function command tree.</param>
        <summary>Implements the visitor pattern for the function command tree.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInsertCommandTree">
      <MemberSignature Language="C#" Value="protected virtual void VisitInsertCommandTree (System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree insertTree);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitInsertCommandTree(class System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree insertTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitInsertCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitInsertCommandTree (insertTree As DbInsertCommandTree)" />
      <MemberSignature Language="F#" Value="abstract member VisitInsertCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree -&gt; unit&#xA;override this.VisitInsertCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree -&gt; unit" Usage="basicCommandTreeVisitor.VisitInsertCommandTree insertTree" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertTree" Type="System.Data.Entity.Core.Common.CommandTrees.DbInsertCommandTree" />
      </Parameters>
      <Docs>
        <param name="insertTree">The insert command tree.</param>
        <summary>Implements the visitor pattern for the insert command tree.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitModificationClause">
      <MemberSignature Language="C#" Value="protected virtual void VisitModificationClause (System.Data.Entity.Core.Common.CommandTrees.DbModificationClause modificationClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitModificationClause(class System.Data.Entity.Core.Common.CommandTrees.DbModificationClause modificationClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitModificationClause(System.Data.Entity.Core.Common.CommandTrees.DbModificationClause)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitModificationClause (modificationClause As DbModificationClause)" />
      <MemberSignature Language="F#" Value="abstract member VisitModificationClause : System.Data.Entity.Core.Common.CommandTrees.DbModificationClause -&gt; unit&#xA;override this.VisitModificationClause : System.Data.Entity.Core.Common.CommandTrees.DbModificationClause -&gt; unit" Usage="basicCommandTreeVisitor.VisitModificationClause modificationClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationClause" Type="System.Data.Entity.Core.Common.CommandTrees.DbModificationClause" />
      </Parameters>
      <Docs>
        <param name="modificationClause">The modification clause.</param>
        <summary>Implements the visitor pattern for the modification clause.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitModificationClauses">
      <MemberSignature Language="C#" Value="protected virtual void VisitModificationClauses (System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt; modificationClauses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitModificationClauses(class System.Collections.Generic.IList`1&lt;class System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt; modificationClauses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitModificationClauses(System.Collections.Generic.IList{System.Data.Entity.Core.Common.CommandTrees.DbModificationClause})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitModificationClauses (modificationClauses As IList(Of DbModificationClause))" />
      <MemberSignature Language="F#" Value="abstract member VisitModificationClauses : System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt; -&gt; unit&#xA;override this.VisitModificationClauses : System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt; -&gt; unit" Usage="basicCommandTreeVisitor.VisitModificationClauses modificationClauses" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modificationClauses" Type="System.Collections.Generic.IList&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationClause&gt;" />
      </Parameters>
      <Docs>
        <param name="modificationClauses">The modification clauses.</param>
        <summary>Implements the visitor pattern for the collection of modification clauses.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitQueryCommandTree">
      <MemberSignature Language="C#" Value="protected virtual void VisitQueryCommandTree (System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree queryTree);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitQueryCommandTree(class System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree queryTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitQueryCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitQueryCommandTree (queryTree As DbQueryCommandTree)" />
      <MemberSignature Language="F#" Value="abstract member VisitQueryCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree -&gt; unit&#xA;override this.VisitQueryCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree -&gt; unit" Usage="basicCommandTreeVisitor.VisitQueryCommandTree queryTree" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryTree" Type="System.Data.Entity.Core.Common.CommandTrees.DbQueryCommandTree" />
      </Parameters>
      <Docs>
        <param name="queryTree">The query command tree.</param>
        <summary>Implements the visitor pattern for the query command tree.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSetClause">
      <MemberSignature Language="C#" Value="protected virtual void VisitSetClause (System.Data.Entity.Core.Common.CommandTrees.DbSetClause setClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitSetClause(class System.Data.Entity.Core.Common.CommandTrees.DbSetClause setClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitSetClause(System.Data.Entity.Core.Common.CommandTrees.DbSetClause)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitSetClause (setClause As DbSetClause)" />
      <MemberSignature Language="F#" Value="abstract member VisitSetClause : System.Data.Entity.Core.Common.CommandTrees.DbSetClause -&gt; unit&#xA;override this.VisitSetClause : System.Data.Entity.Core.Common.CommandTrees.DbSetClause -&gt; unit" Usage="basicCommandTreeVisitor.VisitSetClause setClause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setClause" Type="System.Data.Entity.Core.Common.CommandTrees.DbSetClause" />
      </Parameters>
      <Docs>
        <param name="setClause">The set clause.</param>
        <summary>Implements the visitor pattern for the set clause.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUpdateCommandTree">
      <MemberSignature Language="C#" Value="protected virtual void VisitUpdateCommandTree (System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree updateTree);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VisitUpdateCommandTree(class System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree updateTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Common.CommandTrees.BasicCommandTreeVisitor.VisitUpdateCommandTree(System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VisitUpdateCommandTree (updateTree As DbUpdateCommandTree)" />
      <MemberSignature Language="F#" Value="abstract member VisitUpdateCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree -&gt; unit&#xA;override this.VisitUpdateCommandTree : System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree -&gt; unit" Usage="basicCommandTreeVisitor.VisitUpdateCommandTree updateTree" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateTree" Type="System.Data.Entity.Core.Common.CommandTrees.DbUpdateCommandTree" />
      </Parameters>
      <Docs>
        <param name="updateTree">The update command tree.</param>
        <summary>Implements the visitor pattern for the update command tree.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>