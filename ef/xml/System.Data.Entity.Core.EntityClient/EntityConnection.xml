<Type Name="EntityConnection" FullName="System.Data.Entity.Core.EntityClient.EntityConnection">
  <TypeSignature Language="C#" Value="public class EntityConnection : System.Data.Common.DbConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityConnection extends System.Data.Common.DbConnection" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityConnection&#xA;Inherits DbConnection" />
  <TypeSignature Language="F#" Value="type EntityConnection = class&#xA;    inherit DbConnection" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class representing a connection for the conceptual layer. An entity connection may only
            be initialized once (by opening the connection). It is subsequently not possible to change
            the connection string, attach a new store connection, or change the store connection string.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Reliability", "CA2000:DisposeObjectsBeforeLosingScope", Justification="Object is in fact passed to property of the class and gets Disposed properly in the Dispose() method.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.EntityClient.EntityConnection : string -&gt; System.Data.Entity.Core.EntityClient.EntityConnection" Usage="new System.Data.Entity.Core.EntityClient.EntityConnection connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Reliability", "CA2000:DisposeObjectsBeforeLosingScope", Justification="Object is in fact passed to property of the class and gets Disposed properly in the Dispose() method.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">The provider-specific connection string.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> class, based on the connection string.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">An invalid connection string keyword has been provided, or a required connection string keyword has not been provided.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace workspace, class System.Data.Common.DbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workspace As MetadataWorkspace, connection As DbConnection)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.EntityClient.EntityConnection : System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace * System.Data.Common.DbConnection -&gt; System.Data.Entity.Core.EntityClient.EntityConnection" Usage="new System.Data.Entity.Core.EntityClient.EntityConnection (workspace, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Reliability", "CA2000:DisposeObjectsBeforeLosingScope", Justification="Object is in fact passed to property of the class and gets Disposed properly in the Dispose() method.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="workspace" Type="System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" />
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="workspace">
            A <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> to be associated with this
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />.
            </param>
        <param name="connection">
            The underlying data source connection for this <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> object.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> class with a specified
            <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> and 
            <see cref="T:System.Data.Common.DbConnection" />.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">The  workspace  or  connection  parameter is null.</exception>
        <exception cref="T:System.ArgumentException">The conceptual model is missing from the workspace.-or-The mapping file is missing from the workspace.-or-The storage model is missing from the workspace.-or-The  connection  is not in a closed state.</exception>
        <exception cref="T:System.Data.Entity.Core.ProviderIncompatibleException">The  connection  is not from an ADO.NET Entity Framework-compatible provider.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnection (System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace workspace, System.Data.Common.DbConnection connection, bool entityConnectionOwnsStoreConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace workspace, class System.Data.Common.DbConnection connection, bool entityConnectionOwnsStoreConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workspace As MetadataWorkspace, connection As DbConnection, entityConnectionOwnsStoreConnection As Boolean)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.EntityClient.EntityConnection : System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace * System.Data.Common.DbConnection * bool -&gt; System.Data.Entity.Core.EntityClient.EntityConnection" Usage="new System.Data.Entity.Core.EntityClient.EntityConnection (workspace, connection, entityConnectionOwnsStoreConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Reliability", "CA2000:DisposeObjectsBeforeLosingScope", Justification="Object is in fact passed to property of the class and gets Disposed properly in the Dispose() method.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="workspace" Type="System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" />
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="entityConnectionOwnsStoreConnection" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="workspace"> Workspace containing metadata information. </param>
        <param name="connection"> Store connection. </param>
        <param name="entityConnectionOwnsStoreConnection"> If set to true the store connection is disposed when the entity connection is disposed, otherwise the caller must dispose the store connection. </param>
        <summary>
            Constructs the EntityConnection from Metadata loaded in memory
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="F#" Value="override this.BeginDbTransaction : System.Data.IsolationLevel -&gt; System.Data.Common.DbTransaction" Usage="entityConnection.BeginDbTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel"> The isolation level of the transaction </param>
        <summary>
            Begins a database transaction
            </summary>
        <returns> An object representing the new transaction </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.EntityClient.EntityTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.Core.EntityClient.EntityTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginTransaction () As EntityTransaction" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : unit -&gt; System.Data.Entity.Core.EntityClient.EntityTransaction" Usage="entityConnection.BeginTransaction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begins a transaction by using the underlying provider. </summary>
        <returns>
            A new <see cref="T:System.Data.Entity.Core.EntityClient.EntityTransaction" />. The returned
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityTransaction" />
            instance can later be associated with the
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />
            to execute the command under that transaction.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            The underlying provider is not known.-or-The call to
            <see cref="M:System.Data.Entity.Core.EntityClient.EntityConnection.BeginTransaction" />
            was made on an
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
            that already has a current transaction.-or-The state of the
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
            is not
            <see cref="F:System.Data.ConnectionState.Open" />
            .
            </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.EntityClient.EntityTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.Core.EntityClient.EntityTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="F#" Value="override this.BeginTransaction : System.Data.IsolationLevel -&gt; System.Data.Entity.Core.EntityClient.EntityTransaction" Usage="entityConnection.BeginTransaction isolationLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">The isolation level of the transaction.</param>
        <summary>Begins a transaction with the specified isolation level by using the underlying provider. </summary>
        <returns>
            A new <see cref="T:System.Data.Entity.Core.EntityClient.EntityTransaction" />. The returned
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityTransaction" />
            instance can later be associated with the
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />
            to execute the command under that transaction.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            The underlying provider is not known.-or-The call to
            <see cref="M:System.Data.Entity.Core.EntityClient.EntityConnection.BeginTransaction" />
            was made on an
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
            that already has a current transaction.-or-The state of the
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
            is not
            <see cref="F:System.Data.ConnectionState.Open" />
            .
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string databaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string databaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (databaseName As String)" />
      <MemberSignature Language="F#" Value="override this.ChangeDatabase : string -&gt; unit" Usage="entityConnection.ChangeDatabase databaseName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databaseName">Not supported. </param>
        <summary>Not supported.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">When the method is called. </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="entityConnection.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the connection to the database.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">An error occurred when closing the connection.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityConnection.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1065:DoNotRaiseExceptionsInUnexpectedLocations")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> connection string.
            </summary>
        <value>The connection string required to establish the initial connection to a data source. The default value is an empty string. On a closed connection, the currently set value is returned. If no value has been set, an empty string is returned.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            An attempt was made to set the <see cref="P:System.Data.Entity.Core.EntityClient.EntityConnection.ConnectionString" /> property after the
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
            ’s <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> was initialized. The
            <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" />
            is initialized either when the <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> instance is constructed through the overload that takes a
            <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" />
            as a parameter, or when the
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
            instance has been opened.
            </exception>
        <exception cref="T:System.ArgumentException">An invalid connection string keyword has been provided or a required connection string keyword has not been provided.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public override int ConnectionTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ConnectionTimeout As Integer" />
      <MemberSignature Language="F#" Value="member this.ConnectionTimeout : int" Usage="System.Data.Entity.Core.EntityClient.EntityConnection.ConnectionTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1065:DoNotRaiseExceptionsInUnexpectedLocations")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of seconds to wait when attempting to establish a connection before ending the attempt and generating an error.</summary>
        <value>The time (in seconds) to wait for a connection to open. The default value is the underlying data provider's default time-out. </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">The value set is less than 0. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.EntityClient.EntityCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.Core.EntityClient.EntityCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCommand () As EntityCommand" />
      <MemberSignature Language="F#" Value="override this.CreateCommand : unit -&gt; System.Data.Entity.Core.EntityClient.EntityCommand" Usage="entityConnection.CreateCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.EntityClient.EntityCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of an <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />, with the
            <see cref="P:System.Data.Entity.Core.EntityClient.EntityCommand.Connection" />
            set to this
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
            .
            </summary>
        <returns>
            An <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> object.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The name of the underlying data provider is not known.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="F#" Value="override this.CreateDbCommand : unit -&gt; System.Data.Common.DbCommand" Usage="entityConnection.CreateDbCommand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create a new command object that uses this connection object
            </summary>
        <returns>The command object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTransaction">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.EntityClient.EntityTransaction CurrentTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.EntityClient.EntityTransaction CurrentTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityConnection.CurrentTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentTransaction As EntityTransaction" />
      <MemberSignature Language="F#" Value="member this.CurrentTransaction : System.Data.Entity.Core.EntityClient.EntityTransaction" Usage="System.Data.Entity.Core.EntityClient.EntityConnection.CurrentTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current transaction that this connection is enlisted in. May be null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="F#" Value="member this.Database : string" Usage="System.Data.Entity.Core.EntityClient.EntityConnection.Database" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the current database, or the database that will be used after a connection is opened.</summary>
        <value>The value of the Database property of the underlying data provider.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The underlying data provider is not known. </exception>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="F#" Value="member this.DataSource : string" Usage="System.Data.Entity.Core.EntityClient.EntityConnection.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1065:DoNotRaiseExceptionsInUnexpectedLocations")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name or network address of the data source to connect to.</summary>
        <value>The name of the data source. The default value is an empty string.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The underlying data provider is not known. </exception>
      </Docs>
    </Member>
    <Member MemberName="DbProviderFactory">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbProviderFactory DbProviderFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbProviderFactory DbProviderFactory" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityConnection.DbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbProviderFactory As DbProviderFactory" />
      <MemberSignature Language="F#" Value="member this.DbProviderFactory : System.Data.Common.DbProviderFactory" Usage="System.Data.Entity.Core.EntityClient.EntityConnection.DbProviderFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the provider factory associated with EntityConnection
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="entityConnection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2213:DisposableFieldsShouldBeDisposed", MessageId="_currentTransaction")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"> true to release both managed and unmanaged resources; false to release only unmanaged resources </param>
        <summary>
            Cleans up this connection object
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="F#" Value="override this.EnlistTransaction : System.Transactions.Transaction -&gt; unit" Usage="entityConnection.EnlistTransaction transaction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">The transaction object to enlist into.</param>
        <summary>
            Enlists this <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> in the specified transaction.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            The state of the <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> is not
            <see cref="F:System.Data.ConnectionState.Open" />
            .
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataWorkspace">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace GetMetadataWorkspace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.GetMetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMetadataWorkspace () As MetadataWorkspace" />
      <MemberSignature Language="F#" Value="abstract member GetMetadataWorkspace : unit -&gt; System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace&#xA;override this.GetMetadataWorkspace : unit -&gt; System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" Usage="entityConnection.GetMetadataWorkspace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> associated with this
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
            .
            </summary>
        <returns>
            The <see cref="T:System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace" /> associated with this
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
            .
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Data.Entity.Core.MetadataException">The inline connection string contains an invalid Metadata keyword value.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="F#" Value="override this.Open : unit -&gt; unit" Usage="entityConnection.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Establishes a connection to the data source by calling the underlying data provider's Open method.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">An error occurs when you open the connection, or the name of the underlying data provider is not known.</exception>
        <exception cref="T:System.Data.Entity.Core.MetadataException">The inline connection string contains an invalid Metadata keyword value.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OpenAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OpenAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityConnection.OpenAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.OpenAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="entityConnection.OpenAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <summary>
            Asynchronously establishes a connection to the data store by calling the Open method on the underlying data provider
            </summary>
        <returns> A task that represents the asynchronous operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="F#" Value="member this.ServerVersion : string" Usage="System.Data.Entity.Core.EntityClient.EntityConnection.ServerVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1065:DoNotRaiseExceptionsInUnexpectedLocations")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a string that contains the version of the data source to which the client is connected.</summary>
        <value>The version of the data source that is contained in the provider connection string.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.ConnectionState" Usage="System.Data.Entity.Core.EntityClient.EntityConnection.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1065:DoNotRaiseExceptionsInUnexpectedLocations")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the state of the EntityConnection, which is set up to track the state of the underlying
            database connection that is wrapped by this EntityConnection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreConnection">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.DbConnection StoreConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection StoreConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityConnection.StoreConnection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StoreConnection As DbConnection" />
      <MemberSignature Language="F#" Value="member this.StoreConnection : System.Data.Common.DbConnection" Usage="System.Data.Entity.Core.EntityClient.EntityConnection.StoreConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides access to the underlying data source connection that is used by the
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" />
            object.
            </summary>
        <value>
            The <see cref="T:System.Data.Common.DbConnection" /> for the data source connection.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>