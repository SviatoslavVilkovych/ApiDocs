<Type Name="EntityCommand" FullName="System.Data.Entity.Core.EntityClient.EntityCommand">
  <TypeSignature Language="C#" Value="public class EntityCommand : System.Data.Common.DbCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityCommand extends System.Data.Common.DbCommand" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.EntityClient.EntityCommand" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityCommand&#xA;Inherits DbCommand" />
  <TypeSignature Language="F#" Value="type EntityCommand = class&#xA;    inherit DbCommand" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class representing a command for the conceptual layer
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> class using the specified values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityCommand (string statement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string statement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (statement As String)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.EntityClient.EntityCommand : string -&gt; System.Data.Entity.Core.EntityClient.EntityCommand" Usage="new System.Data.Entity.Core.EntityClient.EntityCommand statement" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="statement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="statement">The text of the command.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> class with the specified statement.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityCommand (string statement, System.Data.Entity.Core.EntityClient.EntityConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string statement, class System.Data.Entity.Core.EntityClient.EntityConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.#ctor(System.String,System.Data.Entity.Core.EntityClient.EntityConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (statement As String, connection As EntityConnection)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.EntityClient.EntityCommand : string * System.Data.Entity.Core.EntityClient.EntityConnection -&gt; System.Data.Entity.Core.EntityClient.EntityCommand" Usage="new System.Data.Entity.Core.EntityClient.EntityCommand (statement, connection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="statement" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Entity.Core.EntityClient.EntityConnection" />
      </Parameters>
      <Docs>
        <param name="statement">The text of the command.</param>
        <param name="connection">A connection to the data source.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> class with the specified statement and connection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityCommand (string statement, System.Data.Entity.Core.EntityClient.EntityConnection connection, System.Data.Entity.Core.EntityClient.EntityTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string statement, class System.Data.Entity.Core.EntityClient.EntityConnection connection, class System.Data.Entity.Core.EntityClient.EntityTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.#ctor(System.String,System.Data.Entity.Core.EntityClient.EntityConnection,System.Data.Entity.Core.EntityClient.EntityTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (statement As String, connection As EntityConnection, transaction As EntityTransaction)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.EntityClient.EntityCommand : string * System.Data.Entity.Core.EntityClient.EntityConnection * System.Data.Entity.Core.EntityClient.EntityTransaction -&gt; System.Data.Entity.Core.EntityClient.EntityCommand" Usage="new System.Data.Entity.Core.EntityClient.EntityCommand (statement, connection, transaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="statement" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Entity.Core.EntityClient.EntityConnection" />
        <Parameter Name="transaction" Type="System.Data.Entity.Core.EntityClient.EntityTransaction" />
      </Parameters>
      <Docs>
        <param name="statement">The text of the command.</param>
        <param name="connection">A connection to the data source.</param>
        <param name="transaction">The transaction in which the command executes.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" /> class with the specified statement, connection and transaction.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityCommand (string statement, System.Data.Entity.Core.EntityClient.EntityConnection connection, System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string statement, class System.Data.Entity.Core.EntityClient.EntityConnection connection, class System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.#ctor(System.String,System.Data.Entity.Core.EntityClient.EntityConnection,System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (statement As String, connection As EntityConnection, resolver As IDbDependencyResolver)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.EntityClient.EntityCommand : string * System.Data.Entity.Core.EntityClient.EntityConnection * System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver -&gt; System.Data.Entity.Core.EntityClient.EntityCommand" Usage="new System.Data.Entity.Core.EntityClient.EntityCommand (statement, connection, resolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="statement" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Entity.Core.EntityClient.EntityConnection" />
        <Parameter Name="resolver" Type="System.Data.Entity.Infrastructure.DependencyResolution.IDbDependencyResolver" />
      </Parameters>
      <Docs>
        <param name="statement"> The eSQL command text to execute </param>
        <param name="connection"> The connection object </param>
        <param name="resolver"> Resolver used to resolve DbProviderServices </param>
        <summary>
            Constructs the EntityCommand object with the given eSQL statement and the connection object to use
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="F#" Value="override this.Cancel : unit -&gt; unit" Usage="entityCommand.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Cancels the execution of an <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an Entity SQL statement that specifies a command or stored procedure to execute.</summary>
        <value>The Entity SQL statement that specifies a command or stored procedure to execute.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the amount of time to wait before timing out.</summary>
        <value>The time in seconds to wait for the command to execute.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTree">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.Common.CommandTrees.DbCommandTree CommandTree { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Common.CommandTrees.DbCommandTree CommandTree" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandTree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandTree As DbCommandTree" />
      <MemberSignature Language="F#" Value="member this.CommandTree : System.Data.Entity.Core.Common.CommandTrees.DbCommandTree with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.CommandTree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.CommandTrees.DbCommandTree</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the command tree to execute; only one of the command tree or the command text can be set, not both.</summary>
        <value>The command tree to execute.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="F#" Value="member this.CommandType : System.Data.CommandType with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.CommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that indicates how the
            <see cref="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandText" />
            property is to be interpreted.
            </summary>
        <value>
            One of the <see cref="T:System.Data.CommandType" /> enumeration values.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.EntityClient.EntityConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.EntityClient.EntityConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Connection As EntityConnection" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Entity.Core.EntityClient.EntityConnection with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.EntityClient.EntityConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:System.Data.Entity.Core.EntityClient.EntityConnection" /> used by the
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityCommand" />
            .
            </summary>
        <value>The connection used by the entity command.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="F#" Value="override this.CreateDbParameter : unit -&gt; System.Data.Common.DbParameter" Usage="entityCommand.CreateDbParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Create and return a new parameter object representing a parameter in the eSQL statement
            </summary>
        <returns>The parameter object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.EntityClient.EntityParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.Core.EntityClient.EntityParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParameter () As EntityParameter" />
      <MemberSignature Language="F#" Value="override this.CreateParameter : unit -&gt; System.Data.Entity.Core.EntityClient.EntityParameter" Usage="entityCommand.CreateParameter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1822:MarkMembersAsStatic")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.EntityClient.EntityParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of an <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> object.
            </summary>
        <returns>
            A new instance of an <see cref="T:System.Data.Entity.Core.EntityClient.EntityParameter" /> object.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="F#" Value="member this.DbConnection : System.Data.Common.DbConnection with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.DbConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The connection object used for executing the command
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="F#" Value="member this.DbParameterCollection : System.Data.Common.DbParameterCollection" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.DbParameterCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The collection of parameters for this command
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="F#" Value="member this.DbTransaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.DbTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The transaction that this command executes in
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="F#" Value="member this.DesignTimeVisible : bool with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.DesignTimeVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the command object should be visible in a Windows Form Designer control.</summary>
        <value>true if the command object should be visible in a Windows Form Designer control; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePlanCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnablePlanCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePlanCaching" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.EnablePlanCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnablePlanCaching As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnablePlanCaching : bool with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.EnablePlanCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the query plan caching is enabled.</summary>
        <value>true if the query plan caching is enabled; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReader : System.Data.CommandBehavior -&gt; System.Data.Common.DbDataReader" Usage="entityCommand.ExecuteDbDataReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"> The behavior to use when executing the command </param>
        <summary>
            Executes the command and returns a data reader for reading the results
            </summary>
        <returns> A DbDataReader object </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReaderAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Common.DbDataReader&gt; ExecuteDbDataReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ExecuteDbDataReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;" Usage="entityCommand.ExecuteDbDataReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Common.DbDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="behavior"> The behavior to use when executing the command </param>
        <param name="cancellationToken"> The token to monitor for cancellation requests </param>
        <summary>
            Asynchronously executes the command and returns a data reader for reading the results
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            The task result contains a DbDataReader object.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQuery : unit -&gt; int" Usage="entityCommand.ExecuteNonQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executes the current command.</summary>
        <returns>The number of rows affected.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQueryAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ExecuteNonQueryAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ExecuteNonQueryAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="entityCommand.ExecuteNonQueryAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <summary>
            Asynchronously executes the command and discard any results returned from the command
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            The task result contains the number of rows affected.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.EntityClient.EntityDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.Core.EntityClient.EntityDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteReader () As EntityDataReader" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : unit -&gt; System.Data.Entity.Core.EntityClient.EntityDataReader" Usage="entityCommand.ExecuteReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.EntityClient.EntityDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executes the command and returns a data reader.</summary>
        <returns>
            The <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" /> that contains the results.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.EntityClient.EntityDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Entity.Core.EntityClient.EntityDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteReader (behavior As CommandBehavior) As EntityDataReader" />
      <MemberSignature Language="F#" Value="override this.ExecuteReader : System.Data.CommandBehavior -&gt; System.Data.Entity.Core.EntityClient.EntityDataReader" Usage="entityCommand.ExecuteReader behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.EntityClient.EntityDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
            One of the <see cref="T:System.Data.CommandBehavior" /> values.
            </param>
        <summary>
            Compiles the <see cref="P:System.Data.Entity.Core.EntityClient.EntityCommand.CommandText" /> into a command tree and passes it to the underlying store provider for execution, then builds an
            <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" />
            out of the produced result set using the specified
            <see cref="T:System.Data.CommandBehavior" />
            .
            </summary>
        <returns>
            The <see cref="T:System.Data.Entity.Core.EntityClient.EntityDataReader" /> that contains the results.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt; ExecuteReaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Entity.Core.EntityClient.EntityDataReader&gt; ExecuteReaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReaderAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteReaderAsync () As Task(Of EntityDataReader)" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt;" Usage="entityCommand.ExecuteReaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Asynchronously executes the command and returns a data reader for reading the results. May only
            be called on CommandType.CommandText (otherwise, use the standard Execute* methods)
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            The task result contains an EntityDataReader object.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            For stored procedure commands, if called
            for anything but an entity collection result
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Entity.Core.EntityClient.EntityDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReaderAsync(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExecuteReaderAsync (behavior As CommandBehavior) As Task(Of EntityDataReader)" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior -&gt; System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt;" Usage="entityCommand.ExecuteReaderAsync behavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"> The behavior to use when executing the command </param>
        <summary>
            Asynchronously executes the command and returns a data reader for reading the results. May only
            be called on CommandType.CommandText (otherwise, use the standard Execute* methods)
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            The task result contains an EntityDataReader object.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            For stored procedure commands, if called
            for anything but an entity collection result
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt; ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Entity.Core.EntityClient.EntityDataReader&gt; ExecuteReaderAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReaderAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt;" Usage="entityCommand.ExecuteReaderAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <summary>
            Asynchronously executes the command and returns a data reader for reading the results. May only
            be called on CommandType.CommandText (otherwise, use the standard Execute* methods)
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            The task result contains an EntityDataReader object.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            For stored procedure commands, if called
            for anything but an entity collection result
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReaderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt; ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Data.Entity.Core.EntityClient.EntityDataReader&gt; ExecuteReaderAsync(valuetype System.Data.CommandBehavior behavior, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ExecuteReaderAsync : System.Data.CommandBehavior * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt;" Usage="entityCommand.ExecuteReaderAsync (behavior, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Entity.Core.EntityClient.EntityDataReader&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="behavior"> The behavior to use when executing the command </param>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <summary>
            Asynchronously executes the command and returns a data reader for reading the results. May only
            be called on CommandType.CommandText (otherwise, use the standard Execute* methods)
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            The task result contains an EntityDataReader object.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            For stored procedure commands, if called
            for anything but an entity collection result
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="F#" Value="override this.ExecuteScalar : unit -&gt; obj" Usage="entityCommand.ExecuteScalar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executes the command, and returns the first column of the first row in the result set. Additional columns or rows are ignored.</summary>
        <returns>The first column of the first row in the result set, or a null reference (Nothing in Visual Basic) if the result set is empty.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.EntityClient.EntityParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.EntityClient.EntityParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parameters As EntityParameterCollection" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.Entity.Core.EntityClient.EntityParameterCollection" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.EntityClient.EntityParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameters of the Entity SQL statement or stored procedure.</summary>
        <value>The parameters of the Entity SQL statement or stored procedure.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="F#" Value="override this.Prepare : unit -&gt; unit" Usage="entityCommand.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compiles the entity-level command and creates a prepared version of the command.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTraceString">
      <MemberSignature Language="C#" Value="public virtual string ToTraceString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToTraceString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.EntityClient.EntityCommand.ToTraceString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToTraceString () As String" />
      <MemberSignature Language="F#" Value="abstract member ToTraceString : unit -&gt; string&#xA;override this.ToTraceString : unit -&gt; string" Usage="entityCommand.ToTraceString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compiles the entity-level command and returns the store command text.</summary>
        <returns>The store command text.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.EntityClient.EntityTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.EntityClient.EntityTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Transaction As EntityTransaction" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.Entity.Core.EntityClient.EntityTransaction with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.EntityClient.EntityTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the transaction within which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.
            </summary>
        <value>
            The transaction within which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.EntityClient.EntityCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="F#" Value="member this.UpdatedRowSource : System.Data.UpdateRowSource with get, set" Usage="System.Data.Entity.Core.EntityClient.EntityCommand.UpdatedRowSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets how command results are applied to rows being updated.</summary>
        <value>
            One of the <see cref="T:System.Data.UpdateRowSource" /> values.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>