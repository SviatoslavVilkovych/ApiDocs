<Type Name="MigrationSqlGenerator" FullName="System.Data.Entity.Migrations.Sql.MigrationSqlGenerator">
  <TypeSignature Language="C#" Value="public abstract class MigrationSqlGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MigrationSqlGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MigrationSqlGenerator" />
  <TypeSignature Language="F#" Value="type MigrationSqlGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Common base class for providers that convert provider agnostic migration
            operations into database provider specific SQL commands.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MigrationSqlGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildStoreTypeUsage">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Entity.Core.Metadata.Edm.TypeUsage BuildStoreTypeUsage (string storeTypeName, System.Data.Entity.Migrations.Model.PropertyModel propertyModel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Entity.Core.Metadata.Edm.TypeUsage BuildStoreTypeUsage(string storeTypeName, class System.Data.Entity.Migrations.Model.PropertyModel propertyModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.BuildStoreTypeUsage(System.String,System.Data.Entity.Migrations.Model.PropertyModel)" />
      <MemberSignature Language="F#" Value="abstract member BuildStoreTypeUsage : string * System.Data.Entity.Migrations.Model.PropertyModel -&gt; System.Data.Entity.Core.Metadata.Edm.TypeUsage&#xA;override this.BuildStoreTypeUsage : string * System.Data.Entity.Migrations.Model.PropertyModel -&gt; System.Data.Entity.Core.Metadata.Edm.TypeUsage" Usage="migrationSqlGenerator.BuildStoreTypeUsage (storeTypeName, propertyModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeTypeName" Type="System.String" />
        <Parameter Name="propertyModel" Type="System.Data.Entity.Migrations.Model.PropertyModel" />
      </Parameters>
      <Docs>
        <param name="storeTypeName">Name of the store type.</param>
        <param name="propertyModel">The target property.</param>
        <summary>
            Builds the store type usage for the specified <paramref name="storeTypeName" /> using the facets from the specified <paramref name="propertyModel" />.
            </summary>
        <returns>A store-specific TypeUsage</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Migrations.Sql.MigrationStatement&gt; Generate (System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Migrations.Model.MigrationOperation&gt; migrationOperations, string providerManifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Migrations.Sql.MigrationStatement&gt; Generate(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Migrations.Model.MigrationOperation&gt; migrationOperations, string providerManifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Generate (migrationOperations As IEnumerable(Of MigrationOperation), providerManifestToken As String) As IEnumerable(Of MigrationStatement)" />
      <MemberSignature Language="F#" Value="abstract member Generate : seq&lt;System.Data.Entity.Migrations.Model.MigrationOperation&gt; * string -&gt; seq&lt;System.Data.Entity.Migrations.Sql.MigrationStatement&gt;" Usage="migrationSqlGenerator.Generate (migrationOperations, providerManifestToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Migrations.Sql.MigrationStatement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="migrationOperations" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Migrations.Model.MigrationOperation&gt;" />
        <Parameter Name="providerManifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="migrationOperations"> The operations to be converted. </param>
        <param name="providerManifestToken"> Token representing the version of the database being targeted. </param>
        <summary>
            Converts a set of migration operations into database provider specific SQL.
            </summary>
        <returns> A list of SQL statements to be executed to perform the migration operations. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateProcedureBody">
      <MemberSignature Language="C#" Value="public virtual string GenerateProcedureBody (System.Collections.Generic.ICollection&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt; commandTrees, string rowsAffectedParameter, string providerManifestToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateProcedureBody(class System.Collections.Generic.ICollection`1&lt;class System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt; commandTrees, string rowsAffectedParameter, string providerManifestToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateProcedureBody (commandTrees As ICollection(Of DbModificationCommandTree), rowsAffectedParameter As String, providerManifestToken As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateProcedureBody : System.Collections.Generic.ICollection&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt; * string * string -&gt; string&#xA;override this.GenerateProcedureBody : System.Collections.Generic.ICollection&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt; * string * string -&gt; string" Usage="migrationSqlGenerator.GenerateProcedureBody (commandTrees, rowsAffectedParameter, providerManifestToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandTrees" Type="System.Collections.Generic.ICollection&lt;System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree&gt;" />
        <Parameter Name="rowsAffectedParameter" Type="System.String" />
        <Parameter Name="providerManifestToken" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandTrees">The command trees representing the commands for an insert, update or delete operation.</param>
        <param name="rowsAffectedParameter">The rows affected parameter name.</param>
        <param name="providerManifestToken">The provider manifest token.</param>
        <summary>
            Generates the SQL body for a stored procedure.
            </summary>
        <returns>The SQL body for the stored procedure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPermissionDeniedError">
      <MemberSignature Language="C#" Value="public virtual bool IsPermissionDeniedError (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPermissionDeniedError(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.IsPermissionDeniedError(System.Exception)" />
      <MemberSignature Language="F#" Value="abstract member IsPermissionDeniedError : Exception -&gt; bool&#xA;override this.IsPermissionDeniedError : Exception -&gt; bool" Usage="migrationSqlGenerator.IsPermissionDeniedError exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">The database exception.</param>
        <summary>
            Determines if a provider specific exception corresponds to a database-level permission denied error.
            </summary>
        <returns> true if the supplied exception corresponds to a database-level permission denied error; otherwise false. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderManifest">
      <MemberSignature Language="C#" Value="protected System.Data.Entity.Core.Common.DbProviderManifest ProviderManifest { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Common.DbProviderManifest ProviderManifest" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.ProviderManifest" />
      <MemberSignature Language="VB.NET" Value="Protected Property ProviderManifest As DbProviderManifest" />
      <MemberSignature Language="F#" Value="member this.ProviderManifest : System.Data.Entity.Core.Common.DbProviderManifest with get, set" Usage="System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.ProviderManifest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Common.DbProviderManifest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the provider manifest.
            </summary>
        <value>
            The provider manifest.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>