<Type Name="DbEntityValidationResult" FullName="System.Data.Entity.Validation.DbEntityValidationResult">
  <TypeSignature Language="C#" Value="public class DbEntityValidationResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DbEntityValidationResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Validation.DbEntityValidationResult" />
  <TypeSignature Language="VB.NET" Value="Public Class DbEntityValidationResult" />
  <TypeSignature Language="F#" Value="type DbEntityValidationResult = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents validation results for single entity.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DbEntityValidationResult (System.Data.Entity.Infrastructure.DbEntityEntry entry, System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Validation.DbValidationError&gt; validationErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Entity.Infrastructure.DbEntityEntry entry, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Validation.DbValidationError&gt; validationErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Validation.DbEntityValidationResult.#ctor(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IEnumerable{System.Data.Entity.Validation.DbValidationError})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entry As DbEntityEntry, validationErrors As IEnumerable(Of DbValidationError))" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Validation.DbEntityValidationResult : System.Data.Entity.Infrastructure.DbEntityEntry * seq&lt;System.Data.Entity.Validation.DbValidationError&gt; -&gt; System.Data.Entity.Validation.DbEntityValidationResult" Usage="new System.Data.Entity.Validation.DbEntityValidationResult (entry, validationErrors)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entry" Type="System.Data.Entity.Infrastructure.DbEntityEntry" />
        <Parameter Name="validationErrors" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Validation.DbValidationError&gt;" />
      </Parameters>
      <Docs>
        <param name="entry"> Entity entry the results applies to. Never null. </param>
        <param name="validationErrors">
            List of <see cref="T:System.Data.Entity.Validation.DbValidationError" /> instances. Never null. Can be empty meaning the entity is valid.
            </param>
        <summary>
            Creates an instance of <see cref="T:System.Data.Entity.Validation.DbEntityValidationResult" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entry">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbEntityEntry Entry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Infrastructure.DbEntityEntry Entry" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Validation.DbEntityValidationResult.Entry" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entry As DbEntityEntry" />
      <MemberSignature Language="F#" Value="member this.Entry : System.Data.Entity.Infrastructure.DbEntityEntry" Usage="System.Data.Entity.Validation.DbEntityValidationResult.Entry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbEntityEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an instance of <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> the results applies to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Validation.DbEntityValidationResult.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Data.Entity.Validation.DbEntityValidationResult.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an indicator if the entity is valid.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Data.Entity.Validation.DbValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Data.Entity.Validation.DbValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Validation.DbEntityValidationResult.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ICollection(Of DbValidationError)" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.Generic.ICollection&lt;System.Data.Entity.Validation.DbValidationError&gt;" Usage="System.Data.Entity.Validation.DbEntityValidationResult.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Data.Entity.Validation.DbValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets validation errors. Never null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>