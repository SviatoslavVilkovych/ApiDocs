<Type Name="DbEntityEntry&lt;TEntity&gt;" FullName="System.Data.Entity.Infrastructure.DbEntityEntry&lt;TEntity&gt;">
  <TypeSignature Language="C#" Value="public class DbEntityEntry&lt;TEntity&gt; where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbEntityEntry`1&lt;class TEntity&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DbEntityEntry(Of TEntity)" />
  <TypeSignature Language="F#" Value="type DbEntityEntry&lt;'Entity (requires 'Entity : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntity"> The type of the entity. </typeparam>
    <summary>
            Instances of this class provide access to information about and control of entities that
            are being tracked by the <see cref="T:System.Data.Entity.DbContext" />.  Use the Entity or Entities methods of
            the context to obtain objects of this type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Collection">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbCollectionEntry Collection (string navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbCollectionEntry Collection(string navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Collection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Collection (navigationProperty As String) As DbCollectionEntry" />
      <MemberSignature Language="F#" Value="member this.Collection : string -&gt; System.Data.Entity.Infrastructure.DbCollectionEntry" Usage="dbEntityEntry.Collection navigationProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbCollectionEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="navigationProperty"> The name of the navigation property. </param>
        <summary>
            Gets an object that represents the collection navigation property from this
            entity to a collection of related entities.
            </summary>
        <returns> An object representing the navigation property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbCollectionEntry&lt;TEntity,TElement&gt; Collection&lt;TElement&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,System.Collections.Generic.ICollection&lt;TElement&gt;&gt;&gt; navigationProperty) where TElement : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbCollectionEntry`2&lt;!TEntity, !!TElement&gt; Collection&lt;class TElement&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, class System.Collections.Generic.ICollection`1&lt;!!TElement&gt;&gt;&gt; navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Collection``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Collection(Of TElement As Class) (navigationProperty As Expression(Of Func(Of TEntity, ICollection(Of TElement)))) As DbCollectionEntry(Of TEntity, TElement)" />
      <MemberSignature Language="F#" Value="member this.Collection : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, System.Collections.Generic.ICollection&lt;'Element&gt;&gt;&gt; -&gt; System.Data.Entity.Infrastructure.DbCollectionEntry&lt;'Entity, 'Element (requires 'Entity : null and 'Element : null)&gt; (requires 'Element : null)" Usage="dbEntityEntry.Collection navigationProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbCollectionEntry&lt;TEntity,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="navigationProperty" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Collections.Generic.ICollection&lt;TElement&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TElement"> The type of elements in the collection. </typeparam>
        <param name="navigationProperty"> An expression representing the navigation property. </param>
        <summary>
            Gets an object that represents the collection navigation property from this
            entity to a collection of related entities.
            </summary>
        <returns> An object representing the navigation property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbCollectionEntry&lt;TEntity,TElement&gt; Collection&lt;TElement&gt; (string navigationProperty) where TElement : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbCollectionEntry`2&lt;!TEntity, !!TElement&gt; Collection&lt;class TElement&gt;(string navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Collection``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Collection(Of TElement As Class) (navigationProperty As String) As DbCollectionEntry(Of TEntity, TElement)" />
      <MemberSignature Language="F#" Value="member this.Collection : string -&gt; System.Data.Entity.Infrastructure.DbCollectionEntry&lt;'Entity, 'Element (requires 'Entity : null and 'Element : null)&gt; (requires 'Element : null)" Usage="dbEntityEntry.Collection navigationProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbCollectionEntry&lt;TEntity,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="navigationProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TElement"> The type of elements in the collection. </typeparam>
        <param name="navigationProperty"> The name of the navigation property. </param>
        <summary>
            Gets an object that represents the collection navigation property from this
            entity to a collection of related entities.
            </summary>
        <returns> An object representing the navigation property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbComplexPropertyEntry ComplexProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbComplexPropertyEntry ComplexProperty(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ComplexProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComplexProperty (propertyName As String) As DbComplexPropertyEntry" />
      <MemberSignature Language="F#" Value="member this.ComplexProperty : string -&gt; System.Data.Entity.Infrastructure.DbComplexPropertyEntry" Usage="dbEntityEntry.ComplexProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbComplexPropertyEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"> The name of the complex property. </param>
        <summary>
            Gets an object that represents a complex property of this entity.
            </summary>
        <returns> An object representing the complex property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty&lt;TComplexProperty&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbComplexPropertyEntry&lt;TEntity,TComplexProperty&gt; ComplexProperty&lt;TComplexProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,TComplexProperty&gt;&gt; property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2&lt;!TEntity, !!TComplexProperty&gt; ComplexProperty&lt;TComplexProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, !!TComplexProperty&gt;&gt; property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function ComplexProperty(Of TComplexProperty) (property As Expression(Of Func(Of TEntity, TComplexProperty))) As DbComplexPropertyEntry(Of TEntity, TComplexProperty)" />
      <MemberSignature Language="F#" Value="member this.ComplexProperty : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, 'ComplexProperty&gt;&gt; -&gt; System.Data.Entity.Infrastructure.DbComplexPropertyEntry&lt;'Entity, 'ComplexProperty (requires 'Entity : null)&gt;" Usage="dbEntityEntry.ComplexProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames", Justification="Rule predates more fluent naming conventions.", MessageId="0#")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbComplexPropertyEntry&lt;TEntity,TComplexProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TComplexProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,TComplexProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TComplexProperty"> The type of the complex property. </typeparam>
        <param name="property"> An expression representing the complex property. </param>
        <summary>
            Gets an object that represents a complex property of this entity.
            </summary>
        <returns> An object representing the complex property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexProperty&lt;TComplexProperty&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbComplexPropertyEntry&lt;TEntity,TComplexProperty&gt; ComplexProperty&lt;TComplexProperty&gt; (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2&lt;!TEntity, !!TComplexProperty&gt; ComplexProperty&lt;TComplexProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ComplexProperty``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ComplexProperty(Of TComplexProperty) (propertyName As String) As DbComplexPropertyEntry(Of TEntity, TComplexProperty)" />
      <MemberSignature Language="F#" Value="member this.ComplexProperty : string -&gt; System.Data.Entity.Infrastructure.DbComplexPropertyEntry&lt;'Entity, 'ComplexProperty (requires 'Entity : null)&gt;" Usage="dbEntityEntry.ComplexProperty propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbComplexPropertyEntry&lt;TEntity,TComplexProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TComplexProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TComplexProperty"> The type of the complex property. </typeparam>
        <param name="propertyName"> The name of the complex property. </param>
        <summary>
            Gets an object that represents a complex property of this entity.
            </summary>
        <returns> An object representing the complex property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValues">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbPropertyValues CurrentValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Infrastructure.DbPropertyValues CurrentValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.CurrentValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValues As DbPropertyValues" />
      <MemberSignature Language="F#" Value="member this.CurrentValues : System.Data.Entity.Infrastructure.DbPropertyValues" Usage="System.Data.Entity.Infrastructure.DbEntityEntry&lt;'Entity (requires 'Entity : null)&gt;.CurrentValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbPropertyValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current property values for the tracked entity represented by this object.
            </summary>
        <value> The current values. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entity">
      <MemberSignature Language="C#" Value="public TEntity Entity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Entity" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.Entity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entity As TEntity" />
      <MemberSignature Language="F#" Value="member this.Entity : 'Entity" Usage="System.Data.Entity.Infrastructure.DbEntityEntry&lt;'Entity (requires 'Entity : null)&gt;.Entity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the entity.
            </summary>
        <value> The entity. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Data.Entity.Infrastructure.DbEntityEntry&lt;TEntity&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Data.Entity.Infrastructure.DbEntityEntry`1&lt;!TEntity&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Equals(System.Data.Entity.Infrastructure.DbEntityEntry{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As DbEntityEntry(Of TEntity)) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Data.Entity.Infrastructure.DbEntityEntry&lt;'Entity (requires 'Entity : null)&gt; -&gt; bool" Usage="dbEntityEntry.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Data.Entity.Infrastructure.DbEntityEntry&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
            The <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> to compare with this instance.
            </param>
        <summary>
            Determines whether the specified <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> is equal to this instance.
            Two <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> instances are considered equal if they are both entries for
            the same entity on the same <see cref="T:System.Data.Entity.DbContext" />.
            </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> is equal to this instance; otherwise, <c>false</c> .
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dbEntityEntry.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
            The <see cref="T:System.Object" /> to compare with this instance.
            </param>
        <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            Two <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> instances are considered equal if they are both entries for
            the same entity on the same <see cref="T:System.Data.Entity.DbContext" />.
            </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c> .
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseValues">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbPropertyValues GetDatabaseValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbPropertyValues GetDatabaseValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetDatabaseValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDatabaseValues () As DbPropertyValues" />
      <MemberSignature Language="F#" Value="member this.GetDatabaseValues : unit -&gt; System.Data.Entity.Infrastructure.DbPropertyValues" Usage="dbEntityEntry.GetDatabaseValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbPropertyValues</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Queries the database for copies of the values of the tracked entity as they currently exist in the database.
            Note that changing the values in the returned dictionary will not update the values in the database.
            If the entity is not found in the database then null is returned.
            </summary>
        <returns> The store values. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseValuesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.Entity.Infrastructure.DbPropertyValues&gt; GetDatabaseValuesAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.Entity.Infrastructure.DbPropertyValues&gt; GetDatabaseValuesAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetDatabaseValuesAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDatabaseValuesAsync () As Task(Of DbPropertyValues)" />
      <MemberSignature Language="F#" Value="member this.GetDatabaseValuesAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Data.Entity.Infrastructure.DbPropertyValues&gt;" Usage="dbEntityEntry.GetDatabaseValuesAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Entity.Infrastructure.DbPropertyValues&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Asynchronously queries the database for copies of the values of the tracked entity as they currently exist in the database.
            Note that changing the values in the returned dictionary will not update the values in the database.
            If the entity is not found in the database then null is returned.
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            The task result contains the store values.
            </returns>
        <remarks>
            Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseValuesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Data.Entity.Infrastructure.DbPropertyValues&gt; GetDatabaseValuesAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Data.Entity.Infrastructure.DbPropertyValues&gt; GetDatabaseValuesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetDatabaseValuesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetDatabaseValuesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Data.Entity.Infrastructure.DbPropertyValues&gt;" Usage="dbEntityEntry.GetDatabaseValuesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Data.Entity.Infrastructure.DbPropertyValues&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <summary>
            Asynchronously queries the database for copies of the values of the tracked entity as they currently exist in the database.
            Note that changing the values in the returned dictionary will not update the values in the database.
            If the entity is not found in the database then null is returned.
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            The task result contains the store values.
            </returns>
        <remarks>
            Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dbEntityEntry.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns a hash code for this instance.
            </summary>
        <returns> A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="dbEntityEntry.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidationResult">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Validation.DbEntityValidationResult GetValidationResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Validation.DbEntityValidationResult GetValidationResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetValidationResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValidationResult () As DbEntityValidationResult" />
      <MemberSignature Language="F#" Value="member this.GetValidationResult : unit -&gt; System.Data.Entity.Validation.DbEntityValidationResult" Usage="dbEntityEntry.GetValidationResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Validation.DbEntityValidationResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Validates this <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> instance and returns validation result.
            </summary>
        <returns>
            Entity validation result. Possibly null if
            DbContext.ValidateEntity(DbEntityEntry, IDictionary{object, object})
            method is overridden.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbMemberEntry Member (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbMemberEntry Member(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Member(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Member (propertyName As String) As DbMemberEntry" />
      <MemberSignature Language="F#" Value="member this.Member : string -&gt; System.Data.Entity.Infrastructure.DbMemberEntry" Usage="dbEntityEntry.Member propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbMemberEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"> The name of the member. </param>
        <summary>
            Gets an object that represents a member of the entity.  The runtime type of the returned object will
            vary depending on what kind of member is asked for.  The currently supported member types and their return
            types are:
            Reference navigation property: <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry" />.
            Collection navigation property: <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry" />.
            Primitive/scalar property: <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" />.
            Complex property: <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry" />.
            </summary>
        <returns> An object representing the member. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Member&lt;TMember&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbMemberEntry&lt;TEntity,TMember&gt; Member&lt;TMember&gt; (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbMemberEntry`2&lt;!TEntity, !!TMember&gt; Member&lt;TMember&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Member``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Member(Of TMember) (propertyName As String) As DbMemberEntry(Of TEntity, TMember)" />
      <MemberSignature Language="F#" Value="member this.Member : string -&gt; System.Data.Entity.Infrastructure.DbMemberEntry&lt;'Entity, 'Member (requires 'Entity : null)&gt;" Usage="dbEntityEntry.Member propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbMemberEntry&lt;TEntity,TMember&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMember" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TMember"> The type of the member. </typeparam>
        <param name="propertyName"> The name of the member. </param>
        <summary>
            Gets an object that represents a member of the entity.  The runtime type of the returned object will
            vary depending on what kind of member is asked for.  The currently supported member types and their return
            types are:
            Reference navigation property: <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2" />.
            Collection navigation property: <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" />.
            Primitive/scalar property: <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2" />.
            Complex property: <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2" />.
            </summary>
        <returns> An object representing the member. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.Entity.Infrastructure.DbEntityEntry (System.Data.Entity.Infrastructure.DbEntityEntry&lt;TEntity&gt; entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Data.Entity.Infrastructure.DbEntityEntry op_Implicit(class System.Data.Entity.Infrastructure.DbEntityEntry`1&lt;!TEntity&gt; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.op_Implicit(System.Data.Entity.Infrastructure.DbEntityEntry{`0})~System.Data.Entity.Infrastructure.DbEntityEntry" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (entry As DbEntityEntry(Of TEntity)) As DbEntityEntry" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Data.Entity.Infrastructure.DbEntityEntry&lt;'Entity (requires 'Entity : null)&gt; -&gt; System.Data.Entity.Infrastructure.DbEntityEntry" Usage="System.Data.Entity.Infrastructure.DbEntityEntry&lt;'Entity (requires 'Entity : null)&gt;.op_Implicit entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2225:OperatorOverloadsHaveNamedAlternates", Justification="Intentionally just implicit to reduce API clutter.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Data.Entity.Infrastructure.DbEntityEntry&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="entry">The object representing the tracked entity.</param>
        <summary>
            Returns a new instance of the non-generic <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> class for
            the tracked entity represented by this object.
            </summary>
        <returns> A non-generic version. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValues">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbPropertyValues OriginalValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Infrastructure.DbPropertyValues OriginalValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.OriginalValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalValues As DbPropertyValues" />
      <MemberSignature Language="F#" Value="member this.OriginalValues : System.Data.Entity.Infrastructure.DbPropertyValues" Usage="System.Data.Entity.Infrastructure.DbEntityEntry&lt;'Entity (requires 'Entity : null)&gt;.OriginalValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbPropertyValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the original property values for the tracked entity represented by this object.
            The original values are usually the entity's property values as they were when last queried from
            the database.
            </summary>
        <value> The original values. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbPropertyEntry Property (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbPropertyEntry Property(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Property(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Property (propertyName As String) As DbPropertyEntry" />
      <MemberSignature Language="F#" Value="member this.Property : string -&gt; System.Data.Entity.Infrastructure.DbPropertyEntry" Usage="dbEntityEntry.Property propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbPropertyEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"> The name of the property. </param>
        <summary>
            Gets an object that represents a scalar or complex property of this entity.
            </summary>
        <returns> An object representing the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbPropertyEntry&lt;TEntity,TProperty&gt; Property&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,TProperty&gt;&gt; property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbPropertyEntry`2&lt;!TEntity, !!TProperty&gt; Property&lt;TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, !!TProperty&gt;&gt; property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Property(Of TProperty) (property As Expression(Of Func(Of TEntity, TProperty))) As DbPropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="member this.Property : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, 'Property&gt;&gt; -&gt; System.Data.Entity.Infrastructure.DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="dbEntityEntry.Property property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1719:ParameterNamesShouldNotMatchMemberNames", Justification="Rule predates more fluent naming conventions.", MessageId="0#")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbPropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="property" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty"> The type of the property. </typeparam>
        <param name="property"> An expression representing the property. </param>
        <summary>
            Gets an object that represents a scalar or complex property of this entity.
            </summary>
        <returns> An object representing the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbPropertyEntry&lt;TEntity,TProperty&gt; Property&lt;TProperty&gt; (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbPropertyEntry`2&lt;!TEntity, !!TProperty&gt; Property&lt;TProperty&gt;(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Property``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Property(Of TProperty) (propertyName As String) As DbPropertyEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="member this.Property : string -&gt; System.Data.Entity.Infrastructure.DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" Usage="dbEntityEntry.Property propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbPropertyEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty"> The type of the property. </typeparam>
        <param name="propertyName"> The name of the property. </param>
        <summary>
            Gets an object that represents a scalar or complex property of this entity.
            </summary>
        <returns> An object representing the property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbReferenceEntry Reference (string navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbReferenceEntry Reference(string navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Reference (navigationProperty As String) As DbReferenceEntry" />
      <MemberSignature Language="F#" Value="member this.Reference : string -&gt; System.Data.Entity.Infrastructure.DbReferenceEntry" Usage="dbEntityEntry.Reference navigationProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbReferenceEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="navigationProperty"> The name of the navigation property. </param>
        <summary>
            Gets an object that represents the reference (i.e. non-collection) navigation property from this
            entity to another entity.
            </summary>
        <returns> An object representing the navigation property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbReferenceEntry&lt;TEntity,TProperty&gt; Reference&lt;TProperty&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TEntity,TProperty&gt;&gt; navigationProperty) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbReferenceEntry`2&lt;!TEntity, !!TProperty&gt; Reference&lt;class TProperty&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TEntity, !!TProperty&gt;&gt; navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Reference(Of TProperty As Class) (navigationProperty As Expression(Of Func(Of TEntity, TProperty))) As DbReferenceEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="member this.Reference : System.Linq.Expressions.Expression&lt;Func&lt;'Entity, 'Property&gt;&gt; -&gt; System.Data.Entity.Infrastructure.DbReferenceEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="dbEntityEntry.Reference navigationProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbReferenceEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="navigationProperty" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty"> The type of the property. </typeparam>
        <param name="navigationProperty"> An expression representing the navigation property. </param>
        <summary>
            Gets an object that represents the reference (i.e. non-collection) navigation property from this
            entity to another entity.
            </summary>
        <returns> An object representing the navigation property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference&lt;TProperty&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbReferenceEntry&lt;TEntity,TProperty&gt; Reference&lt;TProperty&gt; (string navigationProperty) where TProperty : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbReferenceEntry`2&lt;!TEntity, !!TProperty&gt; Reference&lt;class TProperty&gt;(string navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reference``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Reference(Of TProperty As Class) (navigationProperty As String) As DbReferenceEntry(Of TEntity, TProperty)" />
      <MemberSignature Language="F#" Value="member this.Reference : string -&gt; System.Data.Entity.Infrastructure.DbReferenceEntry&lt;'Entity, 'Property (requires 'Entity : null and 'Property : null)&gt; (requires 'Property : null)" Usage="dbEntityEntry.Reference navigationProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbReferenceEntry&lt;TEntity,TProperty&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProperty">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="navigationProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProperty"> The type of the property. </typeparam>
        <param name="navigationProperty"> The name of the navigation property. </param>
        <summary>
            Gets an object that represents the reference (i.e. non-collection) navigation property from this
            entity to another entity.
            </summary>
        <returns> An object representing the navigation property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reload ()" />
      <MemberSignature Language="F#" Value="member this.Reload : unit -&gt; unit" Usage="dbEntityEntry.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Reloads the entity from the database overwriting any property values with values from the database.
            The entity will be in the Unchanged state after calling this method.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ReloadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ReloadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ReloadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReloadAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.ReloadAsync : unit -&gt; System.Threading.Tasks.Task" Usage="dbEntityEntry.ReloadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Asynchronously reloads the entity from the database overwriting any property values with values from the database.
            The entity will be in the Unchanged state after calling this method.
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            </returns>
        <remarks>
            Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReloadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ReloadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ReloadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ReloadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.ReloadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="dbEntityEntry.ReloadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <summary>
            Asynchronously reloads the entity from the database overwriting any property values with values from the database.
            The entity will be in the Unchanged state after calling this method.
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            </returns>
        <remarks>
            Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Data.Entity.EntityState State { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.EntityState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.State" />
      <MemberSignature Language="VB.NET" Value="Public Property State As EntityState" />
      <MemberSignature Language="F#" Value="member this.State : System.Data.Entity.EntityState with get, set" Usage="System.Data.Entity.Infrastructure.DbEntityEntry&lt;'Entity (requires 'Entity : null)&gt;.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.EntityState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the state of the entity.
            </summary>
        <value> The state. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dbEntityEntry.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>