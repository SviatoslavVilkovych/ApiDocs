<Type Name="SqlCeConnectionFactory" FullName="System.Data.Entity.Infrastructure.SqlCeConnectionFactory">
  <TypeSignature Language="C#" Value="public sealed class SqlCeConnectionFactory : System.Data.Entity.Infrastructure.IDbConnectionFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlCeConnectionFactory extends System.Object implements class System.Data.Entity.Infrastructure.IDbConnectionFactory" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.SqlCeConnectionFactory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlCeConnectionFactory&#xA;Implements IDbConnectionFactory" />
  <TypeSignature Language="F#" Value="type SqlCeConnectionFactory = class&#xA;    interface IDbConnectionFactory" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Entity.Infrastructure.IDbConnectionFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Instances of this class are used to create DbConnection objects for
            SQL Server Compact Edition based on a given database name or connection string.
            </summary>
    <remarks>
            It is necessary to provide the provider invariant name of the SQL Server Compact
            Edition to use when creating an instance of this class.  This is because different
            versions of SQL Server Compact Editions use different invariant names.
            An instance of this class can be set on the <see cref="T:System.Data.Entity.Database" /> class to
            cause all DbContexts created with no connection information or just a database
            name or connection string to use SQL Server Compact Edition by default.
            This class is immutable since multiple threads may access instances simultaneously
            when creating connections.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCeConnectionFactory (string providerInvariantName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerInvariantName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerInvariantName As String)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Infrastructure.SqlCeConnectionFactory : string -&gt; System.Data.Entity.Infrastructure.SqlCeConnectionFactory" Usage="new System.Data.Entity.Infrastructure.SqlCeConnectionFactory providerInvariantName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"> The provider invariant name that specifies the version of SQL Server Compact Edition that should be used. </param>
        <summary>
            Creates a new connection factory with empty (default) DatabaseDirectory and BaseConnectionString
            properties.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlCeConnectionFactory (string providerInvariantName, string databaseDirectory, string baseConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerInvariantName, string databaseDirectory, string baseConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerInvariantName As String, databaseDirectory As String, baseConnectionString As String)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Infrastructure.SqlCeConnectionFactory : string * string * string -&gt; System.Data.Entity.Infrastructure.SqlCeConnectionFactory" Usage="new System.Data.Entity.Infrastructure.SqlCeConnectionFactory (providerInvariantName, databaseDirectory, baseConnectionString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
        <Parameter Name="databaseDirectory" Type="System.String" />
        <Parameter Name="baseConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName"> The provider invariant name that specifies the version of SQL Server Compact Edition that should be used. </param>
        <param name="databaseDirectory"> The path to prepend to the database name that will form the file name used by SQL Server Compact Edition when it creates or reads the database file. An empty string means that SQL Server Compact Edition will use its default for the database file location. </param>
        <param name="baseConnectionString"> The connection string to use for options to the database other than the 'Data Source'. The Data Source will be prepended to this string based on the database name when CreateConnection is called. </param>
        <summary>
            Creates a new connection factory with the given DatabaseDirectory and BaseConnectionString properties.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseConnectionString">
      <MemberSignature Language="C#" Value="public string BaseConnectionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.BaseConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseConnectionString As String" />
      <MemberSignature Language="F#" Value="member this.BaseConnectionString : string" Usage="System.Data.Entity.Infrastructure.SqlCeConnectionFactory.BaseConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The connection string to use for options to the database other than the 'Data Source'.
            The Data Source will be prepended to this string based on the database name when
            CreateConnection is called.
            The default is the empty string, which means no other options will be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection CreateConnection (string nameOrConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbConnection CreateConnection(string nameOrConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.CreateConnection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateConnection (nameOrConnectionString As String) As DbConnection" />
      <MemberSignature Language="F#" Value="abstract member CreateConnection : string -&gt; System.Data.Common.DbConnection&#xA;override this.CreateConnection : string -&gt; System.Data.Common.DbConnection" Usage="sqlCeConnectionFactory.CreateConnection nameOrConnectionString" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.Infrastructure.IDbConnectionFactory.CreateConnection(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameOrConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nameOrConnectionString"> The database name or connection string. </param>
        <summary>
            Creates a connection for SQL Server Compact Edition based on the given database name or connection string.
            If the given string contains an '=' character then it is treated as a full connection string,
            otherwise it is treated as a database name only.
            </summary>
        <returns> An initialized DbConnection. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseDirectory">
      <MemberSignature Language="C#" Value="public string DatabaseDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DatabaseDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.DatabaseDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DatabaseDirectory As String" />
      <MemberSignature Language="F#" Value="member this.DatabaseDirectory : string" Usage="System.Data.Entity.Infrastructure.SqlCeConnectionFactory.DatabaseDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path to prepend to the database name that will form the file name used by
            SQL Server Compact Edition when it creates or reads the database file.
            The default value is "|DataDirectory|", which means the file will be placed
            in the designated data directory.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderInvariantName">
      <MemberSignature Language="C#" Value="public string ProviderInvariantName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderInvariantName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.ProviderInvariantName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderInvariantName As String" />
      <MemberSignature Language="F#" Value="member this.ProviderInvariantName : string" Usage="System.Data.Entity.Infrastructure.SqlCeConnectionFactory.ProviderInvariantName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The provider invariant name that specifies the version of SQL Server Compact Edition
            that should be used.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>