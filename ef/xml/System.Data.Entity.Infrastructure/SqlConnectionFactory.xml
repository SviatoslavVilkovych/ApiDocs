<Type Name="SqlConnectionFactory" FullName="System.Data.Entity.Infrastructure.SqlConnectionFactory">
  <TypeSignature Language="C#" Value="public sealed class SqlConnectionFactory : System.Data.Entity.Infrastructure.IDbConnectionFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlConnectionFactory extends System.Object implements class System.Data.Entity.Infrastructure.IDbConnectionFactory" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.SqlConnectionFactory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlConnectionFactory&#xA;Implements IDbConnectionFactory" />
  <TypeSignature Language="F#" Value="type SqlConnectionFactory = class&#xA;    interface IDbConnectionFactory" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Entity.Infrastructure.IDbConnectionFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Instances of this class are used to create DbConnection objects for
            SQL Server based on a given database name or connection string. By default, the connection is
            made to '.\SQLEXPRESS'.  This can be changed by changing the base connection
            string when constructing a factory instance.
            </summary>
    <remarks>
            An instance of this class can be set on the <see cref="T:System.Data.Entity.Database" /> class to
            cause all DbContexts created with no connection information or just a database
            name or connection string to use SQL Server by default.
            This class is immutable since multiple threads may access instances simultaneously
            when creating connections.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnectionFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.SqlConnectionFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new connection factory with a default BaseConnectionString property of
            'Data Source=.\SQLEXPRESS; Integrated Security=True; MultipleActiveResultSets=True;'.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlConnectionFactory (string baseConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.SqlConnectionFactory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseConnectionString As String)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Infrastructure.SqlConnectionFactory : string -&gt; System.Data.Entity.Infrastructure.SqlConnectionFactory" Usage="new System.Data.Entity.Infrastructure.SqlConnectionFactory baseConnectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseConnectionString"> The connection string to use for options to the database other than the 'Initial Catalog'. The 'Initial Catalog' will be prepended to this string based on the database name when CreateConnection is called. </param>
        <summary>
            Creates a new connection factory with the given BaseConnectionString property.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseConnectionString">
      <MemberSignature Language="C#" Value="public string BaseConnectionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.SqlConnectionFactory.BaseConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseConnectionString As String" />
      <MemberSignature Language="F#" Value="member this.BaseConnectionString : string" Usage="System.Data.Entity.Infrastructure.SqlConnectionFactory.BaseConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The connection string to use for options to the database other than the 'Initial Catalog'.
            The 'Initial Catalog' will  be prepended to this string based on the database name when
            CreateConnection is called.
            The default is 'Data Source=.\SQLEXPRESS; Integrated Security=True;'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection CreateConnection (string nameOrConnectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Common.DbConnection CreateConnection(string nameOrConnectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.SqlConnectionFactory.CreateConnection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateConnection (nameOrConnectionString As String) As DbConnection" />
      <MemberSignature Language="F#" Value="abstract member CreateConnection : string -&gt; System.Data.Common.DbConnection&#xA;override this.CreateConnection : string -&gt; System.Data.Common.DbConnection" Usage="sqlConnectionFactory.CreateConnection nameOrConnectionString" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Entity.Infrastructure.IDbConnectionFactory.CreateConnection(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Reliability", "CA2000:Dispose objects before losing scope")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameOrConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nameOrConnectionString"> The database name or connection string. </param>
        <summary>
            Creates a connection for SQL Server based on the given database name or connection string.
            If the given string contains an '=' character then it is treated as a full connection string,
            otherwise it is treated as a database name only.
            </summary>
        <returns> An initialized DbConnection. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>