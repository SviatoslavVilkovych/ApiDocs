<Type Name="DbPropertyEntry&lt;TEntity,TProperty&gt;" FullName="System.Data.Entity.Infrastructure.DbPropertyEntry&lt;TEntity,TProperty&gt;">
  <TypeSignature Language="C#" Value="public class DbPropertyEntry&lt;TEntity,TProperty&gt; : System.Data.Entity.Infrastructure.DbMemberEntry&lt;TEntity,TProperty&gt; where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbPropertyEntry`2&lt;class TEntity, TProperty&gt; extends System.Data.Entity.Infrastructure.DbMemberEntry`2&lt;!TEntity, !TProperty&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2" />
  <TypeSignature Language="VB.NET" Value="Public Class DbPropertyEntry(Of TEntity, TProperty)&#xA;Inherits DbMemberEntry(Of TEntity, TProperty)" />
  <TypeSignature Language="F#" Value="type DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt; = class&#xA;    inherit DbMemberEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TProperty" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Entity.Infrastructure.DbMemberEntry&lt;TEntity,TProperty&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TEntity">TEntity</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TProperty">TProperty</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEntity"> The type of the entity to which this property belongs. </typeparam>
    <typeparam name="TProperty"> The type of the property. </typeparam>
    <summary>
            Instances of this class are returned from the Property method of
            <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> and allow access to the state of the scalar
            or complex property.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public override TProperty CurrentValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CurrentValue As TProperty" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : 'Property with get, set" Usage="System.Data.Entity.Infrastructure.DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current value of this property.
            </summary>
        <value> The current value. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityEntry">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Infrastructure.DbEntityEntry&lt;TEntity&gt; EntityEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Infrastructure.DbEntityEntry`1&lt;!TEntity&gt; EntityEntry" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.EntityEntry" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EntityEntry As DbEntityEntry(Of TEntity)" />
      <MemberSignature Language="F#" Value="member this.EntityEntry : System.Data.Entity.Infrastructure.DbEntityEntry&lt;'Entity (requires 'Entity : null)&gt;" Usage="System.Data.Entity.Infrastructure.DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;.EntityEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbEntityEntry&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> to which this property belongs.
            </summary>
        <value> An entry for the entity that owns this property. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModified" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.IsModified" />
      <MemberSignature Language="VB.NET" Value="Public Property IsModified As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsModified : bool with get, set" Usage="System.Data.Entity.Infrastructure.DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;.IsModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the value of this property has been modified since
            it was loaded from the database.
            </summary>
        <value>
          <c>true</c> if this instance is modified; otherwise, <c>false</c> .
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Entity.Infrastructure.DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the property name.
            </summary>
        <value> The property name. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Data.Entity.Infrastructure.DbPropertyEntry (System.Data.Entity.Infrastructure.DbPropertyEntry&lt;TEntity,TProperty&gt; entry);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Data.Entity.Infrastructure.DbPropertyEntry op_Implicit(class System.Data.Entity.Infrastructure.DbPropertyEntry`2&lt;!TEntity, !TProperty&gt; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbPropertyEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbPropertyEntry{`0,`1})~System.Data.Entity.Infrastructure.DbPropertyEntry" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (entry As DbPropertyEntry(Of TEntity, TProperty)) As DbPropertyEntry" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Data.Entity.Infrastructure.DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt; -&gt; System.Data.Entity.Infrastructure.DbPropertyEntry" Usage="System.Data.Entity.Infrastructure.DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;.op_Implicit entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2225:OperatorOverloadsHaveNamedAlternates", Justification="Intentionally just implicit to reduce API clutter.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbPropertyEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Data.Entity.Infrastructure.DbPropertyEntry&lt;TEntity,TProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="entry">The object representing the property.</param>
        <summary>
            Returns a new instance of the non-generic <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" /> class for
            the property represented by this object.
            </summary>
        <returns> A non-generic version. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalValue">
      <MemberSignature Language="C#" Value="public TProperty OriginalValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TProperty OriginalValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.OriginalValue" />
      <MemberSignature Language="VB.NET" Value="Public Property OriginalValue As TProperty" />
      <MemberSignature Language="F#" Value="member this.OriginalValue : 'Property with get, set" Usage="System.Data.Entity.Infrastructure.DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;.OriginalValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the original value of this property.
            </summary>
        <value> The original value. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentProperty">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbComplexPropertyEntry ParentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Infrastructure.DbComplexPropertyEntry ParentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.ParentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentProperty As DbComplexPropertyEntry" />
      <MemberSignature Language="F#" Value="member this.ParentProperty : System.Data.Entity.Infrastructure.DbComplexPropertyEntry" Usage="System.Data.Entity.Infrastructure.DbPropertyEntry&lt;'Entity, 'Property (requires 'Entity : null)&gt;.ParentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbComplexPropertyEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" /> of the property for which this is a nested property.
            This method will only return a non-null entry for properties of complex objects; it will
            return null for properties of the entity itself.
            </summary>
        <value> An entry for the parent complex property, or null if this is an entity property. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>