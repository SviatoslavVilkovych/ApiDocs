<Type Name="DbCollectionEntry" FullName="System.Data.Entity.Infrastructure.DbCollectionEntry">
  <TypeSignature Language="C#" Value="public class DbCollectionEntry : System.Data.Entity.Infrastructure.DbMemberEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbCollectionEntry extends System.Data.Entity.Infrastructure.DbMemberEntry" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.DbCollectionEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class DbCollectionEntry&#xA;Inherits DbMemberEntry" />
  <TypeSignature Language="F#" Value="type DbCollectionEntry = class&#xA;    inherit DbMemberEntry" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Infrastructure.DbMemberEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A non-generic version of the <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" /> class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Cast&lt;TEntity,TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Infrastructure.DbCollectionEntry&lt;TEntity,TElement&gt; Cast&lt;TEntity,TElement&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Infrastructure.DbCollectionEntry`2&lt;!!TEntity, !!TElement&gt; Cast&lt;class TEntity, TElement&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbCollectionEntry.Cast``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Cast(Of TEntity As Class, TElement As Class) () As DbCollectionEntry(Of TEntity, TElement)" />
      <MemberSignature Language="F#" Value="override this.Cast : unit -&gt; System.Data.Entity.Infrastructure.DbCollectionEntry&lt;'Entity, 'Element (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="dbCollectionEntry.Cast " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbCollectionEntry&lt;TEntity,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity"> The type of entity on which the member is declared. </typeparam>
        <typeparam name="TElement"> The type of the collection element. </typeparam>
        <summary>
            Returns the equivalent generic <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" /> object.
            </summary>
        <returns> The equivalent generic object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public override object CurrentValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbCollectionEntry.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CurrentValue As Object" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : obj with get, set" Usage="System.Data.Entity.Infrastructure.DbCollectionEntry.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current value of the navigation property.  The current value is
            the entity that the navigation property references.
            </summary>
        <value> The current value. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityEntry">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Infrastructure.DbEntityEntry EntityEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Infrastructure.DbEntityEntry EntityEntry" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbCollectionEntry.EntityEntry" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EntityEntry As DbEntityEntry" />
      <MemberSignature Language="F#" Value="member this.EntityEntry : System.Data.Entity.Infrastructure.DbEntityEntry" Usage="System.Data.Entity.Infrastructure.DbCollectionEntry.EntityEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Infrastructure.DbEntityEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> to which this navigation property belongs.
            </summary>
        <value> An entry for the entity that owns this navigation property. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbCollectionEntry.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLoaded As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool with get, set" Usage="System.Data.Entity.Infrastructure.DbCollectionEntry.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether all entities of this collection have been loaded from the database.
            </summary>
        <value>
          <c>true</c> if all the related entities are loaded or the IsLoaded has been explicitly set to true; otherwise, <c>false</c>.
            </value>
        <remarks>
            Loading the related entities from the database either using lazy-loading, as part of a query, or explicitly
            with one of the Load methods will set the IsLoaded flag to true.
            IsLoaded can be explicitly set to true to prevent the related entities of this collection from being lazy-loaded.
            This can be useful if the application has caused a subset of related entities to be loaded into this collection
            and wants to prevent any other entities from being loaded automatically.
            Note that explict loading using one of the Load methods will load all related entities from the database
            regardless of whether or not IsLoaded is true.
            When any related entity in the collection is detached the IsLoaded flag is reset to false indicating that the
            not all related entities are now loaded.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbCollectionEntry.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="dbCollectionEntry.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Loads the collection of entities from the database.
            Note that entities that already exist in the context are not overwritten with values from the database.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbCollectionEntry.LoadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : unit -&gt; System.Threading.Tasks.Task" Usage="dbCollectionEntry.LoadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Asynchronously loads the collection of entities from the database.
            Note that entities that already exist in the context are not overwritten with values from the database.
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            </returns>
        <remarks>
            Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbCollectionEntry.LoadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="dbCollectionEntry.LoadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <summary>
            Asynchronously loads the collection of entities from the database.
            Note that entities that already exist in the context are not overwritten with values from the database.
            </summary>
        <returns>
            A task that represents the asynchronous operation.
            </returns>
        <remarks>
            Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
            that any asynchronous operations have completed before calling another method on this context.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbCollectionEntry.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Entity.Infrastructure.DbCollectionEntry.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the property name.
            </summary>
        <value> The property name. </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable Query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.IQueryable Query() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbCollectionEntry.Query" />
      <MemberSignature Language="VB.NET" Value="Public Function Query () As IQueryable" />
      <MemberSignature Language="F#" Value="member this.Query : unit -&gt; System.Linq.IQueryable" Usage="dbCollectionEntry.Query " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the query that would be used to load this collection from the database.
            The returned query can be modified using LINQ to perform filtering or operations in the database, such
            as counting the number of entities in the collection in the database without actually loading them.
            </summary>
        <returns> A query for the collection. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>