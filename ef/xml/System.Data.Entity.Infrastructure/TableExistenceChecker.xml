<Type Name="TableExistenceChecker" FullName="System.Data.Entity.Infrastructure.TableExistenceChecker">
  <TypeSignature Language="C#" Value="public abstract class TableExistenceChecker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TableExistenceChecker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.TableExistenceChecker" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TableExistenceChecker" />
  <TypeSignature Language="F#" Value="type TableExistenceChecker = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Implemented by Entity Framework providers and used to check whether or not tables exist
                in a given database. This is used by database initializers when determining whether or not to
                treat an existing database as empty such that tables should be created.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TableExistenceChecker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.TableExistenceChecker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnyModelTableExistsInDatabase">
      <MemberSignature Language="C#" Value="public abstract bool AnyModelTableExistsInDatabase (System.Data.Entity.Core.Objects.ObjectContext context, System.Data.Common.DbConnection connection, System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.EntitySet&gt; modelTables, string edmMetadataContextTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AnyModelTableExistsInDatabase(class System.Data.Entity.Core.Objects.ObjectContext context, class System.Data.Common.DbConnection connection, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Metadata.Edm.EntitySet&gt; modelTables, string edmMetadataContextTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.TableExistenceChecker.AnyModelTableExistsInDatabase(System.Data.Entity.Core.Objects.ObjectContext,System.Data.Common.DbConnection,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EntitySet},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AnyModelTableExistsInDatabase (context As ObjectContext, connection As DbConnection, modelTables As IEnumerable(Of EntitySet), edmMetadataContextTableName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AnyModelTableExistsInDatabase : System.Data.Entity.Core.Objects.ObjectContext * System.Data.Common.DbConnection * seq&lt;System.Data.Entity.Core.Metadata.Edm.EntitySet&gt; * string -&gt; bool" Usage="tableExistenceChecker.AnyModelTableExistsInDatabase (context, connection, modelTables, edmMetadataContextTableName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Entity.Core.Objects.ObjectContext" />
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
        <Parameter Name="modelTables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.EntitySet&gt;" />
        <Parameter Name="edmMetadataContextTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
                The context for which table checking is being performed, usually used to obtain an appropriate
                <see cref="T:System.Data.Entity.Infrastructure.Interception.DbInterceptionContext" />.
            </param>
        <param name="connection">
                A connection to the database. May be open or closed; should be closed again if opened. Do not
                dispose.
            </param>
        <param name="modelTables">The tables to check for existence.</param>
        <param name="edmMetadataContextTableName">The name of the EdmMetadata table to check for existence.</param>
        <summary>
                When overridden in a derived class checks where the given tables exist in the database
                for the given connection.
            </summary>
        <returns>True if any of the model tables or EdmMetadata table exists.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableName">
      <MemberSignature Language="C#" Value="protected virtual string GetTableName (System.Data.Entity.Core.Metadata.Edm.EntitySet modelTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTableName(class System.Data.Entity.Core.Metadata.Edm.EntitySet modelTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.TableExistenceChecker.GetTableName(System.Data.Entity.Core.Metadata.Edm.EntitySet)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTableName (modelTable As EntitySet) As String" />
      <MemberSignature Language="F#" Value="abstract member GetTableName : System.Data.Entity.Core.Metadata.Edm.EntitySet -&gt; string&#xA;override this.GetTableName : System.Data.Entity.Core.Metadata.Edm.EntitySet -&gt; string" Usage="tableExistenceChecker.GetTableName modelTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelTable" Type="System.Data.Entity.Core.Metadata.Edm.EntitySet" />
      </Parameters>
      <Docs>
        <param name="modelTable">The s-space entity set for the table.</param>
        <summary>
                Helper method to get the table name for the given s-space <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />.
            </summary>
        <returns>The table name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>