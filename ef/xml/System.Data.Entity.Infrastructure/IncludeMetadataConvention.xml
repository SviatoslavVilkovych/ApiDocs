<Type Name="IncludeMetadataConvention" FullName="System.Data.Entity.Infrastructure.IncludeMetadataConvention">
  <TypeSignature Language="C#" Value="public class IncludeMetadataConvention : System.Data.Entity.ModelConfiguration.Conventions.Convention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IncludeMetadataConvention extends System.Data.Entity.ModelConfiguration.Conventions.Convention" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.IncludeMetadataConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class IncludeMetadataConvention&#xA;Inherits Convention" />
  <TypeSignature Language="F#" Value="type IncludeMetadataConvention = class&#xA;    inherit Convention" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.ModelConfiguration.Conventions.Convention</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The IncludeMetadataConvention is no longer used. EdmMetadata is not included in the model. &lt;see cref="EdmModelDiffer" /&gt; is now used to detect changes in the model.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            This <see cref="T:System.Data.Entity.DbModelBuilder" /> convention causes DbModelBuilder to include metadata about the model
            when it builds the model. When <see cref="T:System.Data.Entity.DbContext" /> creates a model by convention it will
            add this convention to the list of those used by the DbModelBuilder.  This will then result in
            model metadata being written to the database if the DbContext is used to create the database.
            This can then be used as a quick check to see if the model has changed since the last time it was
            used against the database.
            This convention can be removed from the <see cref="T:System.Data.Entity.DbModelBuilder" /> conventions by overriding
            the OnModelCreating method on a derived DbContext class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IncludeMetadataConvention ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.IncludeMetadataConvention.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>