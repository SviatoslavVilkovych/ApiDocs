<Type Name="DbContextConfiguration" FullName="System.Data.Entity.Infrastructure.DbContextConfiguration">
  <TypeSignature Language="C#" Value="public class DbContextConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DbContextConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.DbContextConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class DbContextConfiguration" />
  <TypeSignature Language="F#" Value="type DbContextConfiguration = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Returned by the Configuration method of <see cref="T:System.Data.Entity.DbContext" /> to provide access to configuration
            options for the context.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoDetectChangesEnabled">
      <MemberSignature Language="C#" Value="public bool AutoDetectChangesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDetectChangesEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbContextConfiguration.AutoDetectChangesEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDetectChangesEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.AutoDetectChangesEnabled : bool with get, set" Usage="System.Data.Entity.Infrastructure.DbContextConfiguration.AutoDetectChangesEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the <see cref="M:System.Data.Entity.Infrastructure.DbChangeTracker.DetectChanges" />
            method is called automatically by methods of <see cref="T:System.Data.Entity.DbContext" /> and related classes.
            The default value is true.
            </summary>
        <value>
          <c>true</c> if should be called automatically; otherwise, <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureTransactionsForFunctionsAndCommands">
      <MemberSignature Language="C#" Value="public bool EnsureTransactionsForFunctionsAndCommands { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnsureTransactionsForFunctionsAndCommands" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbContextConfiguration.EnsureTransactionsForFunctionsAndCommands" />
      <MemberSignature Language="VB.NET" Value="Public Property EnsureTransactionsForFunctionsAndCommands As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnsureTransactionsForFunctionsAndCommands : bool with get, set" Usage="System.Data.Entity.Infrastructure.DbContextConfiguration.EnsureTransactionsForFunctionsAndCommands" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value that determines whether SQL functions and commands should be always executed in a transaction.
            </summary>
        <value>
            The default transactional behavior.
            </value>
        <remarks>
            This flag determines whether a new transaction will be started when methods such as <see cref="M:System.Data.Entity.Database.ExecuteSqlCommand(System.String,System.Object[])" />
            are executed outside of a transaction.
            Note that this does not change the behavior of <see cref="M:System.Data.Entity.DbContext.SaveChanges" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbContextConfiguration.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dbContextConfiguration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbContextConfiguration.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dbContextConfiguration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbContextConfiguration.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="dbContextConfiguration.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1024:UsePropertiesWhereAppropriate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> of the current instance.
            </summary>
        <returns>The exact runtime type of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LazyLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool LazyLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LazyLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbContextConfiguration.LazyLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property LazyLoadingEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.LazyLoadingEnabled : bool with get, set" Usage="System.Data.Entity.Infrastructure.DbContextConfiguration.LazyLoadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether lazy loading of relationships exposed as
            navigation properties is enabled.  Lazy loading is enabled by default.
            </summary>
        <value>
          <c>true</c> if lazy loading is enabled; otherwise, <c>false</c> .
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyCreationEnabled">
      <MemberSignature Language="C#" Value="public bool ProxyCreationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProxyCreationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbContextConfiguration.ProxyCreationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyCreationEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.ProxyCreationEnabled : bool with get, set" Usage="System.Data.Entity.Infrastructure.DbContextConfiguration.ProxyCreationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether or not the framework will create instances of
            dynamically generated proxy classes whenever it creates an instance of an entity type.
            Note that even if proxy creation is enabled with this flag, proxy instances will only
            be created for entity types that meet the requirements for being proxied.
            Proxy creation is enabled by default.
            </summary>
        <value>
          <c>true</c> if proxy creation is enabled; otherwise, <c>false</c> .
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.DbContextConfiguration.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dbContextConfiguration.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="UseDatabaseNullSemantics">
      <MemberSignature Language="C#" Value="public bool UseDatabaseNullSemantics { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDatabaseNullSemantics" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbContextConfiguration.UseDatabaseNullSemantics" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDatabaseNullSemantics As Boolean" />
      <MemberSignature Language="F#" Value="member this.UseDatabaseNullSemantics : bool with get, set" Usage="System.Data.Entity.Infrastructure.DbContextConfiguration.UseDatabaseNullSemantics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether database null semantics are exhibited when comparing
            two operands, both of which are potentially nullable. The default value is false.
            
            For example (operand1 == operand2) will be translated as:
            
            (operand1 = operand2)
            
            if UseDatabaseNullSemantics is true, respectively
            
            (((operand1 = operand2) AND (NOT (operand1 IS NULL OR operand2 IS NULL))) OR ((operand1 IS NULL) AND (operand2 IS NULL)))
            
            if UseDatabaseNullSemantics is false.
            </summary>
        <value>
          <c>true</c> if database null comparison behavior is enabled, otherwise <c>false</c> .
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateOnSaveEnabled">
      <MemberSignature Language="C#" Value="public bool ValidateOnSaveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateOnSaveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.DbContextConfiguration.ValidateOnSaveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateOnSaveEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.ValidateOnSaveEnabled : bool with get, set" Usage="System.Data.Entity.Infrastructure.DbContextConfiguration.ValidateOnSaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether tracked entities should be validated automatically when
            <see cref="M:System.Data.Entity.DbContext.SaveChanges" /> is invoked.
            The default value is true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>