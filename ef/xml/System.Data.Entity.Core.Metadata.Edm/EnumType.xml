<Type Name="EnumType" FullName="System.Data.Entity.Core.Metadata.Edm.EnumType">
  <TypeSignature Language="C#" Value="public class EnumType : System.Data.Entity.Core.Metadata.Edm.SimpleType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumType extends System.Data.Entity.Core.Metadata.Edm.SimpleType" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Metadata.Edm.EnumType" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumType&#xA;Inherits SimpleType" />
  <TypeSignature Language="F#" Value="type EnumType = class&#xA;    inherit SimpleType" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Metadata.Edm.SimpleType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents an enumeration type.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuiltInTypeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EnumType.BuiltInTypeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BuiltInTypeKind As BuiltInTypeKind" />
      <MemberSignature Language="F#" Value="member this.BuiltInTypeKind : System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" Usage="System.Data.Entity.Core.Metadata.Edm.EnumType.BuiltInTypeKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Returns the kind of the type </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Metadata.Edm.EnumType Create (string name, string namespaceName, System.Data.Entity.Core.Metadata.Edm.PrimitiveType underlyingType, bool isFlags, System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.EnumMember&gt; members, System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; metadataProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Metadata.Edm.EnumType Create(string name, string namespaceName, class System.Data.Entity.Core.Metadata.Edm.PrimitiveType underlyingType, bool isFlags, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Metadata.Edm.EnumMember&gt; members, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; metadataProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EnumType.Create(System.String,System.String,System.Data.Entity.Core.Metadata.Edm.PrimitiveType,System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EnumMember},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (name As String, namespaceName As String, underlyingType As PrimitiveType, isFlags As Boolean, members As IEnumerable(Of EnumMember), metadataProperties As IEnumerable(Of MetadataProperty)) As EnumType" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Data.Entity.Core.Metadata.Edm.PrimitiveType * bool * seq&lt;System.Data.Entity.Core.Metadata.Edm.EnumMember&gt; * seq&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; -&gt; System.Data.Entity.Core.Metadata.Edm.EnumType" Usage="System.Data.Entity.Core.Metadata.Edm.EnumType.Create (name, namespaceName, underlyingType, isFlags, members, metadataProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms", MessageId="Flags")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="underlyingType" Type="System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />
        <Parameter Name="isFlags" Type="System.Boolean" />
        <Parameter Name="members" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.EnumMember&gt;" />
        <Parameter Name="metadataProperties" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the enumeration type.</param>
        <param name="namespaceName">The namespace of the enumeration type.</param>
        <param name="underlyingType">The underlying type of the enumeration type.</param>
        <param name="isFlags">Indicates whether the enumeration type can be treated as a bit field; that is, a set of flags.</param>
        <param name="members">The members of the enumeration type.</param>
        <param name="metadataProperties">Metadata properties to be associated with the enumeration type.</param>
        <summary>
            Creates a read-only EnumType instance.
            </summary>
        <returns>The newly created EnumType instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">underlyingType is null.</exception>
        <exception cref="T:System.ArgumentException">
            name is null or empty.
            -or-
            namespaceName is null or empty.
            -or-
            underlyingType is not a supported underlying type.
            -or-
            The specified members do not have unique names.
            -or-
            The value of a specified member is not in the range of the underlying type.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="IsFlags">
      <MemberSignature Language="C#" Value="public bool IsFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFlags" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EnumType.IsFlags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFlags As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFlags : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EnumType.IsFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1726:UsePreferredTerms", MessageId="Flags")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets a value indicating whether the enum type is defined as flags (i.e. can be treated as a bit field) </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EnumMember&gt; Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Entity.Core.Metadata.Edm.EnumMember&gt; Members" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EnumType.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As ReadOnlyMetadataCollection(Of EnumMember)" />
      <MemberSignature Language="F#" Value="member this.Members : System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EnumMember&gt;" Usage="System.Data.Entity.Core.Metadata.Edm.EnumType.Members" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EnumMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets a collection of enumeration members for this enumeration type. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.PrimitiveType UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.PrimitiveType UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EnumType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As PrimitiveType" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : System.Data.Entity.Core.Metadata.Edm.PrimitiveType" Usage="System.Data.Entity.Core.Metadata.Edm.EnumType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.PrimitiveType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the underlying type for this enumeration type. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>