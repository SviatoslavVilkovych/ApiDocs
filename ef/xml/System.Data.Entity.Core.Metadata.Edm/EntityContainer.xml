<Type Name="EntityContainer" FullName="System.Data.Entity.Core.Metadata.Edm.EntityContainer">
  <TypeSignature Language="C#" Value="public class EntityContainer : System.Data.Entity.Core.Metadata.Edm.GlobalItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityContainer extends System.Data.Entity.Core.Metadata.Edm.GlobalItem" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityContainer&#xA;Inherits GlobalItem" />
  <TypeSignature Language="F#" Value="type EntityContainer = class&#xA;    inherit GlobalItem" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Metadata.Edm.GlobalItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Class for representing an entity container
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityContainer (string name, System.Data.Entity.Core.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.Entity.Core.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.#ctor(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Core.Metadata.Edm.EntityContainer : string * System.Data.Entity.Core.Metadata.Edm.DataSpace -&gt; System.Data.Entity.Core.Metadata.Edm.EntityContainer" Usage="new System.Data.Entity.Core.Metadata.Edm.EntityContainer (name, dataSpace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Entity.Core.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name">The entity container name.</param>
        <param name="dataSpace">The entity container data space.</param>
        <summary>
            Creates an entity container with the specified name and data space.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if the name argument is null.</exception>
        <exception cref="T:System.ArgumentException">Thrown if the name argument is empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddEntitySetBase">
      <MemberSignature Language="C#" Value="public void AddEntitySetBase (System.Data.Entity.Core.Metadata.Edm.EntitySetBase entitySetBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEntitySetBase(class System.Data.Entity.Core.Metadata.Edm.EntitySetBase entitySetBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.AddEntitySetBase(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="F#" Value="member this.AddEntitySetBase : System.Data.Entity.Core.Metadata.Edm.EntitySetBase -&gt; unit" Usage="entityContainer.AddEntitySetBase entitySetBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetBase" Type="System.Data.Entity.Core.Metadata.Edm.EntitySetBase" />
      </Parameters>
      <Docs>
        <param name="entitySetBase">The entity set to add.</param>
        <summary>
            Adds the specified entity set to the container.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFunctionImport">
      <MemberSignature Language="C#" Value="public void AddFunctionImport (System.Data.Entity.Core.Metadata.Edm.EdmFunction function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFunctionImport(class System.Data.Entity.Core.Metadata.Edm.EdmFunction function) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.AddFunctionImport(System.Data.Entity.Core.Metadata.Edm.EdmFunction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFunctionImport (function As EdmFunction)" />
      <MemberSignature Language="F#" Value="member this.AddFunctionImport : System.Data.Entity.Core.Metadata.Edm.EdmFunction -&gt; unit" Usage="entityContainer.AddFunctionImport function" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Entity.Core.Metadata.Edm.EdmFunction" />
      </Parameters>
      <Docs>
        <param name="function">The function import to add.</param>
        <summary>
            Adds a function import to the container.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociationSets">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.AssociationSet&gt; AssociationSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Entity.Core.Metadata.Edm.AssociationSet&gt; AssociationSets" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.AssociationSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssociationSets As ReadOnlyMetadataCollection(Of AssociationSet)" />
      <MemberSignature Language="F#" Value="member this.AssociationSets : System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.AssociationSet&gt;" Usage="System.Data.Entity.Core.Metadata.Edm.EntityContainer.AssociationSets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.AssociationSet&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the association sets for this entity container. </summary>
        <value> The association sets for this entity container .</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseEntitySets">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EntitySetBase&gt; BaseEntitySets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Entity.Core.Metadata.Edm.EntitySetBase&gt; BaseEntitySets" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.BaseEntitySets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseEntitySets As ReadOnlyMetadataCollection(Of EntitySetBase)" />
      <MemberSignature Language="F#" Value="member this.BaseEntitySets : System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EntitySetBase&gt;" Usage="System.Data.Entity.Core.Metadata.Edm.EntityContainer.BaseEntitySets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EntitySetBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of entity sets and association sets that this
            <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />
            includes.
            </summary>
        <value>
            A <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> object that contains a list of entity sets and association sets that this
            <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />
            includes.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuiltInTypeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.BuiltInTypeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BuiltInTypeKind As BuiltInTypeKind" />
      <MemberSignature Language="F#" Value="member this.BuiltInTypeKind : System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" Usage="System.Data.Entity.Core.Metadata.Edm.EntityContainer.BuiltInTypeKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the built-in type kind for this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.
            </summary>
        <value>
            A <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this
            <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />
            .
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Metadata.Edm.EntityContainer Create (string name, System.Data.Entity.Core.Metadata.Edm.DataSpace dataSpace, System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.EntitySetBase&gt; entitySets, System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.EdmFunction&gt; functionImports, System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; metadataProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Metadata.Edm.EntityContainer Create(string name, valuetype System.Data.Entity.Core.Metadata.Edm.DataSpace dataSpace, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Metadata.Edm.EntitySetBase&gt; entitySets, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Metadata.Edm.EdmFunction&gt; functionImports, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; metadataProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.Create(System.String,System.Data.Entity.Core.Metadata.Edm.DataSpace,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EntitySetBase},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmFunction},System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Data.Entity.Core.Metadata.Edm.DataSpace * seq&lt;System.Data.Entity.Core.Metadata.Edm.EntitySetBase&gt; * seq&lt;System.Data.Entity.Core.Metadata.Edm.EdmFunction&gt; * seq&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; -&gt; System.Data.Entity.Core.Metadata.Edm.EntityContainer" Usage="System.Data.Entity.Core.Metadata.Edm.EntityContainer.Create (name, dataSpace, entitySets, functionImports, metadataProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Entity.Core.Metadata.Edm.DataSpace" />
        <Parameter Name="entitySets" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.EntitySetBase&gt;" />
        <Parameter Name="functionImports" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.EdmFunction&gt;" />
        <Parameter Name="metadataProperties" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity container to be created.</param>
        <param name="dataSpace">DataSpace in which this entity container belongs to.</param>
        <param name="entitySets">Entity sets that will be included in the new container. Can be null.</param>
        <param name="functionImports">Functions that will be included in the new container. Can be null.</param>
        <param name="metadataProperties">Metadata properties to be associated with the instance.</param>
        <summary>
            The factory method for constructing the EntityContainer object.
            </summary>
        <returns>The EntityContainer object.</returns>
        <remarks>The newly created EntityContainer will be read only.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if the name argument is null or empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="EntitySets">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EntitySet&gt; EntitySets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Entity.Core.Metadata.Edm.EntitySet&gt; EntitySets" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.EntitySets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntitySets As ReadOnlyMetadataCollection(Of EntitySet)" />
      <MemberSignature Language="F#" Value="member this.EntitySets : System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EntitySet&gt;" Usage="System.Data.Entity.Core.Metadata.Edm.EntityContainer.EntitySets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EntitySet&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the entity sets for this entity container. </summary>
        <value> The entity sets for this entity container .</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FunctionImports">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EdmFunction&gt; FunctionImports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1&lt;class System.Data.Entity.Core.Metadata.Edm.EdmFunction&gt; FunctionImports" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.FunctionImports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FunctionImports As ReadOnlyMetadataCollection(Of EdmFunction)" />
      <MemberSignature Language="F#" Value="member this.FunctionImports : System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EdmFunction&gt;" Usage="System.Data.Entity.Core.Metadata.Edm.EntityContainer.FunctionImports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection&lt;System.Data.Entity.Core.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies a collection of <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" /> elements. Each function contains the details of a stored procedure that exists in the database or equivalent CommandText that is mapped to an entity and its properties.
            </summary>
        <value>
            A <see cref="T:System.Data.Entity.Core.Metadata.Edm.ReadOnlyMetadataCollection`1" /> that contains
            <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmFunction" />
            elements.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntitySetByName">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.EntitySet GetEntitySetByName (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Core.Metadata.Edm.EntitySet GetEntitySetByName(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.GetEntitySetByName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntitySetByName (name As String, ignoreCase As Boolean) As EntitySet" />
      <MemberSignature Language="F#" Value="member this.GetEntitySetByName : string * bool -&gt; System.Data.Entity.Core.Metadata.Edm.EntitySet" Usage="entityContainer.GetEntitySetByName (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity set that is searched for.</param>
        <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
        <summary>
            Returns an <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> object by using the specified name for the entity set.
            </summary>
        <returns>
            An <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> object that represents the entity set that has the specified name.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipSetByName">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.RelationshipSet GetRelationshipSetByName (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Entity.Core.Metadata.Edm.RelationshipSet GetRelationshipSetByName(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.GetRelationshipSetByName(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipSetByName (name As String, ignoreCase As Boolean) As RelationshipSet" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipSetByName : string * bool -&gt; System.Data.Entity.Core.Metadata.Edm.RelationshipSet" Usage="entityContainer.GetRelationshipSetByName (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.RelationshipSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The name of the relationship set that is searched for.</param>
        <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
        <summary>
            Returns a <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" /> object by using the specified name for the relationship set.
            </summary>
        <returns>
            An <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" /> object that represents the relationship set that has the specified name.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EntityContainer.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EntityContainer.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.
            </summary>
        <value>
            The name of this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEntitySetBase">
      <MemberSignature Language="C#" Value="public void RemoveEntitySetBase (System.Data.Entity.Core.Metadata.Edm.EntitySetBase entitySetBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveEntitySetBase(class System.Data.Entity.Core.Metadata.Edm.EntitySetBase entitySetBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.RemoveEntitySetBase(System.Data.Entity.Core.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="F#" Value="member this.RemoveEntitySetBase : System.Data.Entity.Core.Metadata.Edm.EntitySetBase -&gt; unit" Usage="entityContainer.RemoveEntitySetBase entitySetBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetBase" Type="System.Data.Entity.Core.Metadata.Edm.EntitySetBase" />
      </Parameters>
      <Docs>
        <param name="entitySetBase">The entity set to remove.</param>
        <summary>Removes a specific entity set from the container.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="entityContainer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the name of this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.
            </summary>
        <returns>
            The name of this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityContainer" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntitySetByName">
      <MemberSignature Language="C#" Value="public bool TryGetEntitySetByName (string name, bool ignoreCase, out System.Data.Entity.Core.Metadata.Edm.EntitySet entitySet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntitySetByName(string name, bool ignoreCase, [out] class System.Data.Entity.Core.Metadata.Edm.EntitySet&amp; entitySet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.TryGetEntitySetByName(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.EntitySet@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntitySetByName (name As String, ignoreCase As Boolean, ByRef entitySet As EntitySet) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetEntitySetByName : string * bool *  -&gt; bool" Usage="entityContainer.TryGetEntitySetByName (name, ignoreCase, entitySet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="entitySet" Type="System.Data.Entity.Core.Metadata.Edm.EntitySet" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity set that is searched for.</param>
        <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
        <param name="entitySet">
            When this method returns, contains an <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> object. If there is no entity set, this output parameter contains null.
            </param>
        <summary>
            Returns an <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" /> object by using the specified name for the entity set.
            </summary>
        <returns>true if there is an entity set that matches the search criteria; otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRelationshipSetByName">
      <MemberSignature Language="C#" Value="public bool TryGetRelationshipSetByName (string name, bool ignoreCase, out System.Data.Entity.Core.Metadata.Edm.RelationshipSet relationshipSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetRelationshipSetByName(string name, bool ignoreCase, [out] class System.Data.Entity.Core.Metadata.Edm.RelationshipSet&amp; relationshipSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntityContainer.TryGetRelationshipSetByName(System.String,System.Boolean,System.Data.Entity.Core.Metadata.Edm.RelationshipSet@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRelationshipSetByName (name As String, ignoreCase As Boolean, ByRef relationshipSet As RelationshipSet) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetRelationshipSetByName : string * bool *  -&gt; bool" Usage="entityContainer.TryGetRelationshipSetByName (name, ignoreCase, relationshipSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="relationshipSet" Type="System.Data.Entity.Core.Metadata.Edm.RelationshipSet" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name">The name of the relationship set that is searched for.</param>
        <param name="ignoreCase">true to perform the case-insensitive search; otherwise, false.</param>
        <param name="relationshipSet">
            When this method returns, contains a <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" /> object.
            </param>
        <summary>
            Returns a <see cref="T:System.Data.Entity.Core.Metadata.Edm.RelationshipSet" /> object by using the specified name for the relationship set.
            </summary>
        <returns>true if there is a relationship set that matches the search criteria; otherwise, false. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>