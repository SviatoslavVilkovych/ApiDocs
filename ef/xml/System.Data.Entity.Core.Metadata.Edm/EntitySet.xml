<Type Name="EntitySet" FullName="System.Data.Entity.Core.Metadata.Edm.EntitySet">
  <TypeSignature Language="C#" Value="public class EntitySet : System.Data.Entity.Core.Metadata.Edm.EntitySetBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntitySet extends System.Data.Entity.Core.Metadata.Edm.EntitySetBase" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />
  <TypeSignature Language="VB.NET" Value="Public Class EntitySet&#xA;Inherits EntitySetBase" />
  <TypeSignature Language="F#" Value="type EntitySet = class&#xA;    inherit EntitySetBase" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Metadata.Edm.EntitySetBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a particular usage of a structure defined in EntityType. In the conceptual-model, this represents a set that can 
            query and persist entities. In the store-model it represents a table. 
            From a store-space model-convention it can be used to configure
            table name with <see cref="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.Table" /> property and table schema with <see cref="P:System.Data.Entity.Core.Metadata.Edm.EntitySetBase.Schema" /> property.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuiltInTypeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EntitySet.BuiltInTypeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BuiltInTypeKind As BuiltInTypeKind" />
      <MemberSignature Language="F#" Value="member this.BuiltInTypeKind : System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" Usage="System.Data.Entity.Core.Metadata.Edm.EntitySet.BuiltInTypeKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the built-in type kind for this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />.
            </summary>
        <value>
            A <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this
            <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />
            .
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Metadata.Edm.EntitySet Create (string name, string schema, string table, string definingQuery, System.Data.Entity.Core.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; metadataProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Metadata.Edm.EntitySet Create(string name, string schema, string table, string definingQuery, class System.Data.Entity.Core.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; metadataProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EntitySet.Create(System.String,System.String,System.String,System.String,System.Data.Entity.Core.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string * System.Data.Entity.Core.Metadata.Edm.EntityType * seq&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; -&gt; System.Data.Entity.Core.Metadata.Edm.EntitySet" Usage="System.Data.Entity.Core.Metadata.Edm.EntitySet.Create (name, schema, table, definingQuery, entityType, metadataProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
        <Parameter Name="table" Type="System.String" />
        <Parameter Name="definingQuery" Type="System.String" />
        <Parameter Name="entityType" Type="System.Data.Entity.Core.Metadata.Edm.EntityType" />
        <Parameter Name="metadataProperties" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the EntitySet.</param>
        <param name="schema">The db schema. Can be null.</param>
        <param name="table">The db table. Can be null.</param>
        <param name="definingQuery">
            The provider specific query that should be used to retrieve data for this EntitySet. Can be null.
            </param>
        <param name="entityType">The entity type of the entities that this entity set type contains.</param>
        <param name="metadataProperties">
            Metadata properties that will be added to the newly created EntitySet. Can be null.
            </param>
        <summary>
            The factory method for constructing the EntitySet object.
            </summary>
        <returns>The EntitySet object.</returns>
        <remarks>The newly created EntitySet will be read only.</remarks>
        <exception cref="T:System.ArgumentException">Thrown if the name argument is null or empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public virtual System.Data.Entity.Core.Metadata.Edm.EntityType ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.EntityType ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EntitySet.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ElementType As EntityType" />
      <MemberSignature Language="F#" Value="member this.ElementType : System.Data.Entity.Core.Metadata.Edm.EntityType" Usage="System.Data.Entity.Core.Metadata.Edm.EntitySet.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the entity type of this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />.
            </summary>
        <value>
            An <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntityType" /> object that represents the entity type of this
            <see cref="T:System.Data.Entity.Core.Metadata.Edm.EntitySet" />
            .
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>