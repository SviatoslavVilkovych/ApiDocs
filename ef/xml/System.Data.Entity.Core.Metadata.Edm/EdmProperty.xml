<Type Name="EdmProperty" FullName="System.Data.Entity.Core.Metadata.Edm.EdmProperty">
  <TypeSignature Language="C#" Value="public class EdmProperty : System.Data.Entity.Core.Metadata.Edm.EdmMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EdmProperty extends System.Data.Entity.Core.Metadata.Edm.EdmMember" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class EdmProperty&#xA;Inherits EdmMember" />
  <TypeSignature Language="F#" Value="type EdmProperty = class&#xA;    inherit EdmMember" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Entity.Core.Metadata.Edm.EdmMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            In conceptual-space, EdmProperty represents a property on an Entity.
            In store-space, EdmProperty represents a column in a table.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuiltInTypeKind">
      <MemberSignature Language="C#" Value="public override System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind BuiltInTypeKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.BuiltInTypeKind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BuiltInTypeKind As BuiltInTypeKind" />
      <MemberSignature Language="F#" Value="member this.BuiltInTypeKind : System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.BuiltInTypeKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the built-in type kind for this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" />.
            </summary>
        <value>
            A <see cref="T:System.Data.Entity.Core.Metadata.Edm.BuiltInTypeKind" /> object that represents the built-in type kind for this
            <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" />
            .
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionKind">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.CollectionKind CollectionKind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Core.Metadata.Edm.CollectionKind CollectionKind" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.CollectionKind" />
      <MemberSignature Language="VB.NET" Value="Public Property CollectionKind As CollectionKind" />
      <MemberSignature Language="F#" Value="member this.CollectionKind : System.Data.Entity.Core.Metadata.Edm.CollectionKind with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.CollectionKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.CollectionKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the kind of collection for this model.</summary>
        <value>The kind of collection for this model.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexType">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.ComplexType ComplexType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.ComplexType ComplexType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.ComplexType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComplexType As ComplexType" />
      <MemberSignature Language="F#" Value="member this.ComplexType : System.Data.Entity.Core.Metadata.Edm.ComplexType" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.ComplexType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.ComplexType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the complex type information for this property.</summary>
        <value>The complex type information for this property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyMode">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.ConcurrencyMode ConcurrencyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Core.Metadata.Edm.ConcurrencyMode ConcurrencyMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.ConcurrencyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ConcurrencyMode As ConcurrencyMode" />
      <MemberSignature Language="F#" Value="member this.ConcurrencyMode : System.Data.Entity.Core.Metadata.Edm.ConcurrencyMode with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.ConcurrencyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the concurrency mode for the property.</summary>
        <value>The concurrency mode for the property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Metadata.Edm.EdmProperty Create (string name, System.Data.Entity.Core.Metadata.Edm.TypeUsage typeUsage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Metadata.Edm.EdmProperty Create(string name, class System.Data.Entity.Core.Metadata.Edm.TypeUsage typeUsage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EdmProperty.Create(System.String,System.Data.Entity.Core.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Data.Entity.Core.Metadata.Edm.TypeUsage -&gt; System.Data.Entity.Core.Metadata.Edm.EdmProperty" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.Create (name, typeUsage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EdmProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeUsage" Type="System.Data.Entity.Core.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="name">Name of the property.</param>
        <param name="typeUsage">
            Property <see cref="T:System.Data.Entity.Core.Metadata.Edm.TypeUsage" /></param>
        <summary>
            Creates a new instance of EdmProperty type.
            </summary>
        <returns>A new instance of EdmProperty type</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComplex">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Metadata.Edm.EdmProperty CreateComplex (string name, System.Data.Entity.Core.Metadata.Edm.ComplexType complexType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Metadata.Edm.EdmProperty CreateComplex(string name, class System.Data.Entity.Core.Metadata.Edm.ComplexType complexType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EdmProperty.CreateComplex(System.String,System.Data.Entity.Core.Metadata.Edm.ComplexType)" />
      <MemberSignature Language="F#" Value="static member CreateComplex : string * System.Data.Entity.Core.Metadata.Edm.ComplexType -&gt; System.Data.Entity.Core.Metadata.Edm.EdmProperty" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.CreateComplex (name, complexType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EdmProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="complexType" Type="System.Data.Entity.Core.Metadata.Edm.ComplexType" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the property. </param>
        <param name="complexType"> The type of the property. </param>
        <summary> Creates a new complex property. </summary>
        <returns> The newly created property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEnum">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Metadata.Edm.EdmProperty CreateEnum (string name, System.Data.Entity.Core.Metadata.Edm.EnumType enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Metadata.Edm.EdmProperty CreateEnum(string name, class System.Data.Entity.Core.Metadata.Edm.EnumType enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EdmProperty.CreateEnum(System.String,System.Data.Entity.Core.Metadata.Edm.EnumType)" />
      <MemberSignature Language="F#" Value="static member CreateEnum : string * System.Data.Entity.Core.Metadata.Edm.EnumType -&gt; System.Data.Entity.Core.Metadata.Edm.EdmProperty" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.CreateEnum (name, enumType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EdmProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="enumType" Type="System.Data.Entity.Core.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the property. </param>
        <param name="enumType"> The type of the property. </param>
        <summary> Creates a new enum property. </summary>
        <returns> The newly created property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePrimitive">
      <MemberSignature Language="C#" Value="public static System.Data.Entity.Core.Metadata.Edm.EdmProperty CreatePrimitive (string name, System.Data.Entity.Core.Metadata.Edm.PrimitiveType primitiveType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Entity.Core.Metadata.Edm.EdmProperty CreatePrimitive(string name, class System.Data.Entity.Core.Metadata.Edm.PrimitiveType primitiveType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EdmProperty.CreatePrimitive(System.String,System.Data.Entity.Core.Metadata.Edm.PrimitiveType)" />
      <MemberSignature Language="F#" Value="static member CreatePrimitive : string * System.Data.Entity.Core.Metadata.Edm.PrimitiveType -&gt; System.Data.Entity.Core.Metadata.Edm.EdmProperty" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.CreatePrimitive (name, primitiveType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EdmProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primitiveType" Type="System.Data.Entity.Core.Metadata.Edm.PrimitiveType" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the property. </param>
        <param name="primitiveType"> The type of the property. </param>
        <summary> Creates a new primitive property. </summary>
        <returns> The newly created property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the default value for this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" />.
            </summary>
        <value>
            The default value for this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" />.
            </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if the setter is called when the EdmProperty instance is in ReadOnly state</exception>
      </Docs>
    </Member>
    <Member MemberName="EnumType">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.EnumType EnumType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.EnumType EnumType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.EnumType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnumType As EnumType" />
      <MemberSignature Language="F#" Value="member this.EnumType : System.Data.Entity.Core.Metadata.Edm.EnumType" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.EnumType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the enumeration type information for this property.</summary>
        <value>The enumeration type information for this property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollectionType">
      <MemberSignature Language="C#" Value="public bool IsCollectionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollectionType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsCollectionType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollectionType As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsCollectionType : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsCollectionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the property is a collection type property.</summary>
        <value>true if the property is a collection type property; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComplexType">
      <MemberSignature Language="C#" Value="public bool IsComplexType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsComplexType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsComplexType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsComplexType As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsComplexType : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsComplexType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether this property is a complex type property.</summary>
        <value>true if this property is a complex type property; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnumType">
      <MemberSignature Language="C#" Value="public bool IsEnumType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnumType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsEnumType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnumType As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsEnumType : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsEnumType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether this property is an enumeration type property.</summary>
        <value>true if this property is an enumeration type property; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsFixedLength : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsFixedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether the length of this property is fixed.</summary>
        <value>true if the length of this property is fixed; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLengthConstant">
      <MemberSignature Language="C#" Value="public bool IsFixedLengthConstant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLengthConstant" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsFixedLengthConstant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedLengthConstant As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFixedLengthConstant : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsFixedLengthConstant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the fixed length facet is constant for the database provider.</summary>
        <value>true if the facet is constant; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMaxLength">
      <MemberSignature Language="C#" Value="public bool IsMaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsMaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMaxLength As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsMaxLength : bool with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsMaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether this property uses the maximum length supported by the provider.</summary>
        <value>true if this property uses the maximum length supported by the provider; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMaxLengthConstant">
      <MemberSignature Language="C#" Value="public bool IsMaxLengthConstant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMaxLengthConstant" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsMaxLengthConstant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMaxLengthConstant As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsMaxLengthConstant : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsMaxLengthConstant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the maximum length facet is constant for the database provider.</summary>
        <value>true if the facet is constant; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrecisionConstant">
      <MemberSignature Language="C#" Value="public bool IsPrecisionConstant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrecisionConstant" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsPrecisionConstant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrecisionConstant As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPrecisionConstant : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsPrecisionConstant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the precision facet is constant for the database provider.</summary>
        <value>true if the facet is constant; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitiveType">
      <MemberSignature Language="C#" Value="public bool IsPrimitiveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimitiveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsPrimitiveType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimitiveType As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPrimitiveType : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsPrimitiveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether this property is a primitive type.</summary>
        <value>true if this property is a primitive type; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScaleConstant">
      <MemberSignature Language="C#" Value="public bool IsScaleConstant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsScaleConstant" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsScaleConstant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsScaleConstant As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsScaleConstant : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsScaleConstant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the scale facet is constant for the database provider.</summary>
        <value>true if the facet is constant; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnderlyingPrimitiveType">
      <MemberSignature Language="C#" Value="public bool IsUnderlyingPrimitiveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnderlyingPrimitiveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsUnderlyingPrimitiveType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnderlyingPrimitiveType As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsUnderlyingPrimitiveType : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsUnderlyingPrimitiveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether this property is an underlying primitive type.</summary>
        <value>true if this property is an underlying primitive type; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicode">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsUnicode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsUnicode" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsUnicode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnicode As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsUnicode : Nullable&lt;bool&gt; with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsUnicode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets whether this property is a Unicode property.</summary>
        <value>true if this property is a Unicode property; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeConstant">
      <MemberSignature Language="C#" Value="public bool IsUnicodeConstant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnicodeConstant" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsUnicodeConstant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnicodeConstant As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsUnicodeConstant : bool" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.IsUnicodeConstant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the Unicode facet is constant for the database provider.</summary>
        <value>true if the facet is constant; otherwise, false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxLength : Nullable&lt;int&gt; with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum length of the property.</summary>
        <value>The maximum length of the property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Nullable">
      <MemberSignature Language="C#" Value="public bool Nullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Nullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.Nullable" />
      <MemberSignature Language="VB.NET" Value="Public Property Nullable As Boolean" />
      <MemberSignature Language="F#" Value="member this.Nullable : bool with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.Nullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" /> can have a null value.
            </summary>
        <value>
            true if this <see cref="T:System.Data.Entity.Core.Metadata.Edm.EdmProperty" /> can have a null value; otherwise, false.
            </value>
        <remarks>
            Nullability in the conceptual model and store model is a simple indication of whether or not
            the property is considered nullable. Nullability in the object model is more complex.
            When using convention based mapping (as usually happens with POCO entities), a property in the
            object model is considered nullable if and only if the underlying CLR type is nullable and
            the property is not part of the primary key.
            When using attribute based mapping (usually used with entities that derive from the EntityObject
            base class), a property is considered nullable if the IsNullable flag is set to true in the
            <see cref="T:System.Data.Entity.Core.Objects.DataClasses.EdmScalarPropertyAttribute" /> attribute. This flag can
            be set to true even if the underlying type is not nullable, and can be set to false even if the
            underlying type is nullable. The latter case happens as part of default code generation when
            a non-nullable property in the conceptual model is mapped to a nullable CLR type such as a string.
            In such a case, the Entity Framework treats the property as non-nullable even though the CLR would
            allow null to be set.
            There is no good reason to set a non-nullable CLR type as nullable in the object model and this
            should not be done even though the attribute allows it.
            </remarks>
        <exception cref="T:System.InvalidOperationException">Thrown if the setter is called when the EdmProperty instance is in ReadOnly state</exception>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public Nullable&lt;byte&gt; Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;unsigned int8&gt; Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Nullable(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.Precision : Nullable&lt;byte&gt; with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.Precision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the precision of this property.</summary>
        <value>The precision of this property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimitiveType">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.PrimitiveType PrimitiveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.PrimitiveType PrimitiveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.PrimitiveType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimitiveType As PrimitiveType" />
      <MemberSignature Language="F#" Value="member this.PrimitiveType : System.Data.Entity.Core.Metadata.Edm.PrimitiveType" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.PrimitiveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.PrimitiveType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the primitive type information for this property.</summary>
        <value>The primitive type information for this property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public Nullable&lt;byte&gt; Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;unsigned int8&gt; Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Nullable(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.Scale : Nullable&lt;byte&gt; with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the scale of this property.</summary>
        <value>The scale of this property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataProperties">
      <MemberSignature Language="C#" Value="public void SetMetadataProperties (System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; metadataProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMetadataProperties(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; metadataProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Core.Metadata.Edm.EdmProperty.SetMetadataProperties(System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.MetadataProperty})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMetadataProperties (metadataProperties As IEnumerable(Of MetadataProperty))" />
      <MemberSignature Language="F#" Value="member this.SetMetadataProperties : seq&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt; -&gt; unit" Usage="edmProperty.SetMetadataProperties metadataProperties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataProperties" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Entity.Core.Metadata.Edm.MetadataProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="metadataProperties">The metadata properties to be set.</param>
        <summary>Sets the metadata properties.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreGeneratedPattern">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.StoreGeneratedPattern StoreGeneratedPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Entity.Core.Metadata.Edm.StoreGeneratedPattern StoreGeneratedPattern" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.StoreGeneratedPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreGeneratedPattern As StoreGeneratedPattern" />
      <MemberSignature Language="F#" Value="member this.StoreGeneratedPattern : System.Data.Entity.Core.Metadata.Edm.StoreGeneratedPattern with get, set" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.StoreGeneratedPattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.StoreGeneratedPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the database generation method for the database column associated with this property</summary>
        <value>The store generated pattern for the property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type name of the property.</summary>
        <value>The type name of the property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingPrimitiveType">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Core.Metadata.Edm.PrimitiveType UnderlyingPrimitiveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Core.Metadata.Edm.PrimitiveType UnderlyingPrimitiveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Core.Metadata.Edm.EdmProperty.UnderlyingPrimitiveType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingPrimitiveType As PrimitiveType" />
      <MemberSignature Language="F#" Value="member this.UnderlyingPrimitiveType : System.Data.Entity.Core.Metadata.Edm.PrimitiveType" Usage="System.Data.Entity.Core.Metadata.Edm.EdmProperty.UnderlyingPrimitiveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Core.Metadata.Edm.PrimitiveType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the underlying primitive type information for this property.</summary>
        <value>The underlying primitive type information for this property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>